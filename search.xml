<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[ËÆ∞‚ÄúÈ¶ôËïâÊí≠ÊîæÂô®‚Äù‰∏äÊû∂ÁöÑËæõÈÖ∏ÂéÜÁ®ã]]></title>
    <url>%2F2018%2F10%2F07%2F%E8%AE%B0%E2%80%9C%E9%A6%99%E8%95%89%E6%92%AD%E6%94%BE%E5%99%A8%E2%80%9D%E4%B8%8A%E6%9E%B6%E7%9A%84%E8%BE%9B%E9%85%B8%E5%8E%86%E7%A8%8B%2F</url>
    <content type="text"><![CDATA[ÂÜôÂú®ÂâçÈù¢ÂÖàËØ¥ÁÇπÂ∫üËØùÔºå‰ªé‰∫ãiOSÂºÄÂèë‰ª•Êù•Ôºå‰∏ÄÁõ¥Êúâ‰∏Ä‰∏™ÁõÆÊ†áÔºåÊã•Êúâ‰∏Ä‰∏™Ëá™Â∑±ÁöÑAPP‰∏äÊû∂App StoreÔºåÂπ∂‰∏îÁôª‰∏äËãπÊûúÊé®ËçêÊ¶úÂçïÔºåËøôÂèØËÉΩÊòØÂ§ßÂ§öÊï∞iOSerÁöÑÊ¢¶ÊÉ≥„ÄÇÂú®ËÑëÂ≠êÈáå‰∫ßÁîü‰∫ÜÂêÑÁßçÊÉ≥Ê≥ïÔºå‰ΩÜÊòØÂèëÁé∞Ëá™Â∑±ËÉΩÊÉ≥Âà∞ÁöÑÂà´‰∫∫ÈÉΩÂÅö‰∫ÜÔºåÂπ∂‰∏îÂÅöÁöÑÂæàÂ•ΩÔºåÂä†‰∏äÂ∑•‰ΩúÁîüÊ¥ª‰∏äÁöÑÂæàÂ§ö‰∫ãÊÉÖÔºà‰∏ªË¶ÅÊòØÊáíüòùÔºâÔºå‰∏ÄÊãñÂ∞±ÊòØ3Âπ¥„ÄÇÂêéÊù•Âõ†‰∏∫Ëá™Â∑±ÁöÑÁúüÂÆûÈúÄÊ±ÇÔºåApp StoreÊâæ‰∏çÂà∞ËÉΩÊª°Ë∂≥ÈúÄÊ±ÇÁöÑ‰∫ßÂìÅÔºåÂ∞±ÂÅö‰∫Ü‰∏Ä‰∏™Êí≠ÊîæÂô®Ëá™Â∑±Áî®ÔºåÂú®‰∏≠ÁßãÂÅáÊúüÁã†‰∏ãÂøÉÊù•Ôºå‰π∞‰∫ÜÂºÄÂèëËÄÖË¥¶Âè∑Ôºà688ÔºåÂøÉÁóõÔºÅÔºÅÂ∞±ÂΩì‰∏∫‰∫ÜÊ¢¶ÊÉ≥ÂÖÖÂÄºÂêß„ÄÇÔºâÔºåÊääËøô‰∏™Êí≠ÊîæÂô®‰∏äÊû∂‰∫Ü„ÄÇ Ë¥≠‰π∞ÂºÄÂèëËÄÖË¥¶Âè∑ÂÖ≥‰∫éÊÄé‰πà‰π∞‰∏™‰∫∫ÂºÄÂèëËÄÖË¥¶Âè∑ÔºåÁΩë‰∏äÁöÑÊïôÁ®ã‰∏ÄÊäì‰∏ÄÂ§ßÊääÔºåÊï¥‰∏™Ë¥≠‰π∞ÊµÅÁ®ã‰πüÊ≤°Âï•Â•ΩÊ≥®ÊÑèÁöÑÔºåÊ†πÊçÆÊèêÁ§∫‰∏ÄÊ≠•‰∏ÄÊ≠•Ëµ∞Â∞±OK‰∫Ü„ÄÇ‰ΩÜÊòØÂà∞‰∫ÜÊúÄÂêé‰ªòÊ¨æÁéØËäÇÊääÊàëÂç°‰∫Ü‰∏ÄÂë®ÔºàÂäû‰∫Ü‰∏§Âº†‰ø°Áî®Âç°„ÄÇ„ÄÇ„ÄÇÔºâÔºåÂøÖÈ°ªË¶Åvisa+Èì∂ËÅîÂèåÊ†áÁöÑ‰ø°Áî®Âç°ÔºåÊ≥®ÊÑè‰∏ÄÂÆöË¶ÅÂèåÊ†áÔºåÂè™ÊúâvisaÊàñËÄÖÂè™ÊúâÈì∂ËÅîÈÉΩ‰∏çË°å„ÄÇ‰ªò‰∫ÜÊ¨æ‰∏ÄÂ§©Â∑¶Âè≥ËãπÊûúÂ∞±‰ºöÂèëÊù•ÈÇÆ‰ª∂ÔºåÊèê‰æõË∫´‰ªΩËØÅÊ≠£ÂèçÈù¢ÁÖßÁâáÂ∞±ÂèØ‰ª•‰∫Ü„ÄÇ ‰∏äÊû∂App Store‰∏äÊû∂ÊµÅÁ®ãÂ∞±ËΩªËΩ¶ÁÜüË∑Ø‰∫ÜÔºåÊâìÂåÖ‰∏ä‰º†„ÄÅÂ°´ÂÜôÂêÑÁßçAPPËØ¥Êòé„ÄÅ‰∏ä‰º†ÂõæÊ†á„ÄÅÂÆ£‰º†Âõæ„ÄÅÊèê‰∫§ÂÆ°Ê†∏„ÄÇÊøÄÂä®ÁöÑÊàë‰∏ÄÊôö‰∏äÊ≤°Áù°Â•ΩËßâÔºåÁ¨¨‰∫åÂ§©Êó©‰∏äÊâìÂºÄÈÇÆÁÆ±ÔºåÁ≠âÂæÖÊàëÁöÑÂ±ÖÁÑ∂ÊòØ2.1Â§ßÁ§ºÂåÖÔºàGuideline 2.1 - Information NeededÔºâ„ÄÇ ‰∏ÄÁúãÊàëÂ∞±ÊáµÈÄº‰∫ÜÔºå‰∏äÊû∂Ëøô‰πàÂ§öÊ¨°Á¨¨‰∏ÄÊ¨°ÈÅáÂà∞Ëøô‰πà‰∏•ÂéâÁöÑÂõûÂ§çÔºåÊÑüËßâÂàÜÂàÜÈíüË¶ÅË¢´Â∞ÅÂè∑„ÄÇÁªèËøáÂ§öÊñπÂí®ËØ¢ÔºåÂèëÁé∞ËøôÊòØËãπÊûú‰ªäÂπ¥Êñ∞Êé®Âá∫ÁöÑÂ§ßÁ§ºÂåÖÔºåÂæàÂ§ö‰∫∫ÈÉΩÈÅáÂà∞ËøáÔºå‰∏ÄËà¨ÊòØÊú∫Âô®ÂÆ°Ê†∏ÂõûÂ§çÁöÑÔºåÈÅáÂà∞ËøôÁßçÊÉÖÂÜµÂà´ÊÖåÔºàÈô§Èùû‰Ω†ÊòØÈ©¨Áî≤ÂåÖ„ÄÅÊàñËÄÖÊäÑË¢≠ÁöÑ‰πãÁ±ªÁöÑAPPÔºâÔºå‰ªîÁªÜÊ£ÄÊü•Êù°‰æãÔºåÁÑ∂ÂêéÈÄêÊù°Á≠îÂ§çÔºàÊúÄÂ•ΩÁî®Ëã±ÊñáÔºâ„ÄÇÊúÄÂêéÊàëËøòÂΩïÂà∂‰∫Ü‰∏Ä‰∏™ËßÜÈ¢ëÔºåÊù•ÊºîÁ§∫ÊàëÁöÑAPPÁöÑ‰∏ªË¶ÅÂäüËÉΩÔºå‰∏ä‰º†Âà∞youtubeÔºåÈôÑÂú®‰∫ÜÂ§áÊ≥®„ÄÇÂàÜ‰∫´‰∏ãÊàëÁöÑÁ≠îÂ§çÊ®°ÊùøÔºö 12345678910111213141516171819202122232425262728293031323334353637383940414243Â∞äÊï¨ÁöÑËãπÊûúÂÆ°Ê†∏Âõ¢ÈòüÔºö ÊÑüË∞¢ÊÇ®ÁöÑËÄêÂøÉÂÆ°Ê†∏ÔºåÈíàÂØπ‰∏ãÈù¢ÈóÆÈ¢òÔºåÊàë‰ª¨ÂÅö‰∫ÜËØ¶ÁªÜÁöÑÊ£ÄÊü• ÂÖ≥‰∫é Guideline 2.11.1.6 - ‚ÄúÈ¶ôËïâÊí≠ÊîæÂô®‚ÄùÊ≤°ÊúâÂåÖÂê´‰ªª‰ΩïÁöÑËôöÂÅá‰∏éËØØÂØº‰ø°ÊÅØÔºåÂÖ®ÈÉ®ÈÉΩÊòØÁúüÂÆûÊúâÊïàÁöÑ2.3.0 - ‚ÄúÈ¶ôËïâÊí≠ÊîæÂô®‚ÄùÊ≤°ÊúâÂú®ÈÄöËøáÂÆ°Ê†∏Âêé‰øÆÊîπ‰ªª‰ΩïÊ¶ÇÂøµÂíåÂäüËÉΩ2.3.1 - ‚ÄúÈ¶ôËïâÊí≠ÊîæÂô®‚ÄùÊ≤°ÊúâÂåÖÂê´‰ªª‰ΩïÈöêËóèÂäüËÉΩÔºåÊ≤°ÊúâÂåÖÂê´ËµåÂçö„ÄÅÂΩ©Á•®ÁΩëÁ´ô3.1.1 - ‚ÄúÈ¶ôËïâÊí≠ÊîæÂô®‚ÄùÂÜÖÊ≤°Êúâ‰ªª‰ΩïÂÜÖË¥≠„ÄÅÊîØ‰ªòÂäüËÉΩÔºåÊâÄÊúâÂäüËÉΩÈÉΩÊòØÂÖçË¥πÊèê‰æõÁªôÁî®Êà∑3.2.1 - ‚ÄúÈ¶ôËïâÊí≠ÊîæÂô®‚ÄùÂÜÖÈÉ®ÂåÖÂê´‰ªª‰ΩïË¥∑Ê¨æÁ≠âÈáëËûçÊúçÂä°4.3.0 - ‚ÄúÈ¶ôËïâÊí≠ÊîæÂô®‚ÄùÂäüËÉΩÈÉΩÊòØÁã¨Á´ãÂºÄÂèëÔºå‰∏çÂ≠òÂú®ÊäÑË¢≠ÊàñËÄÖÂ§ßÈáèÁõ∏‰ºº5.2.1 - ‚ÄúÈ¶ôËïâÊí≠ÊîæÂô®‚ÄùÊ≤°ÊúâÊ≥ï‰∫∫ÂÆû‰ΩìÂíåÁâàÊùÉÈ£éÈô©5.2.3 - ‚ÄúÈ¶ôËïâÊí≠ÊîæÂô®‚ÄùÊ≤°ÊúâÊèê‰æõÊñá‰ª∂ÂÖ±‰∫´ÊúçÂä°ÔºåÊàñËÄÖÂÖ∂ÂÆÉÂ≠òÂú®ÁâàÊùÉÈóÆÈ¢òÁöÑÈü≥ËßÜÈ¢ë5.3.4 - ‚ÄúÈ¶ôËïâÊí≠ÊîæÂô®‚Äù‰ªÖÂú®‰∏≠ÂõΩÂå∫‰∏äÊû∂ÔºåÊ≤°ÊúâËøùËßÑÂÜÖÂÆπÂÖ≥‰∫é Guideline 2.3.7ÊàëÂ∑≤ÁªèÊåâÁÖßËØ¥ÊòéÔºå‰øÆÊîπ‰∫ÜÂÖÉÊï∞ÊçÆÔºåËØ∑ÂÆ°Ê†∏Âõ¢ÈòüÂÜçÊ¨°ÂÆ°Ê†∏„ÄÇÊúÄÂêéÂÜçÊ¨°ÊÑüË∞¢ÊÇ®ËæõËã¶ÁöÑÂÆ°Ê†∏„ÄÇDear Apple Review Team: Thank you for your patience review, we have done a detailed check on the following questions. About Guideline 2.11.1.6 - &quot;Banana Player&quot; does not contain any false and misleading information, all of which are true and effective2.3.0 - &quot;Banana Player&quot; does not modify any concepts and features after passing the review2.3.1 - &quot;Banana Player&quot; does not contain any hidden features, does not contain gambling, lottery sites3.1.1 - There is no in-app purchase and payment function in the ‚ÄúBanana Player‚Äù, all functions are provided to the user free of charge.3.2.1 - &quot;Banana Player&quot; contains any financial services such as loans4.3.0 - The &quot;Banana Player&quot; feature is developed independently, without plagiarism or a lot of similarity5.2.1 - &quot;Banana Player&quot; has no legal entity and copyright risk5.2.3 - &quot;Banana Player&quot; does not provide file sharing services, or other audio and video with copyright issues5.3.4 - &quot;Banana Player&quot; is only available in China, no illegal contentAbout Guideline 2.3.7I have modified the metadata according to the instructions, please review the team again.Finally, thank you again for your hard review. Á¨¨‰∫åÂ§©ÂÆ°Ê†∏ÈÄöËøáÔºåÊàêÂäü‰∏äÊû∂ÔºÅ Êâì‰∏™ÂπøÂëä ‰∏ãËΩΩüîóÔºöhttps://dwz.cn/HvVix2hH ‚ÄúÈ¶ôËïâÊí≠ÊîæÂô®‚ÄùÊòØÊàëÁã¨Á´ãÂºÄÂèëÁöÑÁ¨¨‰∏ÄÊ¨æAPPÔºåÂÖçË¥πÊó†ÂπøÂëä„ÄÇ‰∏ªË¶ÅÂäüËÉΩÂú®ÊâãÊú∫‰∏äÊí≠Êîæ‰ªéÁΩëÁõò„ÄÅÂÖâÁõò„ÄÅÁΩëÁ´ô‰∏ãËΩΩÁöÑÈü≥È¢ëËµÑÊñô„ÄÅËØæÁ®ã„ÄÅÈü≥‰πê„ÄÇÊó†ÈúÄÊï∞ÊçÆÁ∫øÔºåÁî®Wi-FiÂ∞±ÂèØ‰ª•Êã∑Ë¥ùÊñá‰ª∂Âà∞ÊâãÊú∫ÔºåËá™Âä®ËÆ∞ÂΩïÊí≠ÊîæËøõÂ∫¶„ÄÇÂ¶ÇÊûúÊúâÈúÄÊ±ÇÂèØ‰ª•ÊîØÊåÅ‰∏ÄÊ≥¢ÔºåÊúâ‰ªÄ‰πàÈóÆÈ¢òÊ¨¢ËøéËÅîÁ≥ªÊàë„ÄÇ]]></content>
      <tags>
        <tag>iOSÁü•ËØÜÂ∞èÁªì</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ËÆ∞‰∏Ä‰∏™Ë°åÁªìÊùüÁ¨¶ÂºïÂèëÁöÑJSÊä•Èîô]]></title>
    <url>%2F2018%2F09%2F05%2F%E8%AE%B0%E4%B8%80%E4%B8%AA%E8%A1%8C%E7%BB%93%E6%9D%9F%E7%AC%A6%E5%BC%95%E5%8F%91%E7%9A%84JS%E6%8A%A5%E9%94%99%2F</url>
    <content type="text"><![CDATA[ÈóÆÈ¢òÊèèËø∞ÊúÄËøëÈÅáÂà∞‰∏Ä‰∏™Á•ûÂ•áÁöÑBugÔºåÈÄöËøáUIWebViewÁöÑstringByEvaluatingJavaScriptFromString:ÊñπÊ≥ïÊâßË°å‰∏ÄÊÆµJavaScript‰ª£Á†ÅÊó∂ÔºåJavaScriptÊä•Èîô: SyntaxError: Unexpected EOF ÁªèËøá‰ªîÁªÜÁöÑÊéíÊü•ÔºåÂèëÁé∞ÂæÖÊâßË°åÁöÑJavaScript‰ª£Á†ÅÈáåÈù¢ÂåÖÂê´U+2028Â≠óÁ¨¶„ÄÇËøòÊâæÂà∞‰∫ÜStack OverflowÁõ∏ÂÖ≥ËÆ®ËÆ∫„ÄÇJavaScriptËß£ÊûêÂô®‰ºöÊääË°åÂàÜÈöîÁ¨¶U+2028ÂíåÊÆµËêΩÂàÜÈöîÁ¨¶U+2029Ëß£ÊûêÊàê‰∏ÄË°åÁöÑÁªìÊùüÔºå‰ª£Á†ÅÈáåË¶ÅÊòØÂåÖÂê´Ëøô‰∏§‰∏™Â≠óÁ¨¶Áõ∏ÂΩì‰∫éÊç¢Ë°åÔºå‰æãÂ¶ÇÔºö alert(‚Äú\u2028‚Äù) Â∞±‰ºöË¢´Ëß£Êûê‰∏∫ alert(‚Äú‚Äú) ‰∫éÊòØÂ∞±‰∫ßÁîü‰∫ÜËØ≠Ê≥ïÈîôËØØ„ÄÇ Ëß£ÂÜ≥ÊñπÊ°àÊàëÁî®ÁöÑÊñπÊ≥ïÊØîËæÉÁÆÄÂçï„ÄÅÁ≤óÊö¥ÔºåÂú®ÊâßË°åJavaScript‰ª£Á†ÅÂâçÔºåÁõ¥Êé•ËøáÊª§ÊéâËøô‰∏§‰∏™Â≠óÁ¨¶„ÄÇ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö 1234// javaScriptString = [javaScriptString stringByReplacingOccurrencesOfString:@"\u2028" withString:@""]; javaScriptString = [javaScriptString stringByReplacingOccurrencesOfString:@"\u2029" withString:@""]; NSString* ret = [(UIWebView*)_engineWebView stringByEvaluatingJavaScriptFromString:javaScriptString];]]></content>
      <tags>
        <tag>iOSÁü•ËØÜÂ∞èÁªì</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[‰ªé‰∏Ä‰∏™AFNetworkingÂæ™ÁéØÂºïÁî®ËØ¥Ëµ∑]]></title>
    <url>%2F2018%2F08%2F28%2F%E4%BB%8E%E4%B8%80%E4%B8%AAAFNetworking%E5%BE%AA%E7%8E%AF%E5%BC%95%E7%94%A8%E8%AF%B4%E8%B5%B7%2F</url>
    <content type="text"><![CDATA[Êú¨ÊñáÂàÜÊûê‰ΩøÁî®‰ª£Á†ÅÊòØAFNetworking 3.2.1 ÊúÄËøë‰ΩøÁî®Instruments‰∏≠ÁöÑLeaksÂàÜÊûêÈ°πÁõÆÂÜÖÂ≠òÊ≥ÑÈú≤ÔºåÂèëÁé∞‰∫Ü‰∏Ä‰∏™AFNetworkingÁöÑÂæ™ÁéØÂºïÁî®„ÄÇÂ¶Ç‰∏ãÂõæÊâÄÁ§∫Ôºö ÈÄöËøáË∞ÉÁî®Ê†àÂèëÁé∞‰∫ßÁîüÊ≥ÑÈú≤ÁöÑ‰ª£Á†ÅÂú®ËøôÈáåÔºö 12345678910// AFURLSessionManager.m- (instancetype)initWithSessionConfiguration:(NSURLSessionConfiguration *)configuration &#123; // ... ÂàùÂßãÂåñ‰ª£Á†ÅÔºåÁúÅÁï• // ÂØºËá¥Âæ™ÁéØÂºïÁî®ÁöÑÊñπÊ≥ï self.session = [NSURLSession sessionWithConfiguration:self.sessionConfiguration delegate:self delegateQueue:self.operationQueue]; // ... ÂÖ∂ÂÆÉÂàùÂßãÂåñ‰ª£Á†ÅÔºåÁúÅÁï• return self;&#125; Â§ßËá¥ÂéüÂõ†Â∞±ÊòØAFURLSessionManagerÂºïÁî®NSURLSessionÔºåÂêåÊó∂ËÆæÁΩÆNSURLSessionÁöÑdelegate‰∏∫Ëá™Â∑±ÔºåNSURLSession‰ºöÂº∫ÂºïÁî®delegateÔºå‰∫éÊòØ‰∫ßÁîü‰∫ÜÂæ™ÁéØÂºïÁî®„ÄÇ ÂÖ≥‰∫éNSURLSessionÁöÑdelegateÂÆòÊñπËØ¥ÊòéÔºöThis delegate object is responsible for handling authentication challenges, for making caching decisions, and for handling other session-related events. The session object keeps a strong reference to this delegate until your app exits or explicitly invalidates the session. If you do not invalidate the session, your app leaks memory until it exits. Ëß£ÂÜ≥ÊñπÊ°àÂú®AFNetworkingÂÆòÊñπissuesÊâæÂà∞‰∫ÜÁõ∏ÂÖ≥ÁöÑÈóÆÈ¢òPossible memory leak in AFURLSessionManager„ÄÇ‰ΩúËÄÖÁöÑÂõûÁ≠îÂ¶Ç‰∏ãÔºö Ëß£ÂÜ≥ÊñπÊ°àÊúâ‰∏§ÁßçÔºö ËøôÊòØÊúÄÂ∏∏ËßÅ‰πüÊòØ‰ΩúËÄÖÊé®ËçêÁöÑÊñπÊ≥ïÔºåÂè™ÂàõÂª∫‰∏Ä‰∏™AFURLSessionManagerÔºåÊï¥‰∏™APPÂÖ±‰∫´ÔºåËôΩÁÑ∂ËøòÊòØÊúâÂæ™ÁéØÂºïÁî®Ôºå‰ΩÜÊòØÂ∞±Ê≤°ÊúâÂÜÖÂ≠òÊ≥ÑÈú≤ÁöÑÈóÆÈ¢ò‰∫Ü„ÄÇ Â¶ÇÊûúË¶Å‰ΩøÁî®Â§ö‰∏™AFURLSessionManagerÔºåÂú®‰ΩøÁî®ÂÆåÊàêÂêéÊâãÂä®Ë∞ÉÁî®invalidateSessionCancelingTasks:Êù•Êñ≠ÂºÄÂæ™ÁéØÂºïÁî®„ÄÇÔºàËøôÁßçÊñπÊ°à‰∏çÊé®ËçêÔºåÂÖ∑‰ΩìÂéüÂõ†Áúã‰∏ã‰∏ÄÂ∞èËäÇÔºâ AFURLSessionManagerÂ§çÁî®ÂÖ≥‰∫éAFURLSessionManagerÊòØÂê¶‰ΩøÁî®Âçï‰æãËøô‰∏™ÈóÆÈ¢òÔºåÂÆòÊñπdemo‰ΩøÁî®ÁöÑÊòØÂçï‰æãÔºåÂú®ËãπÊûúÂÆòÊñπÊñáÊ°£ÊâæÂà∞Ëøô‰πà‰∏ÄÊÆµËØù With the NSURLSession API, your app creates one or more sessions, each of which coordinates a group of related data transfer tasks. For example, if you‚Äôre creating a web browser, your app might create one session per tab or window, or one session for interactive use and another for background downloads. Within each session, your app adds a series of tasks, each of which represents a request for a specific URL (following HTTP redirects, if necessary). ÊàëÁöÑÁêÜËß£ÊòØËøôÊ†∑ÁöÑÔºåÊ†πÊçÆ‰ΩøÁî®Âú∫ÊôØÁöÑ‰∏çÂêåÔºåËøô‰∏™ÈóÆÈ¢òÊúâ‰∏çÂêåÁöÑÁ≠îÊ°àÔºåÂú®Â§ßÂ§öÊï∞Âú∫ÊôØ‰∏ãAPPÈÉΩÊòØÂú®ÂíåÂêå‰∏ÄÊúçÂä°Âô®Êâì‰∫§ÈÅìÔºå‰∏Ä‰∏™sessionÂ∞±Â§ü‰∫ÜÔºåÂ¶ÇÊûúÊúâËøûÊé•Â§ö‰∏™ÊúçÂä°Âô®„ÄÅÊàñËÄÖÂêéÂè∞‰∏ãËΩΩÁ≠âÂäüËÉΩÈúÄÊ±ÇÔºåÂèØ‰ª•ÁªôÊØè‰∏™ÊúçÂä°Âô®„ÄÅÂêéÂè∞‰∏ãËΩΩ‰ªªÂä°ÂàõÂª∫ÂçïÁã¨ÁöÑsessionÔºà‰ΩÜÊòØ‰πü‰∏çËÉΩÊØè‰∏™ËØ∑Ê±ÇÈÉΩÂçïÁã¨ÂàõÂª∫sessionÔºâ„ÄÇ Âú®Êü•ÊâæËµÑÊñôÁöÑÊó∂ÂÄôÔºåÊàëÂèëÁé∞ÊúâÂçöÂÆ¢ÊèêÂà∞Âçï‰æãseesionÂèØ‰ª•ÂáèÂ∞ëTCP‰∏âÊ¨°Êè°ÊâãÔºåÂä®ÊâãÈ™åËØÅ‰∏ãÔºö Â§ö‰∏™ÁΩëÁªúËØ∑Ê±ÇÂ§çÁî®‰∏Ä‰∏™AFURLSessionManagerÔºåËøûÁª≠Âèë‰∏§‰∏™ÁΩëÁªúËØ∑Ê±ÇÔºåÁî®WiresharkÊäìÂåÖÂèØ‰ª•ÁúãÂà∞ÔºåÁ¨¨‰∫åÊ¨°ÁΩëÁªúËØ∑Ê±ÇÂ§çÁî®‰∫ÜÁ¨¨‰∏ÄÊ¨°ÁöÑTCPËøûÊé•ÔºåÊ≤°ÊúâÂÅö‰∏âÊ¨°Êè°Êâã„ÄÇ ‰∏ãÂõæÊòØÊØèÊ¨°ÁΩëÁªúËØ∑Ê±ÇÈÉΩÊñ∞Âª∫‰∏Ä‰∏™AFURLSessionManagerÁöÑÊäìÂåÖÔºåÂèØ‰ª•ÁúãÂà∞ÊØè‰∏™ÁΩëÁªúËØ∑Ê±ÇÈÉΩËøõË°å‰∫ÜTCP‰∏âÊ¨°Êè°Êâã„ÄÇ ÂÆûÈ™åÁªìÊûúÁöÑÁ°ÆÂ¶ÇÁΩë‰∏äÊâÄËØ¥ÔºåÂ§çÁî®AFURLSessionManagerÂèØ‰ª•ÂáèÂ∞ë‰∏âÊ¨°Êè°ÊâãÔºåÊèêÂçáÊïàÁéá„ÄÇ]]></content>
      <tags>
        <tag>iOSÁü•ËØÜÂ∞èÁªì</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[iOSÊ®°ÊãüÂô®ÂÆâË£ÖdebugÂåÖ]]></title>
    <url>%2F2018%2F08%2F21%2FiOS%E6%A8%A1%E6%8B%9F%E5%99%A8%E5%AE%89%E8%A3%85debug%E5%8C%85%2F</url>
    <content type="text"><![CDATA[Áî±‰∫éÈ°πÁõÆÊòØHybridÁöÑÂπ≥Âè∞ÔºåÊúâÁ¨¨‰∏âÊñπ‰∫∫ÂëòÈúÄË¶ÅÂú®‰∏äÈù¢ÂºÄÂèëH5Â∫îÁî®Ôºå‰ΩÜÊòØreleaseÂåÖ‰∏çËÉΩË∞ÉËØïH5ÔºåÂè™ÊúâdebugÊä•ÂèØ‰ª•Ë∞ÉËØïÔºå‰ΩÜÊòØÈ°πÁõÆÊ∫êÁ†Å‰∏çËÉΩ‰∫§ÁªôÁ¨¨‰∏âÊñπÔºåÂú®googleÊêúÁ¥¢‰∫Ü‰∏ãÔºåÂèëÁé∞‰∏ÄÁØáÈúúÁ•ûÁöÑÊñáÁ´†ÔºåËÆ≤ÁöÑÊòØdebugÂåÖÂèØ‰ª•Êã∑Ë¥ùÂà∞ÂÖ∂ÂÆÉÊú∫Âô®ËøêË°åÔºå‰∫éÊòØÂÆûË∑µ‰∫Ü‰∏ÄÊ≥¢„ÄÇ ÁéØÂ¢ÉÂáÜÂ§á Xcode Command Line Tools ios-sim ios-simÂÆâË£ÖÂëΩ‰ª§Ôºönpm install ios-sim -g Êã∑Ë¥ùÊú¨Âú∞ÁöÑdebugÂåÖ run‰∏ÄÊ¨°ÈúÄË¶ÅÊã∑Ë¥ùÁöÑÈ°πÁõÆÔºåÂÆâË£ÖÂà∞Ê®°ÊãüÂô®‰∏ä ÊâßË°å‰∏ãÈù¢ÂëΩ‰ª§Ë°åÔºåÈúÄË¶ÅÊ≥®ÊÑèÁöÑÊòØÁõÆÊ†áË∑ØÂæÑ/xxx.zipÂ∞±ÊòØÊã∑Ë¥ùÂá∫Êù•ÁöÑdebugÂ∫îÁî®ÂåÖÔºåÈúÄË¶ÅÊõøÊç¢‰∏∫Ëá™Â∑±ÁöÑË∑ØÂæÑÔºå‰æãÂ¶Ç/Users/crmo/Desktop/debug/debug.zip 1ditto -ck --sequesterRsrc --keepParent `ls -1 -d -t ~/Library/Developer/Xcode/DerivedData/*/Build/Products/*-iphonesimulator/*.app | head -n 1` ÁõÆÊ†áË∑ØÂæÑ/xxx.zip Êã∑Ë¥ùdebugÂåÖÂà∞ÂÖ∂ÂÆÉÊ®°ÊãüÂô®1. Ëé∑ÂèñÊ®°ÊãüÂô®ÂàóË°® ios-sim showdevicetypes ÂèØ‰ª•ÁúãÂà∞Á±ª‰ºº‰∫é‰∏ãÈù¢ÁöÑËæìÂá∫ÔºåÂ∞±ÊòØÊú¨Êú∫ÂèØÁî®ÁöÑÊ®°ÊãüÂô®ÔºåÈÄâÊã©‰∏Ä‰∏™ÈúÄË¶ÅËøêË°åÁöÑÊ®°ÊãüÂô®„ÄÇ 123456789101112131415161718192021~ ios-sim showdevicetypesApple-Watch-38mm, watchOS 4.3Apple-Watch-42mm, watchOS 4.3Apple-Watch-Series-2-38mm, watchOS 4.3Apple-Watch-Series-2-42mm, watchOS 4.3iPhone-7-Plus, 10.3iPhone-7-Plus, 11.4Apple-Watch-Series-3-38mm, watchOS 4.3Apple-Watch-Series-3-42mm, watchOS 4.3iPhone-5s, 11.4iPhone-6, 11.4iPhone-6-Plus, 11.4iPhone-6s, 11.4iPhone-6s-Plus, 11.4iPhone-7, 11.4iPhone-SE, 11.4iPad-Air, 11.4iPad-Air-2, 11.4iPhone-8, 11.4iPhone-8-Plus, 11.4iPhone-X, 11.4 2. Âú®Ê®°ÊãüÂô®‰∏äÂêØÂä®debugÂåÖ ios-sim launch Â∫îÁî®ÂåÖË∑ØÂæÑ/xxx.app ‚Äìdevicetypeid Ê®°ÊãüÂô® ÈúÄË¶ÅËØ¥ÊòéÁöÑÊòØÔºådebug.zipËß£ÂéãÂêéÂ∞±ÂèØ‰ª•ÂæóÂà∞ÂØπÂ∫îÂ∫îÁî®ÁöÑ.appÊñá‰ª∂Ôºå‰æãÂ¶ÇÊàëÁöÑdebugÂåÖÊîæÂú®/Users/crmo/Desktop/debug/debug.appÔºåÊ®°ÊãüÂô®ÈÄâÊã©iPhone-8ÔºåÊúÄÁªàÁöÑÂëΩ‰ª§ÊòØ ios-sim launch /Users/crmo/Desktop/debug/debug.app ‚Äìdevicetypeid iPhone-8 simctl was not foundÈîôËØØËß£ÂÜ≥Âú®ÂÆûË∑µÊó∂ÊµãËØïÊú∫ÁöÑCommand Line ToolsÊ≤°ÊúâÈÖçÁΩÆÂ•ΩÔºåÂá∫Áé∞Êä•ÈîôÔºö 1234simctl was not found.Check that you have Xcode 8.x installed: xcodebuild --versionCheck that you have Xcode 8.x selected: xcode-select --print-path Ëß£ÂÜ≥ÂäûÊ≥ïÔºö 1.È¶ñÂÖàÁ°Æ‰øùÊ≠£Á°ÆÂÆâË£Ö‰∫ÜCommand Line ToolsÔºå Âç∏ËΩΩCommand Line Tools:rm -rf /Library/Developer/CommandLineToolsÂÆâË£ÖCommand Line Tools:xcode-select ‚Äìinstall 2.Âú®xcodeÈÖçÁΩÆ‰∏Ä‰∏ãCommand Line ToolsÔºåÂ¶Ç‰∏ãÂõæÊâÄÁ§∫ ÂèÇËÄÉÂçöÂÆ¢Ôºö unable to find utility ‚Äúsimctl‚ÄùÁöÑËß£ÂÜ≥ÊñπÊ°à Áªô iOS Ê®°ÊãüÂô® ‚ÄúÂÆâË£Ö‚Äùapp Êñá‰ª∂]]></content>
      <tags>
        <tag>iOSÁü•ËØÜÂ∞èÁªì</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[dispatch_syncÊ≠ªÈîÅÈóÆÈ¢ò]]></title>
    <url>%2F2018%2F08%2F03%2Fdispatch_sync%E6%AD%BB%E9%94%81%E9%97%AE%E9%A2%98%2F</url>
    <content type="text"><![CDATA[ÈóÆÈ¢òÂàÜÊûê‰ΩøÁî®dispatch_syncÁöÑÊó∂ÂÄôË¶ÅÂ∞èÂøÉË∞®ÊÖéÔºåÁ®ç‰∏çÊ≥®ÊÑèÂ∞±‰ºöÂØºËá¥Ê≠ªÈîÅÈóÆÈ¢òÔºåÂÖàÁúã‰∏§‰∏™ÂÖ∏ÂûãÁöÑÊ°à‰æãÔºö Ê°à‰æã‰∏Ä 12345678- (void)deadlock1 &#123; dispatch_queue_t queue = dispatch_queue_create(&quot;label&quot;, DISPATCH_QUEUE_SERIAL); dispatch_sync(queue, ^&#123; dispatch_sync(queue, ^&#123; NSLog(@&quot;&quot;); &#125;); &#125;);&#125; Ê°à‰æã‰∫å 1234567891011- (void)deadlock2 &#123; dispatch_queue_t queue1 = dispatch_queue_create(&quot;label&quot;, DISPATCH_QUEUE_SERIAL); dispatch_queue_t queue2 = dispatch_queue_create(&quot;label&quot;, DISPATCH_QUEUE_SERIAL); dispatch_sync(queue1, ^&#123; dispatch_sync(queue2, ^&#123; dispatch_sync(queue1, ^&#123; NSLog(@&quot;&quot;); &#125;); &#125;); &#125;);&#125; ‰∏äÈù¢‰∏§‰∏™Ê°à‰æãÊ≠ªÈîÅÁöÑÂéüÂõ†ÈÉΩÊòØÂêå‰∏Ä‰∏™‰∏≤Ë°åÈòüÂàóÁöÑ‰ªªÂä°Áõ∏‰∫íÁ≠âÂæÖ„ÄÇ ÂΩìÁÑ∂ÂÆûÈôÖÂ∑•Á®ã‰∏≠ÈÅáÂà∞ÁöÑÊ≠ªÈîÅÈóÆÈ¢ò‰ºöÊõ¥Âä†Â§çÊùÇÔºåÈöæ‰ª•ÂàÜÊûê„ÄÇ ÂÖ∏ÂûãËØØÂå∫Âú®ÈòÖËØªÁõ∏ÂÖ≥‰π¶Á±ç„ÄÅÂçöÂÆ¢ÈÉΩÊèêÂà∞‰∫Ü‰∏Ä‰∏™ÊñπÊ≥ïdispatch_get_current_queue()ÔºåÈÄöËøáËøô‰∏™ÊñπÊ≥ïÂèØ‰ª•Ëé∑ÂèñÂà∞ÂΩìÂâçÈòüÂàóÔºå‰∫éÊòØÊúâ‰∫∫Â∞±Áî®ÂÆÉÊù•Ëß£ÂÜ≥Ê≠ªÈîÅÈóÆÈ¢ò„ÄÇ 123456789101112- (void)safeSync:(void(^)())block &#123; if (!block) &#123; return; &#125; if (dispatch_get_current_queue() == queue) &#123; block(); &#125; else &#123; dispatch_sync(queue, ^&#123; block(); &#125;); &#125;&#125; Á¨¨‰∏ÄÁúºÁúãËµ∑Êù•Â§©Ë°£Êó†ÁºùÔºåÂØπ‰∫éÊ°à‰æã‰∏ÄÁöÑÁ°ÆÂèØ‰ª•ÂÆåÁæéËß£ÂÜ≥Ôºå‰ΩÜÊòØÂØπ‰∫éÊ°à‰æã‰∫åËøôÁßçÂØπÈòüÂàóÁöÑÊÉÖÂÜµÂ∞±Âà§Êñ≠‰∏ç‰∫Ü„ÄÇÈöæÊÄ™ËãπÊûúÂú®iOS6Â∞±Ê≥®Èáä‰∫ÜËøô‰∏™ÊñπÊ≥ï„ÄÇ Êé®ËçêÈòÖËØªÔºö Thread-Safe Class Design]]></content>
      <tags>
        <tag>iOSÁü•ËØÜÂ∞èÁªì</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[UIWebViewËé∑ÂèñËØ¶ÁªÜÊµèËßàËÆ∞ÂΩï]]></title>
    <url>%2F2018%2F08%2F01%2FUIWebView%E8%8E%B7%E5%8F%96history%2F</url>
    <content type="text"><![CDATA[Êú¨ÊñáÊâÄÁî®ÊñπÊ≥ï‰ºö‰ΩøÁî®Âà∞ËãπÊûúÁßÅÊúâAPIÔºå‰∏äÊû∂APP StoreËØ∑Ë∞®ÊÖé‰ΩøÁî®„ÄÇ ÈúÄÊ±ÇËé∑ÂèñUIWebViewÁöÑÂâçËøõÂêéÈÄÄÁöÑÊµèËßàËÆ∞ÂΩïÔºå‰∏æ‰∏™‰æãÂ≠êÔºåÊØîÂ¶Ç‰ªéA-&gt;B-&gt;C-&gt;BÔºåÊ≠§Êó∂B‰∏ä‰∏ÄÈ°µÊòØAÔºå‰∏ã‰∏ÄÈ°µÊòØCÔºåÈúÄË¶ÅËé∑ÂèñA„ÄÅCÁöÑURL‰ø°ÊÅØ„ÄÇ WKWebViewÊö¥Èú≤‰∫ÜËøô‰∏™Â±ûÊÄßÔºåWKBackForwardList *backForwardList„ÄÇÂèØ‰ª•ÂæàÂÆπÊòìÁöÑÂèñÂà∞ÔºåÊó†Â•àÈ°πÁõÆËøòÊòØ‰ΩøÁî®ÁöÑUIWebViewÔºå‰∫éÊòØÊúâ‰∫ÜÂêéÈù¢ÁöÑÊé¢Á¥¢„ÄÇ È¶ñÂÖàÂú®UIWebViewÊèê‰æõÁöÑAPIÈáåÊâæÔºåÁõ∏ÂÖ≥ÁöÑAPIÂè™ÊúâcanGoBackÂíåcanGoForwardÔºåÂëΩÂêçÂæàÁõ¥ËßÇÔºåÊòØÂê¶ÂèØ‰ª•ÂêéÈÄÄÂíåÂâçËøõÔºåËøôÊù°Ë∑ØËµ∞‰∏çÈÄö„ÄÇÊÉ≥Âà∞ÊòØÂê¶ÂèØ‰ª•ÈÄöËøáJSÁöÑWindow.historyËé∑ÂèñÂà∞ÔºåÊü•‰∫Ü‰∏ãAPIÔºåÂîØ‰∏Ä‰∏Ä‰∏™ÊúâÁÇπÂÉèÁöÑlengthÂ±ûÊÄßÔºåÊô∫ËÉΩÂèñÂà∞ÊµèËßàËÆ∞ÂΩï‰∏≠ÁöÑÊâÄÊúâURLÁöÑÊï∞ÈáèÔºå‰∏çÂå∫ÂàÜÂâçÂêéÔºåÊØîÂ¶ÇÂú®‰∏äÈù¢ÊèêÂà∞ÁöÑ‰æãÂ≠ê‰∏≠ÔºåÂú®BÈ°µÈù¢ÂèñÂà∞ÁöÑlengthÊòØ3ÔºåËÄå‰∏î‰∏çËÉΩÂèñÂá∫ÂÖ∑‰ΩìÁöÑURL„ÄÇ Êó†Â•àÂè™Êúâ‰∏äÊ∫êÁ†Å‰∫ÜÔºåÊàë‰∏ãËΩΩÁöÑÊòØ‚ÄúWebKit-7604.1.38.0.7‚ÄùÂíå‚ÄúWebCore-7604.1.38.0.7‚Äù„ÄÇ Window.History.lengthÂÆûÁé∞Êú¨Ë¥®Âú®WebCoreÈáåÈù¢ÊâæÂà∞‰∫ÜJSÊñπÊ≥ïWindow.History.lengthÂÆûÁé∞ÁöÑÊú¨Ë¥®Ôºå‰∏ä‰ª£Á†ÅÔºö 12345678910// WebCore History.cppunsigned History::length() const&#123; if (!m_frame) return 0; auto* page = m_frame-&gt;page(); if (!page) return 0; return page-&gt;backForward().count();&#125; 123456// WebCore BackForwardController.cppint BackForwardController::count() const&#123; // count = ÂΩìÂâçÈ°µ‰πãÂâçÁöÑÈ°µÈù¢ÊÄªÊï∞ + ÂΩìÂâçÈ°µ‰πãÂêéÁöÑÈ°µÈù¢ÊÄªÊï∞ + 1 return m_client-&gt;backListCount() + 1 + m_client-&gt;forwardListCount();&#125; Âú®WebCoreÈáåÈù¢backListCount()„ÄÅforwardListCount()ÂÆö‰πâÊòØËôöÂáΩÊï∞ÔºåÂÖ∑‰ΩìÂÆûÁé∞Âú®WebKitÂèØ‰ª•ÊâæÂà∞„ÄÇ 12345678910// WebKit BackForwardList.mmint BackForwardList::backListCount()&#123; return m_current == NoCurrentItemIndex ? 0 : m_current;&#125;int BackForwardList::forwardListCount()&#123; return m_current == NoCurrentItemIndex ? 0 : (int)m_entries.size() - (m_current + 1);&#125; ËøòÊúâ‰∏Ä‰∏™ÊñπÊ≥ïÊàë‰ª¨ÈúÄË¶ÅÂÖ≥Ê≥®‰∏Ä‰∏ãÔºåÂêéÈù¢‰ºöÁî®Âà∞„ÄÇ 1234567891011// WebKit BackForwardList.mm// Ëé∑Âèñ‰πãÂâçÊúÄÂ§öÂá†Êù°ÂéÜÂè≤ËÆ∞ÂΩïvoid BackForwardList::backListWithLimit(int limit, Vector&lt;Ref&lt;HistoryItem&gt;&gt;&amp; list)&#123; list.clear(); if (m_current != NoCurrentItemIndex) &#123; unsigned first = std::max(static_cast&lt;int&gt;(m_current) - limit, 0); for (; first &lt; m_current; ++first) list.append(m_entries[first].get()); &#125;&#125; Ëé∑ÂèñHistoryÂú®WebViewÁöÑ‰∏≠ÔºåÊàë‰ª¨ÂèØ‰ª•ÊâæÂà∞WebBackForwardListÁöÑÂÆö‰πâ„ÄÇ 12345/*! @property backForwardList @abstract The backforward list for this WebView.*/ @property (nonatomic, readonly, strong) WebBackForwardList *backForwardList; WebBackForwardListÊòØÂØπBackForwardListÁöÑ‰∏ÄÂ±ÇÂ∞ÅË£ÖÔºåÈòÖËØª‰∏Ä‰∏ãÂÆÉÁöÑ.hÊñá‰ª∂Ôºå‰∏çÈöæÊâæÂà∞Ëé∑ÂèñÊµèËßàËÆ∞ÂΩïÁöÑÊñπÊ≥ï„ÄÇ 1234567/*! @method backListWithLimit: @abstract Returns a portion of the list before the current entry. @param limit A cap on the size of the array returned. @result An array of items before the current entry, or nil if there are none. The entries are in the order that they were originally visited.*/- (NSArray *)backListWithLimit:(int)limit; ‰∏äÈù¢ÁöÑÊñπÊ≥ïÂèØ‰ª•Ëé∑ÂèñÂà∞‰∏Ä‰∏™WebHistoryItemÊï∞ÁªÑÔºåWebHistoryItem‰øùÂ≠ò‰∫ÜÊµèËßàËÆ∞ÂΩïÁöÑËØ¶ÁªÜ‰ø°ÊÅØ„ÄÇ Ëé∑ÂèñWebBackForwardListUIWebViewÊ≤°ÊúâÊö¥Èú≤Ëé∑ÂèñWebViewÊàñËÄÖWebBackForwardListÁöÑÊñπÊ≥ïÔºå‰ΩÜÊòØÊàë‰ª¨ÂèØ‰ª•Áî®KVOÊõ≤Á∫øÊïëÂõΩÔºå‰∫éÊòØÊàë‰ª¨ÈúÄË¶ÅÊâæÂà∞WebViewÁöÑÁßÅÊúâÂèòÈáèÂêç„ÄÇÁî®runtimeÂèØ‰ª•ÂÅöÂà∞Ôºå‰∏∫‰∫ÜÁÆÄÂåñËøô‰∏™ËøáÁ®ãÔºåÊàëÂÜô‰∫Ü‰∏Ä‰∏™Â∑•ÂÖ∑Á±ªÊù•ËæÖÂä©ÊêúÁ¥¢ÔºåÂÖ∑‰ΩìÂèØ‰ª•ÁúãËøôÁØáÊñáÁ´†-runtimeÂÆûÁé∞ÁßÅÊúâÂèòÈáèÊêúÁ¥¢„ÄÇÁÆÄÂçïÊù•ËØ¥Â∞±ÊòØÁî®runtimeËé∑ÂèñÁ±ªÊàêÂëòÂèòÈáèÂàóË°®ÔºåÁÑ∂ÂêéÁî®BFSÊù•ÊêúÁ¥¢Êàë‰ª¨Ë¶ÅÊâæÁöÑÁ±ª„ÄÇ 12345678910// ‰ª•UIWebView‰∏∫Ê†πËäÇÁÇπÔºåBFSÊêúÁ¥¢WebView[BFSSearchClass searchClass:@"WebView" inClass:@"UIWebView"];// ÊêúÁ¥¢ÁªìÊûúÂ¶Ç‰∏ã// Class NameÔºöÁ±ªÂêçÔºåIvar NameÔºöÂèòÈáèÂêçÔºåSuper ClassÔºöÁà∂Á±ªClass Name:„ÄêWebView„Äë,Ivar Name:„Äê_webView„ÄëClass Name:„ÄêUIWebDocumentView„Äë,Ivar Name:„ÄêSuper Class„ÄëClass Name:„ÄêUIWebBrowserView„Äë,Ivar Name:„ÄêbrowserView„ÄëClass Name:„ÄêUIWebViewInternal„Äë,Ivar Name:„Äê_internal„ÄëRoot Class:UIWebView Êúâ‰∫Ü‰∏äÈù¢ÁöÑÁªìËÆ∫ÔºåÊàë‰ª¨Â∞±ÂèØ‰ª•Áî®KVCÊù•Ëé∑ÂèñÂà∞ÊµèËßàËÆ∞ÂΩï‰∫Ü„ÄÇ 12345678910111213- (void)printWebViewHistory:(UIWebView *)aWebView &#123; id webviewInternal = [aWebView valueForKey:@"_internal"]; id browserView = [webviewInternal valueForKey:@"browserView"]; id webView = [browserView valueForKey:@"_webView"]; id backForwardList = [webView performSelector:@selector(backForwardList)]; // WebHistoryItemÂ≠òÂÇ®ÁöÑÂÖ∑‰ΩìÊüêÊù°ÊµèËßàËÆ∞ÂΩï‰ø°ÊÅØ NSArray *historyItems = [backForwardList performSelector:@selector(backListWithLimit:) withObject:@10]; for (id item in historyItems) &#123; // Ëé∑ÂèñÊµèËßàËÆ∞ÂΩïÁöÑurl NSString *url = [item performSelector:@selector(URLString)]; NSLog(@"%@", url); &#125;&#125;]]></content>
      <tags>
        <tag>iOSÁü•ËØÜÂ∞èÁªì</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[runtimeÂÆûÁé∞ÁßÅÊúâÂèòÈáèÊêúÁ¥¢]]></title>
    <url>%2F2018%2F07%2F31%2Fruntime%E5%AE%9E%E7%8E%B0%E7%A7%81%E6%9C%89%E5%8F%98%E9%87%8F%E6%90%9C%E7%B4%A2%2F</url>
    <content type="text"><![CDATA[Êú¨ÊñáDemo(https://github.com/crmo/BFSSearchClass)Âú∞ÂùÄ ÈúÄÊ±ÇÂú®ÂºÄÂèëÂäüËÉΩÊó∂Ôºå‰∏∫‰∫ÜÊª°Ë∂≥‰∫ßÂìÅÂèòÊÄÅÁöÑÈúÄÊ±ÇÔºåÈöæÂÖçÊúâÁ≥ªÁªüÁ±ªÊèê‰æõÁöÑAPI‰∏çÂ§üÁî®ÁöÑÊó∂ÂÄôÔºåËøôÊó∂ÂÄôÁßÅÊúâÂèòÈáèÂ∞±ÂèØ‰ª•ÂèëÊå•ÂÆÉÂÖâÂíåÁÉ≠‰∫Ü„ÄÇÊÄé‰πàÈÄöËøá‰∏Ä‰∏™Á±ªÔºå‰∏ÄÂ±Ç‰∏ÄÂ±ÇÁöÑÊâæÂà∞ÁâπÂÆöÁ±ªÂûãÁöÑÁßÅÊúâÊàêÂëòÂèòÈáèÔºüÂèóÁõä‰∫éObjective-CÁöÑÂä®ÊÄÅËØ≠Ë®ÄÁâπÊÄßÔºåÂ∞±ÁÆóËãπÊûúUIKit‰∏çÂºÄÊ∫êÔºå‰ΩÜÊòØÂú®runtimeÈù¢ÂâçÔºåÁ±ªÁöÑÁªìÊûÑËøòÊòØÊö¥Èú≤Êó†ÈÅó„ÄÇÊàëÁöÑÊÄùË∑ØÊòØÈÄêÂ±ÇÊâãÂä®ÊâìÂç∞ÊàêÂëòÂèòÈáè‰ø°ÊÅØÔºåÂ¶ÇÊûúÊòØUIÊéß‰ª∂ÂèØ‰ª•Áî®RevealÊù•Âä†Âø´ËøõÂ∫¶ÔºåÈÖçÂêàKVCÊú∫Âà∂ÔºåËé∑ÂèñÁßÅÊúâÂèòÈáèÂ∞±Â¶ÇÂêåÊé¢ÂõäÂèñÁâ©‰∏ÄËà¨„ÄÇÂú®Â§öÊ¨°ÈÅáÂà∞Ëøô‰∏™ÈóÆÈ¢òÂêéÔºåÊàëÂÜ≥ÂÆöÂÆûÁé∞‰∏Ä‰∏™Â∑•ÂÖ∑Á±ªÊù•ÁÆÄÂåñËøô‰∏™ËøáÁ®ãÔºåÊØïÁ´üËÉΩËá™Âä®ÂåñÁöÑÂ∞±Â∞ΩÈáè‰∏çË¶ÅÊâãÂä®„ÄÇ ÊÄùË∑Ø ÊêúÁ¥¢ËåÉÂõ¥ÔºöÊàêÂëòÂèòÈáè„ÄÅÂ±ûÊÄß ÂÖ≥ÈîÆÊ≠•È™§Â¶Ç‰∏ãÔºö runtime‰∏≠ÁöÑÊñπÊ≥ïclass_copyIvarList()ÔºåÂèØ‰ª•ÂèñÂá∫Á±ªÁöÑÊâÄÊúâÊàêÂëòÂèòÈáèÁªìÊûÑ‰ΩìIvar„ÄÇ ‰ªéIvar‰∏≠ÂèØ‰ª•ÂèñÂá∫ÊàêÂëòÂèòÈáèÁ±ªÂûãType Encodings Áî®Type EncodingsËé∑ÂèñÂà∞Á±ªÂêç ÈÅçÂéÜÁ±ªÁöÑÊâÄÊúâIvarÔºåËé∑ÂèñÂà∞Á±ªÁöÑÊâÄÊúâÊàêÂëòÂèòÈáèÁöÑÁ±ª‰ø°ÊÅØ ‰ΩÜÊòØÈóÆÈ¢òÊ≤°Ëøô‰πàÁÆÄÂçïÔºåÊØîÂ¶ÇClassAÊòØClassBÁöÑÊàêÂëòÂèòÈáèÔºåClassBÊòØClassCÁöÑÊàêÂëòÂèòÈáèÔºåÊÉ≥ÈÄöËøáClassCÊâæÂà∞ClassAÔºåÈúÄË¶ÅÂêë‰∏ãÊâæ‰∏§Â±ÇÊâçËÉΩÊâæÂà∞ÔºåËøòË¶ÅËÄÉËôëÁà∂Á±ªÁöÑÊÉÖÂÜµ„ÄÇÊï¥‰∏™ÊêúÁ¥¢ËøáÁ®ãÂ∞±ÊòØ‰∏ÄÈ¢ó‰ª•ÂæÖÊêúÁ¥¢Á±ª‰∏∫Ê†πÁöÑÊ†ëÔºåÂèØ‰ª•Áî®BFSÊù•ÊêúÁ¥¢ÔºåÊ≠•È™§Â¶Ç‰∏ãÔºàÂ¶ÇÂõæÔºåÊï∞Â≠óÊòØÊêúÁ¥¢È°∫Â∫èÔºâÔºö ‰ªéÊ†πËäÇÁÇπÂºÄÂßãÊêúÁ¥¢ È¶ñÂÖàÈÅçÂéÜÂΩìÂâçËäÇÁÇπÁöÑÁà∂Á±ªÔºåÂä†ÂÖ•ÊêúÁ¥¢ÈòüÂàó ÂÜçÂèñÂá∫ÂΩìÂâçËäÇÁÇπÁöÑÊâÄÊúâÊàêÂëòÂèòÈáèÔºåÂä†ÂÖ•ÊêúÁ¥¢ÈòüÂàó Â¶Ç‰Ωï‰ªéIvar‰∏≠Ëé∑ÂèñClassIvar‰∏≠‰∏çËÉΩÁõ¥Êé•ÂèñÂá∫ÂØπÂ∫îÁ±ªÂêçÔºåÂè™ËÉΩÂèñÂá∫Type EncodingsÔºåÈó¥Êé•ÂèØ‰ª•ÂæóÂà∞Á±ªÂêç„ÄÇ‰ªéÂÆòÊñπÊñáÊ°£Êà™‰∫ÜÂº†ÂõæÔºåÂèØ‰ª•Ê∏ÖÊô∞ÁöÑÁúãÂà∞CodeÁöÑÂÆö‰πâ„ÄÇ Âü∫Êú¨Êï∞ÊçÆÁ±ªÂûã„ÄÅidÁ±ªÂûã„ÄÅÈõÜÂêàÁ±ªÂûã„ÄÅÁªìÊûÑ‰ΩìÁ≠âÁ±ªÂûãÂ∞±‰∏çÈúÄË¶ÅÊêúÁ¥¢‰∫ÜÔºåÂèØ‰ª•ËøáÊª§Êéâ„ÄÇÊàë‰ª¨Âè™ÊêúÁ¥¢‰∏§ÁßçÁ±ªÂûã Á±ªÔºå‰æãÂ¶Ç@&quot;UIWebViewInternal&quot; ‰ª£ÁêÜÔºå‰æãÂ¶Ç@&quot;&lt;UIViewControllerTransitioningDelegate&gt;&quot; ‰ºòÂåñÂèäÂ≠òÂú®ÈóÆÈ¢ò ÂèØ‰ª•Áî®‰∏Ä‰∏™NSMutableSetÂ≠òÂÇ®Â∑≤ÁªèÊêúÁ¥¢ËøáÁöÑÁ±ªÔºåÊØèÊ¨°ÊêúÁ¥¢ÂâçÂà§Êñ≠‰∏Ä‰∏ãÊòØÂê¶Â∑≤ÁªèÊêúÁ¥¢Ëøá ËÆ∞ÂΩïÊêúÁ¥¢Ê¨°Êï∞ÔºåÂèØ‰ª•ÈôêÂà∂ÊêúÁ¥¢Ê¨°Êï∞„ÄÇ ÂØπ‰∫éÂÆö‰πâ‰∏∫idÁ±ªÂûã„ÄÅÈõÜÂêàÁ±ªÁöÑÊàêÂëòÂèòÈáèÊ≤°ÊúâÂÅöÂ§ÑÁêÜÔºåÂèØ‰ª•ÁªßÁª≠Ê∑±ÂÖ•ÈÅçÂéÜ]]></content>
      <tags>
        <tag>iOSÁü•ËØÜÂ∞èÁªì</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[iOSÊ®™Á´ñÂ±èÊÄªÁªì]]></title>
    <url>%2F2018%2F07%2F23%2FiOS%E6%A8%AA%E7%AB%96%E5%B1%8F%E6%80%BB%E7%BB%93%2F</url>
    <content type="text"><![CDATA[‰ΩøÁî®Auto LayoutÊù•ËøõË°åÂ∏ÉÂ±ÄÂ∞±‰∏çÁî®Ëá™Â∑±ÂéªÁõëÂê¨Ê®™Á´ñÂ±è‰∫ã‰ª∂‰∫ÜÔºåÂè™ÈúÄË¶ÅÁªòÂà∂Â§öÂ•óÂ∏ÉÂ±ÄÂç≥ÂèØ„ÄÇ‰ΩÜÊòØÈ°πÁõÆÊúâÂæàÂ§öÈ°µÈù¢ÊòØËá™Â∑±ÊâãÂä®ËÆ°ÁÆóÁöÑÔºå‰∫éÊòØÂè™ÊúâÊÉ≥ÂäûÊ≥ïÂÜçÊóãËΩ¨Â±èÂπïÊó∂ÈáçÊñ∞Â∏ÉÂ±Ä„ÄÇ Áõ∏ÂÖ≥Êûö‰∏æÂ±èÂπïÊñπÂêëÊúâ3‰∏™Áõ∏ÂÖ≥Êûö‰∏æÔºåÁïåÈù¢ÊñπÂêëUIInterfaceOrientationÔºåËÆæÂ§áÊñπÂêëUIDeviceOrientationÔºåÊîØÊåÅÊóãËΩ¨ÊñπÂêëUIInterfaceOrientationMask„ÄÇ Ê≥®ÊÑèUIInterfaceOrientation‰∏éUIDeviceOrientationÂ∑¶Âè≥ÊñπÂêëÊòØÁõ∏ÂèçÁöÑ 1234567891011121314151617typedef NS_ENUM(NSInteger, UIInterfaceOrientation) &#123; UIInterfaceOrientationUnknown = UIDeviceOrientationUnknown, UIInterfaceOrientationPortrait = UIDeviceOrientationPortrait, UIInterfaceOrientationPortraitUpsideDown = UIDeviceOrientationPortraitUpsideDown, UIInterfaceOrientationLandscapeLeft = UIDeviceOrientationLandscapeRight, UIInterfaceOrientationLandscapeRight = UIDeviceOrientationLandscapeLeft&#125;;typedef NS_OPTIONS(NSUInteger, UIInterfaceOrientationMask) &#123; UIInterfaceOrientationMaskPortrait = (1 &lt;&lt; UIInterfaceOrientationPortrait), UIInterfaceOrientationMaskLandscapeLeft = (1 &lt;&lt; UIInterfaceOrientationLandscapeLeft), UIInterfaceOrientationMaskLandscapeRight = (1 &lt;&lt; UIInterfaceOrientationLandscapeRight), UIInterfaceOrientationMaskPortraitUpsideDown = (1 &lt;&lt; UIInterfaceOrientationPortraitUpsideDown), UIInterfaceOrientationMaskLandscape = (UIInterfaceOrientationMaskLandscapeLeft | UIInterfaceOrientationMaskLandscapeRight), UIInterfaceOrientationMaskAll = (UIInterfaceOrientationMaskPortrait | UIInterfaceOrientationMaskLandscapeLeft | UIInterfaceOrientationMaskLandscapeRight | UIInterfaceOrientationMaskPortraitUpsideDown), UIInterfaceOrientationMaskAllButUpsideDown = (UIInterfaceOrientationMaskPortrait | UIInterfaceOrientationMaskLandscapeLeft | UIInterfaceOrientationMaskLandscapeRight),&#125;; Ê®™Á´ñÂ±èÊéßÂà∂ÊéßÂà∂ÁïåÈù¢Ê®™Á´ñÂ±èÂàáÊç¢Êúâ3‰∏™ÈáçË¶ÅÁöÑÁÇπÔºåÊúÄÁªàÁªìÊûú‰ª•Ëøô‰∏â‰∏™Âú∞ÊñπÁöÑÂÄºÂèñ‰∫§ÈõÜ„ÄÇ 1.info.plistÂÖ®Â±ÄÊéßÂà∂ ÂèØ‰ª•Âú®General-&gt;Deplyment InfoÁïåÈù¢‰∏äÂãæÈÄâ info.plistÊñá‰ª∂‰∏≠ÈÖçÁΩÆ‰πüÊòØ‰∏ÄÊ†∑ÁöÑÔºå‰∏§Ëæπ‰ºöÂêåÊ≠•ÂèòÊõ¥ 2.AppDelegate‰∏≠Ê†πÊçÆ‰∏çÂêåWindowÊéßÂà∂ 1234// AppDelegate- (UIInterfaceOrientationMask)application:(UIApplication *)application supportedInterfaceOrientationsForWindow:(UIWindow *)window &#123; return UIInterfaceOrientationMaskLandscapeLeft | UIInterfaceOrientationMaskPortrait;&#125; 3.Âú®ViewController‰∏≠ÊéßÂà∂ÂΩìÂâçÈ°µÈù¢ 12345678// UIViewController- (BOOL)shouldAutorotate &#123; return YES;&#125;- (UIInterfaceOrientationMask)supportedInterfaceOrientations &#123; return UIInterfaceOrientationMaskLandscapeLeft;&#125; ÈúÄË¶ÅÊ≥®ÊÑèÁöÑÊòØÔºå‰∫§ÈõÜ‰∏çËÉΩ‰∏∫Á©∫ÔºåÂê¶Âàô‰ºöÂØºËá¥crash *** Terminating app due to uncaught exception ‚ÄòUIApplicationInvalidInterfaceOrientation‚Äô, reason: ‚ÄòSupported orientations has no common orientation with the application, and [ViewControllershouldAutorotate] is returning YES‚Äô ÊóãËΩ¨‰∫ã‰ª∂ÁõëÂê¨ÊóãËΩ¨‰∫ã‰ª∂‰º†ÈÄíËøáÁ®ã1234567op0=&gt;operation: __CFRunLoopDoSources0op1=&gt;operation: UIDeviceop2=&gt;operation: UIWindowop3=&gt;operation: UIViewControllerop4=&gt;operation: UIViewop1-&gt;op2-&gt;op3-&gt;op4 Â±èÂπïÊóãËΩ¨Áõ∏ÂÖ≥‰∫ã‰ª∂viewWillTransitionToSize:withTransitionCoordinator: ViewControllerË¢´Áà∂ÂÆπÂô®ÂèòÊõ¥sizeÊó∂Ë∞ÉÁî®Ôºà‰æãÂ¶ÇwindowÊóãËΩ¨Êó∂Ë∞ÉÁî®root view controllerÁöÑËØ•ÊñπÊ≥ïÔºâ Â¶ÇÊûúÈáçËΩΩËØ•ÊñπÊ≥ïÔºåÈúÄË¶ÅË∞ÉÁî®super‰º†ÈÄí‰∫ã‰ª∂ÁªôÂ≠êViewController Ëøô‰∏™ÊñπÊ≥ïÊòØÊúÄÂÖ≥ÈîÆÁöÑÔºåÂèØ‰ª•Âú®ËØ•ÊñπÊ≥ï‰∏≠ÂØπÁïåÈù¢ËøõË°åÈáçÊñ∞Â∏ÉÂ±Ä 12345678910111213- (void)viewWillTransitionToSize:(CGSize)size withTransitionCoordinator:(id &lt;UIViewControllerTransitionCoordinator&gt;)coordinator&#123; // coordinatorÁî®Êù•Â§ÑÁêÜËΩ¨Êç¢Âä®Áîª [coordinator animateAlongsideTransition:^(id&lt;UIViewControllerTransitionCoordinatorContext&gt; context) &#123; // ÂºÄÂßãÊóãËΩ¨ &#125; completion:^(id&lt;UIViewControllerTransitionCoordinatorContext&gt; context) &#123; // ÊóãËΩ¨ÁªìÊùü &#125;]; // ËÆ∞ÂæóË∞ÉÁî®super [super viewWillTransitionToSize:size withTransitionCoordinator:coordinator];&#125; UIApplicationWillChangeStatusBarOrientationNotification Áä∂ÊÄÅÊ†èÂ∞ÜË¶ÅÊóãËΩ¨ÔºåËøô‰∏™Êó∂ÂÄôÂèñviewÁöÑframeËøòÊòØÊóãËΩ¨‰πãÂâçÁöÑ NSNotification‰∏≠Áî®key UIApplicationStatusBarOrientationUserInfoKeyÂèØ‰ª•ÂèñÂà∞Â∞ÜË¶ÅÊóãËΩ¨Âà∞ÁöÑÊñπÂêë„ÄÇ UIApplicationDidChangeStatusBarOrientationNotification Áä∂ÊÄÅÊ†èÂ∑≤ÁªèÊóãËΩ¨ÔºåËøô‰∏™Êó∂ÂÄôÂèñviewÁöÑframeÊòØÊóãËΩ¨‰πãÂêéÁöÑ NSNotification‰∏≠Áî®key UIApplicationStatusBarOrientationUserInfoKeyÂèØ‰ª•ÂèñÂà∞ÊóãËΩ¨‰πãÂâçÁöÑÊñπÂêë„ÄÇ UIDeviceOrientationDidChangeNotification ËÆæÂ§áÊñπÂêëÂèòÊõ¥ÔºåÂú®Êî∂Âà∞ÈÄöÁü•Êó∂ÂèñviewÁöÑframeÊòØÊóãËΩ¨‰πãÂêéÁöÑ„ÄÇ Âú®ÊâãÊú∫‰∏äÂ∞ÜÊóãËΩ¨Â±èÂπïÈîÅÂÆö‰πãÂêéÔºåËÆæÂ§áÊñπÂêëÂèòÊõ¥‰πãÂêéÊî∂‰∏çÂà∞ËØ•ÈÄöÁü• Âú®‰ª£Á†ÅÈáåÈù¢ÈôêÂà∂ËÆæÂ§áÊóãËΩ¨ÊñπÂêëÔºåËÆæÂ§áÊñπÂêëÂèòÊõ¥Âêé‰æùÁÑ∂ËÉΩÊî∂Âà∞ËØ•ÈÄöÁü• Ë∞ÉÁî®È°∫Â∫èÂ¶Ç‰∏ã 12345678910st=&gt;start: ÊóãËΩ¨Â±èÂπïe=&gt;end: ÁªìÊùüop1=&gt;operation: viewWillTransitionToSize:withTransitionCoordinator:op2=&gt;operation: UIApplicationWillChangeStatusBarOrientationNotificationop3=&gt;operation: UIApplicationDidChangeStatusBarOrientationNotificationop4=&gt;operation: viewWillLayoutSubviewsop5=&gt;operation: viewDidLayoutSubviewsop6=&gt;operation: UIDeviceOrientationDidChangeNotificationst-&gt;op1-&gt;op2-&gt;op3-&gt;op4-&gt;op5-&gt;op6-&gt;e Ëá™ÂÆö‰πâWindowÁöÑÊóãËΩ¨‰∫ã‰ª∂Â¶ÇÊûúÊÉ≥Ë¶ÅÂú®Ëá™ÂÆö‰πâWindowÁöÑÂ≠êViewÊî∂Âà∞Â±èÂπïÊóãËΩ¨ÈÄöÁü•ÔºåË¶ÅËÆæÁΩÆUIWindowÁöÑrootViewControllerÔºåÁÑ∂ÂêéÊääÊâÄÊúâÂ≠êviewÈÉΩÂä†Âà∞rootViewControllerÔºåÁ≥ªÁªü‰ºöÂ§ÑÁêÜÊ®™Á´ñÂ±è‰∫ã‰ª∂„ÄÇËøôÈáåÊàëËøòÈÅáÂà∞‰∏Ä‰∏™ÂùëËÆ∞‰∏Ä‰∏™ÂÆûÁé∞UIWindowÂ≠êÁ±ªÁöÑÂ∞èÂùë„ÄÇ Êé®ËçêÈòÖËØªhttps://satanwoo.github.io/2016/09/17/uiwindow-iOS/iOSÂ±èÂπïÊóãËΩ¨Áü•ËØÜÁÇπ‰ª•ÂèäÂÆûÁé∞iOS Â±èÂπïÊóãËΩ¨ÁöÑÈÇ£‰∫õ‰∫ãÔºà‰∏ÄÔºâÊµÖË∞àiOSÁöÑÂ§öWindowÂ§ÑÁêÜ]]></content>
      <tags>
        <tag>iOSÁü•ËØÜÂ∞èÁªì</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ËÆ∞‰∏Ä‰∏™ÂÆûÁé∞UIWindowÂ≠êÁ±ªÁöÑÂ∞èÂùë]]></title>
    <url>%2F2018%2F07%2F19%2F%E8%AE%B0%E4%B8%80%E4%B8%AA%E5%AE%9E%E7%8E%B0UIWindow%E5%AD%90%E7%B1%BB%E7%9A%84%E5%B0%8F%E5%9D%91%2F</url>
    <content type="text"><![CDATA[ÈóÆÈ¢òÊèèËø∞È°πÁõÆ‰∏≠‰∏∫‰∫ÜÂÆûÁé∞‰∏Ä‰∏™ÂÖ®Â±ÄÈÅÆÁΩ©ÁïåÈù¢Ôºå‰ΩøÁî®‰∫Ü‰∏Ä‰∏™UIWindowÁöÑÂ≠êÁ±ªMyWindowÔºåMyWindow‰∏∫‰∫ÜÂÆûÁé∞ÂõûË∞ÉÂÆö‰πâ‰∫Ü‰ª£ÁêÜMyWindowDelegate„ÄÇ‰ª£Á†ÅÂ§ßËá¥Â¶Ç‰∏ãÔºö 123456789101112131415161718192021@protocol MyWindowDelegate &lt;NSObject&gt;@end@interface MyWindow : UIWindow@property (nonatomic, assign)id&lt;MyWindowDelegate&gt; delegate;@end@implementation MyWindow- (instancetype)init&#123; self = [super init]; if (self) &#123; self.windowLevel = UIWindowLevelNormal; self.backgroundColor = [UIColor whiteColor]; UIViewController *vc = [[ViewController2 alloc] init]; self.rootViewController = vc; self.hidden = NO; &#125; return self;&#125;@end ÁÑ∂ÂêéÂú®ÂÆûÁé∞ÁïåÈù¢Ê®™Â±èÊó∂ÔºåÂèëÁé∞Êï¥‰∏™UIWindow‰∏çÂìçÂ∫îÊ®™Á´ñÂ±è‰∫ã‰ª∂„ÄÇÂàöÂºÄÂßã‰ª•‰∏∫Ê®™Á´ñÂ±èËÆæÁΩÆË¢´ÂÖ≥Èó≠‰∫ÜÔºåÊü•‰∫ÜÂêÑÁßçËµÑÊñôÔºåÂèëÁé∞ËøôÁßçÂÜôÊ≥ïÊòØÊ≤°ÊúâÈóÆÈ¢òÁöÑ„ÄÇËÆæÁΩÆUIWindowÁöÑrootViewControllerÔºåÁÑ∂ÂêéÊääÊâÄÊúâÂ≠êviewÈÉΩÂä†Âà∞rootViewControllerÔºåÁ≥ªÁªü‰ºöÂ§ÑÁêÜÊ®™Á´ñÂ±èÈóÆÈ¢ò„ÄÇ ÈóÆÈ¢òÂàÜÊûêÁî®RuntimeÊääUIWindowÁöÑÁßÅÊúâÂèòÈáèÊâìÂá∫Êù•ÔºåÂ∞±ÂèëÁé∞ÈóÆÈ¢ò‰∫Ü„ÄÇ 123456789#import &lt;objc/runtime.h&gt;- (void)printUIWindowIvars &#123; Ivar *ivars = class_copyIvarList([UIWindow class], &amp;count); for (int i = 0; i &lt; count; i++) &#123; Ivar ivar = ivars[i]; NSLog(@"%s", ivar_getName(ivar)); &#125;&#125; Êàë‰ª¨ÁúãÁúãËæìÂá∫ÔºåÂèëÁé∞Êúâ‰∏™ÁßÅÊúâÂèòÈáè_delegate„ÄÇ MyWindowÁöÑÂ±ûÊÄßdelegateË¶ÜÁõñ‰∫ÜÁà∂Á±ªUIWindowÁöÑÂèòÈáèÔºåÂØºËá¥Ê®™Á´ñÂ±èÂàáÊç¢‰∫ã‰ª∂Â§±Êïà„ÄÇÂú®‰ª£ÁêÜÂëΩÂêçÁöÑÊó∂ÂÄô‰∏ÄÂÆöË¶ÅÊ≥®ÊÑèÂïäÔºådelegateÁúãÊù•‰∏çÊòØ‰∏Ä‰∏™Â•ΩÁöÑÂÆûË∑µÔºåÂ∫îËØ•Âä†ÂâçÁºÄÂå∫ÂàÜÈÅøÂÖçË¶ÜÁõñÁà∂Á±ªÁöÑÂÆûÁé∞ÔºåÁâπÂà´ÊòØËøôÁßçÁßÅÊúâÁöÑÂèòÈáè„ÄÇ]]></content>
      <tags>
        <tag>iOSÁü•ËØÜÂ∞èÁªì</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[‰∏Ä‰∏™autoreleasepoolÁöÑ‰ΩøÁî®Âú∫ÊôØ]]></title>
    <url>%2F2018%2F07%2F18%2F%E4%B8%80%E4%B8%AAautoreleasepool%E7%9A%84%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF%2F</url>
    <content type="text"><![CDATA[‰ªäÂ§©Âú®Â≠¶‰π†Â§ß‰Ω¨ÂçöÂÆ¢ÁöÑÊó∂ÂÄôÁúãÂà∞‰∏Ä‰∏™ÈóÆÈ¢òÔºå‰∏ãÈù¢‰ª£Á†Å‰ºöÊúâ‰ªÄ‰πàÈóÆÈ¢òÔºü 123456// largeNumberÊòØ‰∏Ä‰∏™ÂæàÂ§ßÁöÑÊï∞for (int i = 0; i &lt; largeNumber; i++) &#123; NSString *str = [NSString stringWithFormat:@"hello -%04d", i]; str = [str stringByAppendingString:@" - world"]; NSLog(@"%@", str);&#125; ÂàöÂºÄÂßãÊ≤°ÁúãÂá∫‰ªÄ‰πàÈóÆÈ¢òÔºåÂ∞±ÊòØÊôÆÈÄöÁöÑÂæ™ÁéØÔºåÊØèÊ¨°Âæ™ÁéØÂàõÂª∫‰∏Ä‰∏™Â±ÄÈÉ®ÂèòÈáèNSString„ÄÇ‰∫éÊòØÂÜô‰∫Ü‰∏™DemoÈ™åËØÅ‰∫Ü‰∏ãÔºåÂú®ËßÇÂØüÂÜÖÂ≠òÁöÑÊó∂ÂÄôÂèëÁé∞‰∫ÜÁ´ØÂÄ™ÔºåÂú®Âæ™ÁéØËøáÁ®ã‰∏≠ÔºåÂÜÖÂ≠ò‰∏çÊñ≠È£ôÂçá„ÄÇ È°øÊó∂ÊòéÁôΩ‰∫ÜÔºåÂéüÊù•ÈóÆÈ¢òÁöÑÂÖ≥ÈîÆÂ∞±ÊòØËøô‰∏™largeNumberÔºåÂΩìÂæ™ÁéØÊ≠§Êó∂ÂæàÂ§ßÊó∂ÔºåÂ∞±‰ºöÂàõÂª∫Â§ßÈáèÁöÑÂ±ÄÈÉ®ÂèòÈáèÔºåËÄå‰∏îÂæó‰∏çÂà∞ÈáäÊîæÔºå‰∫éÊòØÂÜÖÂ≠òÂ∞±ÁàÜ‰∫Ü„ÄÇËøôÊó∂ÂÄôÂ∞±ËØ•@autoreleasepool‰∏äÂú∫‰∫ÜÔºå‰ºòÂåñÂêé‰ª£Á†ÅÔºö 1234567for (int i = 0; i &lt; largeNumber; i++) &#123; @autoreleasepool &#123; NSString *str = [NSString stringWithFormat:@"hello -%04d", i]; str = [str stringByAppendingString:@" - world"]; NSLog(@"%@", str); &#125;&#125; Êü•ÁúãËøêË°åÂÜÖÂ≠òÔºåÂèØ‰ª•ÁúãÂà∞ÈùûÂ∏∏Âπ≥Á®≥„ÄÇ]]></content>
      <tags>
        <tag>iOSÁü•ËØÜÂ∞èÁªì</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[UITabbarËá™ÂÆö‰πâBadge]]></title>
    <url>%2F2018%2F07%2F10%2FUITabbar%E8%87%AA%E5%AE%9A%E4%B9%89Badge%2F</url>
    <content type="text"><![CDATA[tabBarItemÁöÑBadgeÈªòËÆ§Ê†∑ÂºèÊòØÂ∏¶Êï∞Â≠óÁöÑÔºå‰ΩÜÊòØ‰∫ßÂìÅË¶ÅÊ±ÇÂè™Ë¶Å‰∏Ä‰∏™Â∞èÁ∫¢ÁÇπÔºå‰∏çÈúÄË¶ÅÊï∞Â≠óÔºåËøôÂ∞±ÈúÄË¶ÅÊàë‰ª¨Ëá™ÂÆö‰πâBadge‰∫Ü„ÄÇ Áî®RevealÂàÜÊûêUITabBarÔºåÂèëÁé∞ÊØè‰∏™ÊåâÈíÆÊòØ‰∏Ä‰∏™UITabBarButtonÔºåÂ±ÇÁ∫ßÂ¶Ç‰∏ãÔºö -UITabBarButton‚ÄìUITabBarSwappableImageView // ÂõæÊ†á‚ÄìUITabBarButtonLabel // ÊñáÂ≠ó Â¶Ç‰Ωï‰ªéUITabBar‰∏≠ÊâæÂà∞ÂØπÂ∫îindexÁöÑUITabBarButtonÂë¢ÔºüÊàë‰ª¨Êñ≠ÁÇπË∞ÉËØï‰∏ãÔºåÂèØ‰ª•ÁúãÂà∞ÂèØ‰ª•Áõ¥Êé•‰ªéUITabBar‰∏≠Áî®KVCÂèñÂá∫„ÄÇ ÂÆûÁé∞ÊñπÊ°àÂ¶Ç‰∏ãÔºö Áî®KVCÊâæÂà∞UITabBarSwappableImageViewÔºåÂÖ≥ÈîÆÂáΩÊï∞__iconViewWithIndex Êñ∞Âª∫BadgeÔºåÂä†Âà∞UITabBarSwappableImageView‰∏ä Êñ∞Âª∫BadgeÁöÑÊó∂ÂÄôËÆæÁΩÆTagÔºåÈÄöËøáTagÊù•ÁßªÈô§Badge ‰∏ä‰ª£Á†Å 12345678910111213141516171819202122232425262728293031323334353637383940414243444546static NSInteger const kBadgeViewTagBase = 10000;@implementation UITabBar (badge)// ÊòæÁ§∫Badge- (void)showBadgeOnItemIndex:(int)index &#123; if (index &gt;= self.items.count) &#123; return; &#125; // Â¶ÇÊûú‰πãÂâçÊ∑ªÂä†ËøáÔºåÁõ¥Êé•ËÆæÁΩÆhidden‰∏∫NO UIView *icon = [self __iconViewWithIndex:index]; for (UIView *subView in icon.subviews) &#123; if (subView.tag == kBadgeViewTagBase) &#123; subView.hidden = NO; return; &#125; &#125; UIView *badgeView = [[UIView alloc] init]; badgeView.tag = kBadgeViewTagBase; badgeView.layer.cornerRadius = 5; badgeView.backgroundColor = [UIColor redColor]; badgeView.frame = CGRectMake(icon.frame.size.width - 5, 0, 9, 9); [icon addSubview:badgeView];&#125;// ÈöêËóèBadge- (void)hideBadgeOnItemIndex:(int)index &#123; UIView *icon = [self __iconViewWithIndex:index]; for (UIView *subView in icon.subviews) &#123; if (subView.tag == kBadgeViewTagBase) &#123; subView.hidden = YES; &#125; &#125;&#125;// Ëé∑ÂèñÂõæÊ†áÊâÄÂú®View- (UIView *)__iconViewWithIndex:(int)index &#123; UITabBarItem *item = self.items[index]; UIView *tabBarButton = [item valueForKey:@"_view"]; UIView *icon = [tabBarButton valueForKey:@"_info"]; return icon;&#125;@end]]></content>
      <tags>
        <tag>iOSÁü•ËØÜÂ∞èÁªì</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ËÆ°ÁÆóÊñáÂ≠óÈïøÂ∫¶]]></title>
    <url>%2F2018%2F07%2F09%2F%E8%AE%A1%E7%AE%97%E6%96%87%E5%AD%97%E9%95%BF%E5%BA%A6%2F</url>
    <content type="text"><![CDATA[ÂÆòÊñπÊñáÊ°£ ÊñπÊ≥ïÂÆö‰πâ1234- (NSRect)boundingRectWithSize:(NSSize)size options:(NSStringDrawingOptions)options attributes:(NSDictionary&lt;NSAttributedStringKey, id&gt; *)attributes context:(NSStringDrawingContext *)context; ÂèÇÊï∞ÂÆö‰πâsizeÁªòÂà∂ÁöÑÈôêÂà∂sizeÔºåËÆ°ÁÆóÂá∫Êù•ÁöÑÂÄº‰∏ç‰ºöË∂ÖËøáËøô‰∏™Â§ßÂ∞è„ÄÇ options‰∏Ä‰∫õÈÖçÁΩÆÈ°π„ÄÇÂÆö‰πâÂ¶Ç‰∏ãÔºö 1234567typedef NS_OPTIONS(NSInteger, NSStringDrawingOptions) &#123; NSStringDrawingUsesLineFragmentOrigin = 1 &lt;&lt; 0, // The specified origin is the line fragment origin, not the base line origin NSStringDrawingUsesFontLeading = 1 &lt;&lt; 1, // Uses the font leading for calculating line heights NSStringDrawingUsesDeviceMetrics = 1 &lt;&lt; 3, // Uses image glyph bounds instead of typographic bounds NSStringDrawingTruncatesLastVisibleLine NS_ENUM_AVAILABLE(10_5, 6_0) = 1 &lt;&lt; 5, // Truncates and adds the ellipsis character to the last visible line if the text doesn't fit into the bounds specified. Ignored if NSStringDrawingUsesLineFragmentOrigin is not also set.&#125; NS_ENUM_AVAILABLE(10_0, 6_0); ÂÆûÈôÖÊµãËØï‰ΩøÁî®NSStringDrawingUsesLineFragmentOrigin|NSStringDrawingUsesFontLeadingÂèØ‰ª•Êª°Ë∂≥ÈúÄÊ±ÇÔºåNSStringDrawingUsesLineFragmentOriginÊòØÂøÖÈ°ªÁöÑÔºåNSStringDrawingUsesFontLeadingÂä†‰∏çÂä†Âú®ÊµãËØïÁöÑÊó∂ÂÄôÊ≤°ÂèëÁé∞Âå∫Âà´Ôºå‰ΩÜÊòØÂú®stackoverflowÁõ∏ÂÖ≥ËÆ®ËÆ∫ÈáåÂä†‰∏ä‰∫ÜÔºåÁïô‰∏™ÂùëÔºåÂêéÈù¢Áü•ÈÅì‰∏∫‰ªÄ‰πà‰∫ÜÊù•Ë°•ÂÖÖÂêß„ÄÇ attributesÂ≠ó‰Ωì context‰∏ä‰∏ãÊñá Ê≥®ÊÑè‰∫ãÈ°π Â¶ÇÊûúÊòØÂ§öË°åÊñáÂ≠óÔºåoptionsË¶ÅÂä†‰∏äNSStringDrawingUsesLineFragmentOrigin ËøîÂõûÁöÑÂÄºÊòØÂ∞èÊï∞ÔºåÈúÄË¶ÅË∞ÉÁî®ceilÂêë‰∏äÂèñÊï¥ ÂæóÂà∞ÁöÑÂÆΩÂ∫¶ÂèØËÉΩÊØîÂÆûÈôÖÂÆΩ ‰ª£Á†ÅÁ§∫‰æã1234567891011121314151617181920+ (CGSize)getTextLabelSize:(NSString *)message &#123; if ([message length] &gt; 0) &#123; // ÊñáÊú¨Ê°ÜÁöÑÊúÄÂ§ßÂÆΩÂ∫¶ float maxWidth = 200; CGRect textRect = [message boundingRectWithSize:CGSizeMake(maxWidth, CGFLOAT_MAX) options:(NSStringDrawingUsesLineFragmentOrigin | NSStringDrawingUsesFontLeading) attributes:@&#123; NSFontAttributeName : [UIFont systemFontOfSize:16] &#125; context:nil]; textRect.size.height = ceilf(textRect.size.height); textRect.size.width = ceilf(textRect.size.width); return CGSizeMake(textRect.size.width, textRect.size.height); &#125; else &#123; return CGSizeZero; &#125;&#125;]]></content>
      <tags>
        <tag>iOSÁü•ËØÜÂ∞èÁªì</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[UITextFieldÊéßÂà∂ËæìÂÖ•ÈïøÂ∫¶]]></title>
    <url>%2F2018%2F07%2F06%2FUITextField%E6%8E%A7%E5%88%B6%E8%BE%93%E5%85%A5%E9%95%BF%E5%BA%A6%2F</url>
    <content type="text"><![CDATA[Êúâ‰∫õÊó∂ÂÄô‰ºöÊúâÊéßÂà∂ËæìÂÖ•Ê°ÜÊñáÂ≠óÈïøÂ∫¶ÁöÑÈúÄÊ±ÇÔºåËÆ∞ÂΩï‰∏Ä‰∏™ÁÆÄÂçïÁöÑÊÄùË∑Ø„ÄÇ 12345678910111213141516171819- (BOOL)textField:(UITextField *)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString *)string &#123; if (string.length == 0) &#123; return YES; &#125; NSInteger limit = 15; // ÊñáÊú¨ÁöÑÊúÄÂ§ßÈïøÂ∫¶ NSString *newStr = [textField.text stringByAppendingString:string]; // ‰øÆÊîπ‰πãÂêéÁöÑÊñ∞Â≠óÁ¨¶‰∏≤ NSInteger newStrLength = newStr.length; newStrLength -= [textField textInRange:[textField markedTextRange]].length; // ÂéªÊéâÈ´ò‰∫ÆÂÜÖÂÆπÔºåËæìÂÖ•‰∏≠ÊñáÊãºÈü≥ÁöÑÊÉÖÂÜµ if (newStrLength &gt; limit) &#123; // Â§ÑÁêÜcomposed character, ÊØîÂ¶Çemoji NSString *tempStr = [newStr substringWithRange:[newStr rangeOfComposedCharacterSequencesForRange:NSMakeRange(0, limit)]]; textField.text = tempStr; return NO; &#125; return YES;&#125; Êúâ‰∏§‰∏™ÂùëÊ≥®ÊÑè‰∏ãÔºö emojiÊòØcomposed characterÔºåÂÆÉÊòØÁî±Â§ö‰∏™Â≠óÁ¨¶ÁªÑÂêàÔºåÈïøÂ∫¶‰∏çÊòØ1„ÄÇÊúÄÂºÄÂßãÁî®ÁöÑsubstringToIndex‰ºöÂØºËá¥ÊúÄÂêé‰∏Ä‰∏™emoji‰π±Á†Å„ÄÇ ËÆ°ÁÆóÈïøÂ∫¶ÁöÑÊó∂ÂÄôË¶ÅÂéªÊéâ‰∏≠ÊñáËæìÂÖ•ÁöÑÊó∂ÂÄôÈ´ò‰∫ÆÈÉ®ÂàÜ]]></content>
      <tags>
        <tag>iOSÁü•ËØÜÂ∞èÁªì</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[property or synthsize]]></title>
    <url>%2F2018%2F07%2F05%2Fproperty%20or%20synthsize%2F</url>
    <content type="text"><![CDATA[@property (nonatomic, retain) NSObject *var; ÁîüÊàêvarÁöÑset„ÄÅgetÊñπÊ≥ïÁöÑÊñπÊ≥ïÂ£∞Êòé ÁîüÊàêvarÁöÑset„ÄÅgetÊñπÊ≥ïÁöÑÂÆûÁé∞ÔºàÊó©ÊúüÁâàÊú¨ÁºñËØëÂô®‰∏çÁîüÊàêÔºâ ÁîüÊàêÊàêÂëòÂèòÈáè_varÔºàÊó©ÊúüÁâàÊú¨ÁºñËØëÂô®‰∏çÁîüÊàêÔºâ @synthsize var = _var ÁîüÊàêvarÁöÑset„ÄÅgetÊñπÊ≥ïÁöÑÂÆûÁé∞ ÁîüÊàêvarÂØπÂ∫îÁöÑÊàêÂëòÂèòÈáè_var mrcÂπ¥‰ª£ÁöÑget„ÄÅsetÊñπÊ≥ïÁöÑÂÜôÊ≥ï 1234567891011- (void)setVar:(NSObject *)var &#123; if (_var != var) &#123; // Â¶ÇÊûúÂ§öÊ¨°setÂêå‰∏Ä‰∏™ÂØπË±°ÔºåÂ¶ÇÊûú‰∏çÂà§Êñ≠‰ºöÂØºËá¥ÂØπË±°Ë¢´ÈáäÊîæ // ÈáäÊîæ‰πãÂâçÁöÑvar [_var release]; _var = [var retain]; &#125;&#125;- (NSObject *)var &#123; return _var;&#125;]]></content>
      <tags>
        <tag>iOSÁü•ËØÜÂ∞èÁªì</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Tagged PointerÂ∞èËÆ∞]]></title>
    <url>%2F2018%2F07%2F04%2FTagged%20Pointer%E5%B0%8F%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[Êú¨Êñá‰ΩøÁî®ÁöÑÊµãËØïÁéØÂ¢ÉÊòØarm64Êû∂ÊûÑÁúüÊú∫ ‰∏∫‰∫ÜÊé¢Á©∂Tagged PointerÊú¨Ë¥®ÔºåÂèØ‰ª•Êü•ÁúãruntimeÊ∫êÁ†ÅÔºå‰∏ªË¶ÅÁúãÊñá‰ª∂objc-internal.h„ÄÇ ÂÆèÂÆö‰πâÂèØ‰ª•ÁúãÂà∞‰ª•‰∏ãÂÆèÂÆö‰πâÔºåÂè™ÊúâÂú®64‰ΩçÁ≥ªÁªüÊâçÊîØÊåÅTagged Pointer„ÄÇ 123#if __LP64__#define OBJC_HAVE_TAGGED_POINTERS 1#endif 64-bitÁöÑmacÔºåtagÂ≠òÂÇ®Âú®LSBÔºàLeast Significant Bit ÊúÄ‰Ωé‰ΩçÔºâ„ÄÇÂÖ∂ÂÆÉÊÉÖÂÜµÊØîÂ¶Ç64‰ΩçÁöÑÁúüÊú∫ÂíåÊ®°ÊãüÂô®ÔºåtagÂ≠òÂÇ®Âú®MSBÔºàMost Significant Bit ÊúÄÈ´ò‰ΩçÔºâ„ÄÇ 12345678910111213141516171819202122232425262728293031#if TARGET_OS_OSX &amp;&amp; __x86_64__ // 64-bit Mac - tag bit is LSB# define OBJC_MSB_TAGGED_POINTERS 0#else // Everything else - tag bit is MSB# define OBJC_MSB_TAGGED_POINTERS 1#endif#if OBJC_MSB_TAGGED_POINTERS# define _OBJC_TAG_MASK (1UL&lt;&lt;63)# define _OBJC_TAG_INDEX_SHIFT 60# define _OBJC_TAG_SLOT_SHIFT 60# define _OBJC_TAG_PAYLOAD_LSHIFT 4# define _OBJC_TAG_PAYLOAD_RSHIFT 4# define _OBJC_TAG_EXT_MASK (0xfUL&lt;&lt;60)# define _OBJC_TAG_EXT_INDEX_SHIFT 52# define _OBJC_TAG_EXT_SLOT_SHIFT 52# define _OBJC_TAG_EXT_PAYLOAD_LSHIFT 12# define _OBJC_TAG_EXT_PAYLOAD_RSHIFT 12#else# define _OBJC_TAG_MASK 1UL# define _OBJC_TAG_INDEX_SHIFT 1# define _OBJC_TAG_SLOT_SHIFT 0# define _OBJC_TAG_PAYLOAD_LSHIFT 0# define _OBJC_TAG_PAYLOAD_RSHIFT 4# define _OBJC_TAG_EXT_MASK 0xfUL# define _OBJC_TAG_EXT_INDEX_SHIFT 4# define _OBJC_TAG_EXT_SLOT_SHIFT 4# define _OBJC_TAG_EXT_PAYLOAD_LSHIFT 0# define _OBJC_TAG_EXT_PAYLOAD_RSHIFT 12#endif Êé•‰∏ãÊù•ÊòØ‰∏Ä‰∏™Êûö‰∏æÂÆö‰πâÔºåÂÆö‰πâ‰∫ÜÈªòËÆ§ÁöÑ‰ΩøÁî®Tagged PointerÁöÑÁ±ª„ÄÇ‰æãÂ¶ÇNSString„ÄÅNSNumber„ÄÅNSIndexPath„ÄÅNSDateÔºàOBJC_TAG_NSAtom„ÄÅOBJC_TAG_1„ÄÅOBJC_TAG_NSManagedObjectID‰∏çÁü•ÈÅìÊòØÂï•ÊÑèÊÄùÔºåËøòËØ∑Áü•ÈÅìÁöÑÂêåÂ≠¶ÂëäËØâÊàëÔºâ„ÄÇ 12345678910111213141516171819enum objc_tag_index_t : uint16_tenum&#123; OBJC_TAG_NSAtom = 0, OBJC_TAG_1 = 1, OBJC_TAG_NSString = 2, OBJC_TAG_NSNumber = 3, OBJC_TAG_NSIndexPath = 4, OBJC_TAG_NSManagedObjectID = 5, OBJC_TAG_NSDate = 6, OBJC_TAG_RESERVED_7 = 7, OBJC_TAG_First60BitPayload = 0, OBJC_TAG_Last60BitPayload = 6, OBJC_TAG_First52BitPayload = 8, OBJC_TAG_Last52BitPayload = 263, OBJC_TAG_RESERVED_264 = 264&#125;; ÊñπÊ≥ïÂÆö‰πâÂà§Êñ≠ÊòØ‰∏çÊòØTagged Pointer 12345static inline bool_objc_isTaggedPointer(const void * _Nullable ptr) &#123; return ((uintptr_t)ptr &amp; _OBJC_TAG_MASK) == _OBJC_TAG_MASK;&#125; ÁîüÊàê‰∏Ä‰∏™Tagged PointerÔºåÊúÄÈ´òÁöÑ4‰ΩçÊòØtaggedÔºåÂâ©‰∏ãÁöÑÊòØÊï∞ÊçÆ 123456789101112131415static inline void * _Nonnull_objc_makeTaggedPointer(objc_tag_index_t tag, uintptr_t value)&#123; if (tag &lt;= OBJC_TAG_Last60BitPayload) &#123; return (void *) (_OBJC_TAG_MASK | ((uintptr_t)tag &lt;&lt; _OBJC_TAG_INDEX_SHIFT) | ((value &lt;&lt; _OBJC_TAG_PAYLOAD_RSHIFT) &gt;&gt; _OBJC_TAG_PAYLOAD_LSHIFT)); &#125; else &#123; return (void *) (_OBJC_TAG_EXT_MASK | ((uintptr_t)(tag - OBJC_TAG_First52BitPayload) &lt;&lt; _OBJC_TAG_EXT_INDEX_SHIFT) | ((value &lt;&lt; _OBJC_TAG_EXT_PAYLOAD_RSHIFT) &gt;&gt; _OBJC_TAG_EXT_PAYLOAD_LSHIFT)); &#125;&#125; ‰ªéTagged Pointer‰∏≠ÂèñÂá∫ÂÄº 1234567891011static inline uintptr_t_objc_getTaggedPointerValue(const void * _Nullable ptr) &#123; // assert(_objc_isTaggedPointer(ptr)); uintptr_t basicTag = ((uintptr_t)ptr &gt;&gt; _OBJC_TAG_INDEX_SHIFT) &amp; _OBJC_TAG_INDEX_MASK; if (basicTag == _OBJC_TAG_INDEX_MASK) &#123; return ((uintptr_t)ptr &lt;&lt; _OBJC_TAG_EXT_PAYLOAD_LSHIFT) &gt;&gt; _OBJC_TAG_EXT_PAYLOAD_RSHIFT; &#125; else &#123; return ((uintptr_t)ptr &lt;&lt; _OBJC_TAG_PAYLOAD_LSHIFT) &gt;&gt; _OBJC_TAG_PAYLOAD_RSHIFT; &#125;&#125; NSNumberÂ∫îÁî®‰∏æ‰æãÂèØ‰ª•‰ΩøÁî®‰∏ãÈù¢‰ª£Á†ÅÊù•È™åËØÅNSNumberÂ¶Ç‰Ωï‰ΩøÁî®Tagged Pointer 1234567891011121314NSNumber *charNumber = [NSNumber numberWithChar:'1'];NSNumber *shortNumber = [NSNumber numberWithShort:1];NSNumber *intNumber = [NSNumber numberWithInt:1];NSNumber *floatNumber = [NSNumber numberWithFloat:1.0];NSNumber *longNumber = [NSNumber numberWithLong:1];NSNumber *doubleNumber = [NSNumber numberWithDouble:1.0];// ËæìÂá∫ÂèòÈáèÁöÑÊåáÈíàÂú∞ÂùÄÔºö// charNumber 0xb000000000000310// shortNumber 0xb000000000000011// intNumber 0xb000000000000012// floatNumber 0xb000000000000014// longNumber 0xb000000000000013// doubleNumber 0xb000000000000015 ‰∏çÈöæÂèëÁé∞ËßÑÂæãÔºåÈÉΩÊòØ‰ª•b(1011)ÂºÄÂ§¥ ÊúÄÈ´ò‰ΩçÊòØ1ÔºåËØ¥ÊòéËøô‰∏™ÊåáÈíàÊòØ‰∏Ä‰∏™Tagged Pointer Á¨¨61-63‰ΩçÊòØ11ÔºàÂçÅËøõÂà∂ÊòØ3ÔºâÔºå‰πüÂ∞±ÊòØOBJC_TAG_NSNumberÔºàÊü•‰∏äÈù¢ÁöÑÊûö‰∏æÔºâ Á¨¨1-4‰ΩçÊòØNSNumberÁöÑÁ±ªÂûãÔºöÊØîÂ¶ÇÔºåcharÊòØ0„ÄÅshortÊòØ1„ÄÅintÊòØ2„ÄÅfloatÊòØ4 Ââ©‰∏ãÁöÑ56‰ΩçÂ∞±ÊòØÁúüÊ≠£ÁöÑÂÄº‰∫Ü NSStringÂ∫îÁî®‰∏æ‰æã123456NSString *str1 = [NSString stringWithFormat:@"a"];NSString *str2 = [NSString stringWithFormat:@"ab"];// ËæìÂá∫ÂèòÈáèÁöÑÊåáÈíàÂú∞ÂùÄÔºö// str1: 0xa000000000000611// str2: 0xa000000000062612 ‰∏éNSNumberÁ±ª‰ºº ÊúÄÈ´ò‰ΩçÊòØ1ÔºåËØ¥ÊòéËøô‰∏™ÊåáÈíàÊòØ‰∏Ä‰∏™Tagged Pointer Á¨¨61-63‰ΩçÊòØ11ÔºàÂçÅËøõÂà∂ÊòØ2ÔºâÔºå‰πüÂ∞±ÊòØOBJC_TAG_NSString Á¨¨1-4‰ΩçÊòØÂ≠óÁ¨¶‰∏≤ÈïøÂ∫¶ Ââ©‰∏ãÁöÑ56‰ΩçÂ∞±ÊòØÁúüÊ≠£ÁöÑÂÄº‰∫Ü Êõ¥Â§öÁªÜËäÇÊé®ËçêËøôÁØáÊñáÁ´†ÈááÁî®Tagged PointerÁöÑÂ≠óÁ¨¶‰∏≤ ÂèÇËÄÉÊñáÁ´† iOS Tagged Pointer wiki Ê∑±ÂÖ•ÁêÜËß£Tagged Pointer]]></content>
      <tags>
        <tag>iOSÁü•ËØÜÂ∞èÁªì</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[URLWithString return nil]]></title>
    <url>%2F2018%2F07%2F03%2FURLWithString%20return%20nil%2F</url>
    <content type="text"><![CDATA[ÈóÆÈ¢òÊèèËø∞Âú®‰ΩøÁî®URLWithStringÁîüÊàêNSURLÊó∂ÔºåÂ¶ÇÊûúÂá∫Áé∞‰∏≠ÊñáÔºå‰ºöÂØºËá¥ËøîÂõûÁöÑNSURL‰∏∫nil„ÄÇ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö 1NSURL *aUrl = [NSURL URLWithString:@&quot;http://‰∏≠ÊñáÂüüÂêç&quot;]; stackoverflowÁõ∏ÂÖ≥ËÆ®ËÆ∫ Êü•ËØ¢‰∫ÜURLWithStringÁöÑÂÆòÊñπÊñáÊ°£ÔºåÂÖ∂‰∏≠Êúâ‰∏ÄÊÆµËØùËß£ÂÜ≥‰∫ÜÊàëÁöÑÁñëÊÉë„ÄÇ This method expects URLString to contain only characters that are allowed in a properly formed URL. All other characters must be properly percent escaped. Any percent-escaped characters are interpreted using UTF-8 encoding. ÊÑèÊÄùÂ∞±ÊòØËØ•ÊñπÊ≥ïÁöÑËæìÂÖ•ÂèÇÊï∞URLStringÂè™ËÉΩÂåÖÂê´URLÁöÑÂêàÊ≥ïÂ≠óÁ¨¶ÔºåÂåÖÂê´ÈùûÊ≥ïÂ≠óÁ¨¶ÁöÑURLÈúÄË¶ÅËøõË°åÁôæÂàÜÂè∑ÁºñÁ†Å(percent escaped) ÁôæÂàÜÂè∑ÁºñÁ†ÅÔºàpercent escapedÔºâwikiÁõ∏ÂÖ≥ËØçÊù° Êúâ‰∏§ÁßçÊÉÖÂÜµÂøÖÈ°ª‰ΩøÁî®ÁôæÂàÜÂè∑ÁºñÁ†Å ÂèÇÊï∞‰∏≠Âá∫Áé∞‰øùÁïôÂ≠óÁ¨¶ URLÊâÄÂÖÅËÆ∏ÁöÑÂ≠óÁ¨¶ÂàÜ‰Ωú‰øùÁïô‰∏éÊú™‰øùÁïôÔºå‰øùÁïôÂ≠óÁ¨¶ÊòØÈÇ£‰∫õÂÖ∑ÊúâÁâπÊÆäÂê´‰πâÁöÑÂ≠óÁ¨¶ URL‰∏≠Âá∫Áé∞ÈùûASCIIÂ≠óÁ¨¶ ÂØπ‰∫éÈùûASCIIÂ≠óÁ¨¶, ÈúÄË¶ÅËΩ¨Êç¢‰∏∫UTF-8Â≠óËäÇÂ∫èÔºåÂÜçËøõË°åÁôæÂàÜÂè∑ÁºñÁ†Å Ëß£ÂÜ≥ÊñπÊ°à‰ΩøÁî®ÊñπÊ≥ïstringByAddingPercentEscapesUsingEncodingÂØπURLÂ≠óÁ¨¶‰∏≤ÁôæÂàÜÂè∑ÁºñÁ†Å„ÄÇ 12NSString *encodeUrl = [url stringByAddingPercentEscapesUsingEncoding:NSUTF8StringEncoding]; NSURL *aUrl = [NSURL URLWithString:encodeUrl];]]></content>
      <tags>
        <tag>iOSÁü•ËØÜÂ∞èÁªì</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[iOSÊ∂àÊÅØËΩ¨ÂèëÂ∞èËÆ∞]]></title>
    <url>%2F2018%2F05%2F31%2FiOS%E6%B6%88%E6%81%AF%E8%BD%AC%E5%8F%91%E5%B0%8F%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[Ê∂àÊÅØËΩ¨ÂèëÊµÅÁ®ãÂõæ Â¶ÇÊûúÁ±ªÊé•Êî∂Âà∞Êó†Ê≥ïÂ§ÑÁêÜÁöÑÊ∂àÊÅØÔºå‰ºöËß¶ÂèëÊ∂àÊÅØËΩ¨ÂèëÊú∫Âà∂Ôºå‰∏ÄÂÖ±Êúâ‰∏â‰∏™Ê≠•È™§ÔºåÊé•ÂèóËÄÖÂú®ÊØè‰∏ÄÊ≠•‰∏≠ÂùáÊúâÊú∫‰ºöÂ§ÑÁêÜÊ∂àÊÅØ„ÄÇÊ≠•È™§Ë∂äÂæÄÂêéÔºåÂ§ÑÁêÜÊ∂àÊÅØÁöÑ‰ª£‰ª∑Â∞±Ë∂äÂ§ßÔºåÊâÄ‰ª•ÊúÄÂ•ΩÂÜçÁ¨¨‰∏ÄÊ≠•Â∞±Â§ÑÁêÜÂÆå„ÄÇ Á¨¨‰∏ÄÈÅìÈò≤Á∫øÂú®Á±ªÈáåÈù¢ÂÆûÁé∞‰∏§‰∏™ÊñπÊ≥ïÊù•Â§ÑÁêÜÊú™Áü•Ê∂àÊÅØ„ÄÇÊâßË°åÂä®ÊÄÅÊñπÊ≥ïËß£Êûê‰πãÂâçÔºåÂÖà‰ºöÂà§Êñ≠ÊòØÂê¶ÊõæÁªèÊúâÂä®ÊÄÅËß£Êûê„ÄÇ resolveInstanceMethodÔºöÂ§ÑÁêÜÂÆû‰æãÊñπÊ≥ï resolveClassMethodÔºöÂ§ÑÁêÜÁ±ªÊñπÊ≥ï Êàë‰ª¨Êù•Áúã‰∏™DemoÔºåÂÖàÁúãË∞ÉÁî®Êñπ‰ª£Á†Å 123TestA *testA = [[TestA alloc] init];[testA instanceMethod];[TestA classMethod]; ÂÜçÊù•ÁúãÁúãTestAÁöÑÂÆö‰πâ„ÄÇ 12345678910111213141516171819202122232425262728293031323334353637383940414243444546// TestA.h@interface TestA : NSObject- (void)instanceMethod;+ (void)classMethod;@end// TestA.m@implementation TestA- (void)newInstanceMethod &#123; NSLog(@"newInstanceMethod");&#125;+ (void)newClassMethod &#123; NSLog(@"newClassMethod");&#125;+ (BOOL)resolveInstanceMethod:(SEL)sel &#123; if (sel == @selector(instanceMethod)) &#123; // Âä®ÊÄÅÊ∑ªÂä†ÊñπÊ≥ïnewInstanceMethod Method method = class_getInstanceMethod([self class], @selector(newInstanceMethod)); IMP imp = method_getImplementation(method); class_addMethod([self class], sel, imp, method_getTypeEncoding(method)); // ÊàêÂäüÂ§ÑÁêÜÔºåÊ∂àÊÅØËΩ¨ÂèëÊú∫Âà∂ÁªìÊùüÔºåË∞ÉÁî®newInstanceMethod return YES; &#125; // ‰∏çËÉΩÂ§ÑÁêÜÔºåËøõÂÖ•Á¨¨‰∫åÊ≠• return [super resolveInstanceMethod:sel];&#125;+ (BOOL)resolveClassMethod:(SEL)sel &#123; if (sel == @selector(classMethod)) &#123; // Âä®ÊÄÅÊ∑ªÂä†ÊñπÊ≥ïnewClassMethod Method method = class_getInstanceMethod(object_getClass(self), @selector(newClassMethod)); IMP imp = method_getImplementation(method); class_addMethod(object_getClass(self), sel, imp, method_getTypeEncoding(method)); // ÊàêÂäüÂ§ÑÁêÜÔºåÊ∂àÊÅØËΩ¨ÂèëÊú∫Âà∂ÁªìÊùüÔºåË∞ÉÁî®newClassMethod return YES; &#125; // ‰∏çËÉΩÂ§ÑÁêÜÔºåËøõÂÖ•Á¨¨‰∫åÊ≠• return [super resolveClassMethod:sel];&#125;@end TestA‰∏≠Â§¥Êñá‰ª∂ÂÆö‰πâ‰∫Ü‰∏§‰∏™ÊñπÊ≥ïÔºå‰ΩÜÊòØÊ≤°ÊúâÂÆûÁé∞ÔºåÂ¶ÇÊûú‰∏çÁî®Ê∂àÊÅØËΩ¨ÂèëÊú∫Âà∂Â§ÑÁêÜÂºÇÂ∏∏Ôºå‰ºöÂØºËá¥crashÔºålogÊÉ≥ÂøÖÂ§ßÂÆ∂Â∫îËØ•ÂæàÁÜüÊÇâ *** Terminating app due to uncaught exception ‚ÄòNSInvalidArgumentException‚Äô, reason: ‚Äò-[TestA funcA]: unrecognized selector sent to instance 0x6040000125c0‚Äô ÂÆû‰æãÊñπÊ≥ïÂ≠òÂÇ®Âú®Á±ªÂØπË±°ÔºåÁ±ªÊñπÊ≥ïÂ≠òÂÇ®Âú®ÂÖÉÁ±ªÂØπË±°ÔºåÂú®Ë∞ÉÁî®class_addMethodÊó∂ÔºåÁ¨¨‰∏Ä‰∏™ÂèÇÊï∞ÈúÄË¶ÅÊ≥®ÊÑè„ÄÇ Á¨¨‰∫åÈÅìÈò≤Á∫øÁ¨¨‰∫åÈÅìÈò≤Á∫ø‰æùËµñ‰∏Ä‰∏™ÂáΩÊï∞forwardingTargetForSelector„ÄÇ 1234567891011121314151617// Á±ªÊñπÊ≥ï//+ (id)forwardingTargetForSelector:(SEL)aSelector &#123;// //&#125;- (id)forwardingTargetForSelector:(SEL)aSelector &#123; if (aSelector == @selector(instanceMethod)) &#123; // Ê∂àÊÅØËΩ¨ÂèëÁªôTestBÂÆû‰æã return [TestB new]; &#125; // Ê∂àÊÅØËΩ¨ÂèëÂ§±Ë¥•ÔºåËøõÂÖ•‰∏ã‰∏ÄÊ≠• return nil;&#125;// TestB.m- (void)instanceMethod &#123; NSLog(@"instanceMethod");&#125; Á¨¨‰∏âÈÅìÈò≤Á∫øÁ¨¨‰∏âÈÅìÈò≤Á∫øÊúâ‰∏§Ê≠• Ë∞ÉÁî®methodSignatureForSelectorÔºåËé∑ÂèñÊñ∞ÁöÑÊñπÊ≥ïÁ≠æÂêçÔºàËøîÂõûÂÄºÁ±ªÂûãÔºåÂèÇÊï∞Á±ªÂûãÔºâ Ë∞ÉÁî®forwardInvocationÔºåËΩ¨ÂèëÊ∂àÊÅØÔºå 123456789101112131415// ÊñπÊ≥ïÁ≠æÂêçÔºàËøîÂõûÂÄºÁ±ªÂûãÔºåÂèÇÊï∞Á±ªÂûãÔºâ// Á±ªÊñπÊ≥ïÂáèÂè∑Êîπ‰∏∫Âä†Âè∑- (NSMethodSignature *)methodSignatureForSelector:(SEL)aSelector &#123; NSMethodSignature *signature = [TestB instanceMethodSignatureForSelector:aSelector]; return signature;&#125;// NSInvocationÂ∞ÅË£Ö‰∫ÜÊñπÊ≥ïË∞ÉÁî®ÔºåÂåÖÊã¨ÔºöÊñπÊ≥ïË∞ÉÁî®ËÄÖ„ÄÅÊñπÊ≥ïÂêç„ÄÅÊñπÊ≥ïÂèÇÊï∞// anInvocation.target Ê∂àÊÅØÊé•ÂèóËÄÖ// anInvocation.selector ÂáΩÊï∞Âêç// [anInvocation getArgument:NULL atIndex:0]; Ëé∑ÂèñÂèÇÊï∞// Á±ªÊñπÊ≥ïÂáèÂè∑Êîπ‰∏∫Âä†Âè∑- (void)forwardInvocation:(NSInvocation *)anInvocation &#123; [anInvocation invokeWithTarget:[TestB new]];&#125;]]></content>
      <tags>
        <tag>iOSÁü•ËØÜÂ∞èÁªì</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Êé¢ÂØªObjective-CÂºïÁî®ËÆ°Êï∞Êú¨Ë¥®]]></title>
    <url>%2F2018%2F05%2F26%2F%E6%8E%A2%E5%AF%BBObjective-C%E5%BC%95%E7%94%A8%E8%AE%A1%E6%95%B0%E6%9C%AC%E8%B4%A8%2F</url>
    <content type="text"><![CDATA[Êú¨ÊñáÊ∂âÂèäÂà∞ÁöÑCPUÊû∂ÊûÑ‰∏∫arm64ÔºåÂÖ∂ÂÆÉÊû∂ÊûÑÂ§ßÂêåÂ∞èÂºÇ„ÄÇÊ∫êÁ†ÅÊù•Ëá™ËãπÊûúÂºÄÊ∫ê-runtime„ÄÇ Objective-C‰∏≠ÈááÁî®ÂºïÁî®ËÆ°Êï∞Êú∫Âà∂Êù•ÁÆ°ÁêÜÂÜÖÂ≠òÔºåÂú®MRCÊó∂‰ª£ÔºåÈúÄË¶ÅÊàë‰ª¨ÊâãÂä®retainÂíåreleaseÔºåÂú®ËãπÊûúÂºïÂÖ•ARCÂêéÂ§ßÈÉ®ÂàÜÊó∂Èó¥Êàë‰ª¨‰∏çÁî®ÂÜçÂÖ≥ÂøÉÂºïÁî®ËÆ°Êï∞ÈóÆÈ¢ò„ÄÇ‰ΩÜÊòØ‰∏∫‰∫ÜÊ∑±ÂÖ•Objective-CÊú¨Ë¥®ÔºåÂºïÁî®ËÆ°Êï∞Á©∂Á´üÊòØÊÄé‰πàÂÆûÁé∞ÁöÑËøòÊòØÂÄºÂæóÊàë‰ª¨ÂéªÊé¢ÂØªÁöÑ„ÄÇ ISAOC‰∏≠ÁöÑÂØπË±°ÁöÑÂÆûË¥®ÂÖ∂ÂÆûÊòØÁªìÊûÑ‰ΩìÔºåÂÖ∂‰∏≠Â§ßÈÉ®ÂàÜÂØπË±°ÈÉΩÊúâisaÔºåÊåáÂêëÁ±ªÂØπË±°ÔºàÊúâ‰∏ÄÁßçÁ•ûÂ•áÁöÑÂ≠òÂú®Âè´ÂÅöTagged PointerÔºâÔºåÊ∫êÁ†Å‰∏≠ÂÖ≥‰∫éÂØπË±°ÁªìÊûÑ‰Ωìobjc_objectÂÆö‰πâÂ¶Ç‰∏ãÔºö 123456789// objc-private.hstruct objc_object &#123;private: isa_t isa;public: id retain(); void release(); id autorelease(); ... //ÁúÅÁï•‰∫ÜÂÖ∂ÂÆÉÊñπÊ≥ïÔºåÊÑüÂÖ¥Ë∂£ÂèØ‰ª•Áõ¥Êé•ÁúãÊ∫êÁ†Å Tagged PointerÈô§‰∫ÜÊúâ‰∏ÄÁßçÁâπÊÆäÁöÑÂØπË±°Tagged PointerÔºåËøôÁßçÁ±ªÂûãÁöÑÂØπË±°ÂÄºÂ∞±Â≠òÂú®ÊåáÈíàÂΩì‰∏≠ÔºåÂ≠òÂèñÊÄßËÉΩÈ´ò„ÄÇÂèØ‰ª•Áî®Êù•Â≠òÂÇ®Â∞ëÈáèÊï∞ÊçÆÁöÑÂØπË±°Ôºå‰æãÂ¶ÇNSNumber„ÄÅNSDate„ÄÅNSString„ÄÇ(Êõ¥Â§öTagged PointerÁü•ËØÜÔºåÂÖ∑‰ΩìÁúãËøôÁØáTagged PointerÂ∞èËÆ∞)„ÄÇ‰πüÂ∞±Ê≤°ÊúâÂºïÁî®ËÆ°Êï∞„ÄÅÂÜÖÂ≠òÈáäÊîæÁöÑÈóÆÈ¢ò„ÄÇ NONPOINTER ISAarm64Êû∂ÊûÑisaÂç†64‰ΩçÔºåËãπÊûú‰∏∫‰∫Ü‰ºòÂåñÊÄßËÉΩÔºåÂ≠òÂÇ®Á±ªÂØπË±°Âú∞ÂùÄÂè™Áî®‰∫Ü33‰ΩçÔºåÂâ©‰∏ãÁöÑ‰ΩçÁî®Êù•Â≠òÂÇ®‰∏Ä‰∫õÂÖ∂ÂÆÉ‰ø°ÊÅØÔºåÊØîÂ¶ÇÊú¨ÊñáËÆ®ËÆ∫ÁöÑÂºïÁî®ËÆ°Êï∞„ÄÇ NONPOINTER ISAÂ≠òÂÇ®ÁöÑÂ≠óÊÆµÂÆö‰πâÂ¶Ç‰∏ãÔºö 1234567891011121314151617# if __arm64__# define ISA_MASK 0x0000000ffffffff8ULL# define ISA_MAGIC_MASK 0x000003f000000001ULL# define ISA_MAGIC_VALUE 0x000001a000000001ULL struct &#123; uintptr_t nonpointer : 1; uintptr_t has_assoc : 1; uintptr_t has_cxx_dtor : 1; uintptr_t shiftcls : 33; // MACH_VM_MAX_ADDRESS 0x1000000000 uintptr_t magic : 6; uintptr_t weakly_referenced : 1; uintptr_t deallocating : 1; uintptr_t has_sidetable_rc : 1; uintptr_t extra_rc : 19;# define RC_ONE (1ULL&lt;&lt;45)# define RC_HALF (1ULL&lt;&lt;18) &#125;; extra_rcÈÇ£ÂºïÁî®ËÆ°Êï∞Â≠òÂú®Âì™ÈáåÂë¢ÔºüÁßòÂØÜÂ∞±Âú®extra_rc‰∏≠„ÄÇ extra_rcÂè™ÊòØÂ≠òÂÇ®‰∫ÜÈ¢ùÂ§ñÁöÑÂºïÁî®ËÆ°Êï∞ÔºåÂÆûÈôÖÁöÑÂºïÁî®ËÆ°Êï∞ËÆ°ÁÆóÂÖ¨ÂºèÔºöÂºïÁî®ËÆ°Êï∞=extra_rc+1„ÄÇ extra_rcÂç†‰∫Ü19‰ΩçÔºåÂèØ‰ª•Â≠òÂÇ®ÁöÑÊúÄÂ§ßÂºïÁî®ËÆ°Êï∞Ôºö$2^{19}-1+1=524288$ÔºåË∂ÖËøáÂÆÉÂ∞±ÈúÄË¶ÅËøõ‰ΩçÂà∞SideTables„ÄÇSideTablesÊòØ‰∏Ä‰∏™HashË°®ÔºåÊ†πÊçÆÂØπË±°Âú∞ÂùÄÂèØ‰ª•ÊâæÂà∞ÂØπÂ∫îÁöÑSideTableÔºåSideTableÂÜÖÂåÖÂê´‰∏Ä‰∏™RefcountMapÔºåÊ†πÊçÆÂØπË±°Âú∞ÂùÄÂèñÂá∫ÂÖ∂ÂºïÁî®ËÆ°Êï∞ÔºåÁ±ªÂûãÊòØsize_t„ÄÇÂÆÉÊòØ‰∏Ä‰∏™unsigned longÔºåÊúÄ‰Ωé‰∏§‰ΩçÊòØÊ†áÂøó‰ΩçÔºåÂâ©‰∏ãÁöÑ62‰ΩçÁî®Êù•Â≠òÂÇ®ÂºïÁî®ËÆ°Êï∞„ÄÇÊàë‰ª¨ÂèØ‰ª•ËÆ°ÁÆóÂá∫ÂºïÁî®ËÆ°Êï∞ÁöÑÁêÜËÆ∫ÊúÄÂ§ßÂÄºÔºö$2^{62+19}=2.417851639229258e24$„ÄÇ ÂÖ∂ÂÆûisaËÉΩÂ≠òÂÇ®ÁöÑ524288Âú®Êó•Â∏∏ÂºÄÂèëÂ∑≤ÁªèÂÆåÂÖ®Â§üÁî®‰∫ÜÔºå‰∏∫‰ªÄ‰πàËøòË¶ÅÊêû‰∏™Side TableÔºüÊàëÁåúÊµãÊòØÂõ†‰∏∫ÂéÜÂè≤ÈóÆÈ¢òÔºå‰ª•ÂâçcpuÊòØ32‰ΩçÁöÑÔºåisa‰∏≠ËÉΩÂ≠òÂÇ®ÁöÑÂºïÁî®ËÆ°Êï∞Â∞±Âè™Êúâ$2^{7}=128$„ÄÇÂõ†Ê≠§Âú®arm64‰∏ãÔºåÂºïÁî®ËÆ°Êï∞ÈÄöÂ∏∏ÊòØÂ≠òÂÇ®Âú®isa‰∏≠ÁöÑ„ÄÇ retainÊúâ‰∫ÜÂâçÈù¢ÁöÑÈì∫Âû´ÔºåÊàë‰ª¨Áü•ÈÅìÂºïÁî®ËÆ°Êï∞ÊÄé‰πàÂ≠òÂÇ®ÁöÑ‰∫ÜÔºåÈÇ£ÂºïÁî®ËÆ°Êï∞ÂèàÊòØÊÄé‰πàÊîπÂèòÁöÑÂë¢ÔºüÈÄöËøáÂâñÊûêretainÊ∫êÁ†ÅÊàë‰ª¨Â∞±ÂèØ‰ª•ÂæóÂá∫ÁªìËÆ∫‰∫Ü„ÄÇobjc_objectÁöÑÊñπÊ≥ïÂÖ®ÈÉ®ÂÆö‰πâÂú®objc-object.hÊñá‰ª∂‰∏≠ÔºåÂÖ®ÊòØÂÜÖËÅîÂáΩÊï∞ÔºåÂ∫îËØ•ÊòØ‰∏∫‰∫ÜÊÄßËÉΩÁöÑËÄÉËôë„ÄÇ Êàë‰ª¨Êù•ÁúãÁúãretainÁöÑÂáΩÊï∞ÂÆö‰πâ 1234567891011inline id objc_object::retain()&#123; assert(!isTaggedPointer()); if (fastpath(!ISA()-&gt;hasCustomRR())) &#123; return rootRetain(); &#125; return ((id(*)(objc_object *, SEL))objc_msgSend)(this, SEL_retain);&#125; ËøôÂ±ÇÊØîËæÉÁÆÄÂçïÔºåÂÅö‰∫Ü‰∏â‰ª∂‰∫ãÊÉÖÔºö Âà§Êñ≠ÊåáÈíàÊòØ‰∏çÊòØTagged Pointer Âà§Êñ≠ÊòØÂê¶ÊúâËá™ÂÆö‰πâretainÔºåÂ¶ÇÊûúÊúâË∞ÉÁî®Ëá™ÂÆö‰πâÁöÑ„ÄÇ ÊúÄÂêéË∞ÉÁî®rootRetain Êàë‰ª¨Êù•ÁúãÁúãÂÖ≥ÈîÆÂáΩÊï∞rootRetainÁöÑÂÆûÁé∞Ôºà‰∏∫‰∫Ü‰æø‰∫éÈòÖËØªÔºå‰ª£Á†ÅÊúâÊâÄÂà†ÂáèÔºâ 1234567891011121314151617181920212223242526272829303132333435ALWAYS_INLINE id objc_object::rootRetain(bool tryRetain, bool handleOverflow)&#123; isa_t oldisa; isa_t newisa; // Âä†ÈîÅÔºåÁî®Ê±áÁºñÊåá‰ª§ldxrÊù•‰øùËØÅÂéüÂ≠êÊÄß oldisa = LoadExclusive(&amp;isa.bits); newisa = oldisa; if (newisa.nonpointer = 0) &#123; // newisa.nonpointer = 0ËØ¥ÊòéÊâÄÊúâ‰ΩçÊï∞ÈÉΩÊòØÂú∞ÂùÄÂÄº // ÈáäÊîæÈîÅÔºå‰ΩøÁî®Ê±áÁºñÊåá‰ª§clrex ClearExclusive(&amp;isa.bits); // Áî±‰∫éÊâÄÊúâ‰ΩçÊï∞ÈÉΩÊòØÂú∞ÂùÄÂÄºÔºåÁõ¥Êé•‰ΩøÁî®sidetableÊù•Â≠òÂÇ®ÂºïÁî®ËÆ°Êï∞ return sidetable_retain(); &#125; // Â≠òÂÇ®extra_rc++ÂêéÁöÑÁªìÊûú uintptr_t carry; // extra_rc++ newisa.bits = addc(newisa.bits, RC_ONE, 0, &amp;carry); if (carry == 0) &#123; // extra_rc++ÂêéÊ∫¢Âá∫ÔºåËøõ‰ΩçÂà∞side table newisa.extra_rc = RC_HALF; newisa.has_sidetable_rc = true; sidetable_addExtraRC_nolock(RC_HALF); &#125; // Â∞ÜnewisaÂÜôÂÖ•isa StoreExclusive(&amp;isa.bits, oldisa.bits, newisa.bits) return (id)this;&#125; Êúâ‰∏Ä‰∏™ÁªÜËäÇÂèØ‰ª•‰∫ÜËß£‰∏ãÔºåÂ¶Ç‰ΩïÁî®Ê±áÁºñÊù•ÂÆûÁé∞ÂéüÂ≠êÊÄßÊìç‰Ωú„ÄÇ 1234567891011static ALWAYS_INLINEuintptr_t LoadExclusive(uintptr_t *src)&#123; uintptr_t result; // Âú®Â§öÊ†∏CPU‰∏ãÔºåÂØπ‰∏Ä‰∏™Âú∞ÂùÄÁöÑËÆøÈóÆÂèØËÉΩÂºïËµ∑ÂÜ≤Á™ÅÔºåldxrËß£ÂÜ≥‰∫ÜÂÜ≤Á™ÅÔºå‰øùËØÅÂéüÂ≠êÊÄß„ÄÇ asm("ldxr %x0, [%x1]" : "=r" (result) : "r" (src), "m" (*src)); return result;&#125; releaserelease‰ª£Á†ÅÈÄªËæëÂü∫Êú¨‰∏äÂ∞±ÊòØretainÂèçËøáÊù•Ëµ∞‰∏ÄÈÅçÔºåÊúâÁÇπ‰∏çÂêåÁöÑÊòØÂú®ÂºïÁî®ËÆ°Êï∞ÂáèÂà∞0Êó∂Ôºå‰ºöË∞ÉÁî®ÂØπË±°ÁöÑdeallocÊñπÊ≥ï„ÄÇ 1234567891011121314151617181920212223242526272829303132333435363738394041ALWAYS_INLINE boolobjc_object::rootRelease(bool performDealloc, bool handleUnderflow)&#123; isa_t oldisa; isa_t newisa; retry: oldisa = LoadExclusive(&amp;isa.bits); newisa = oldisa; if (newisa.nonpointer == 0) &#123; ClearExclusive(&amp;isa.bits); if (sideTableLocked) sidetable_unlock(); return sidetable_release(performDealloc); &#125; uintptr_t carry; // extra_rc-- newisa.bits = subc(newisa.bits, RC_ONE, 0, &amp;carry); if (carry == 0) &#123; // ÈúÄË¶Å‰ªéSideTableÂÄü‰ΩçÔºåÊàñËÄÖÂºïÁî®ËÆ°Êï∞‰∏∫0 goto underflow; &#125; // Â≠òÂÇ®ÂºïÁî®ËÆ°Êï∞Âà∞isa StoreReleaseExclusive(&amp;isa.bits, oldisa.bits, newisa.bits) return false; underflow: // ‰ªéSideTableÂÄü‰Ωç // ÊàñÂºïÁî®ËÆ°Êï∞‰∏∫0ÔºåË∞ÉÁî®delloc // Ê≠§Â§ÑÁúÅÁï•NÂ§ö‰ª£Á†Å // ÊÄªÁªì‰∏Ä‰∏ã:‰øÆÊîπSide Table‰∏éextra_rcÔºå // ÂºïÁî®ËÆ°Êï∞Âáè‰∏∫0Êó∂ÔºåË∞ÉÁî®dealloc if (performDealloc) &#123; ((void(*)(objc_object *, SEL))objc_msgSend)(this, SEL_dealloc); &#125; return true;&#125; Â∞èÁªì ÂºïÁî®ËÆ°Êï∞Â≠òÂú®Âì™Ôºü Tagged Pointer‰∏çÈúÄË¶ÅÂºïÁî®ËÆ°Êï∞ NONPOINTER ISA(isaÁöÑÁ¨¨‰∏Ä‰Ωç‰∏∫1)ÁöÑÂºïÁî®ËÆ°Êï∞‰ºòÂÖàÂ≠òÂú®isa‰∏≠ÔºåÂ§ß‰∫é524288‰∫ÜËøõ‰ΩçÂà∞Side Tables ÈùûNONPOINTER ISAÂºïÁî®ËÆ°Êï∞Â≠òÂú®Side Tables retain/releaseÁöÑÂÆûË¥® ÊâæÂà∞ÂºïÁî®ËÆ°Êï∞Â≠òÂÇ®Âå∫ÂüüÔºåÁÑ∂Âêé+1/-1 Â¶ÇÊûúÊòØNONPOINTER ISAÔºåËøòË¶ÅÂ§ÑÁêÜËøõ‰Ωç/ÂÄü‰ΩçÁöÑÊÉÖÂÜµ releaseÂú®ÂºïÁî®ËÆ°Êï∞Âáè‰∏∫0Êó∂ÔºåË∞ÉÁî®dealloc ÂèÇËÄÉ ÈªëÁÆ±‰∏≠ÁöÑ retain Âíå release Ê∑±ÂÖ•ÁêÜËß£Tagged Pointer]]></content>
      <tags>
        <tag>iOSÁü•ËØÜÂ∞èÁªì</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CordovaÊ∫êÁ†ÅËß£ÊûêÔºà‰∫åÔºâ- Ëá™ÂÆö‰πâUserAgent]]></title>
    <url>%2F2018%2F05%2F15%2FCordova%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%EF%BC%88%E4%BA%8C%EF%BC%89-%20%E8%87%AA%E5%AE%9A%E4%B9%89UserAgent%2F</url>
    <content type="text"><![CDATA[Êú¨ÊñáÂàÜÊûêÁöÑÊ∫êÁ†ÅÊòØÂü∫‰∫éCordova 4.2.1ÁâàÊú¨ÔºåCordovaÂÆòÁΩë„ÄÇ CordovaÊ∫êÁ†ÅËß£ÊûêÔºà‰∫åÔºâ- Ëá™ÂÆö‰πâUserAgentUIWebViewÊ≤°ÊúâÊèê‰æõËÆæÁΩÆUserAgentÁöÑÊé•Âè£Ôºå‰ΩÜÊòØÊúâ‰∏Ä‰∏™ÂäûÊ≥ïÂèØ‰ª•Èó¥Êé•ÁöÑËÆæÁΩÆ„ÄÇ 12NSDictionary* dict = [[NSDictionary alloc] initWithObjectsAndKeys:value, @&quot;UserAgent&quot;, nil];[[NSUserDefaults standardUserDefaults] registerDefaults:dict]; ÈÄöËøáËÆæÁΩÆNSUserDefaults‰∏≠UserAgentÁöÑÂÄºÊù•‰øÆÊîπÔºå‰ΩÜÊòØËøôÁßçËÆæÁΩÆÊñπÊ≥ïÊúâ‰∏Ä‰∏™ÈôêÂà∂ÔºåÈúÄË¶ÅÂú®UIWebViewÁöÑloadRequest‰πãÂâçË∞ÉÁî®ÊâçËÉΩÁîüÊïà(Âä†ËΩΩPDFÊØîËæÉÁâπÊÆä)„ÄÇËøôÊòØCordovaÊ∫êÁ†Å‰∏≠ÂÖ≥‰∫éËøô‰∏™ÈóÆÈ¢òÁöÑÊèèËø∞ Setting the UserAgent must occur before a UIWebView is instantiated.It is read per instantiation, so it does not affect previously created views.Except! When a PDF is loaded, all currently active UIWebViews reload theirUser-Agent from the NSUserDefaults some time after the DidFinishLoad of the PDF bah! CDVUserAgentUtilÂú®Â§öWebViewÁöÑÊÉÖÂÜµ‰∏ãÔºåÂ¶ÇÊûúÊØè‰∏™WebViewÈÉΩÊúâ‰∏çÂêåÁöÑUserAgentÔºåÂ∞±‰ºö‰∫ßÁîüÊï∞ÊçÆÁ´û‰∫âÁöÑÈóÆÈ¢òÔºåÂ§ßÂÆ∂ÈÉΩË¶Å‰øÆÊîπNSUserDefaults‰∏≠UserAgentÁöÑÂÄºÔºå‰∫éÊòØÈúÄË¶ÅÂØπËµÑÊ∫êÂä†ÈîÅÊù•‰øùËØÅÊØè‰∏™WebViewÈÉΩËÆæÁΩÆÈ¢ÑÊúüÁöÑUserAgent„ÄÇÂú®Cordova‰∏≠Ôºå‰∏ìÈó®Êúâ‰∏Ä‰∏™Á±ªCDVUserAgentUtilÊù•ÂÆûÁé∞Ëøô‰∏™ÂäüËÉΩ„ÄÇ CDVUserAgentUtil.hÊñá‰ª∂‰∏≠ÂÆö‰πâ‰∫ÜÂõõ‰∏™ÊñπÊ≥ï 12345678// Ëé∑ÂèñUIWebViewÈªòËÆ§ÁöÑUserAgent+ (NSString*)originalUserAgent;// Ëé∑ÂèñÈîÅ+ (void)acquireLock:(void (^)(NSInteger lockToken))block;// ÈáäÊîæÈîÅ+ (void)releaseLock:(NSInteger*)lockToken;// ËÆæÁΩÆUIWebViewÁöÑUserAgent+ (void)setUserAgent:(NSString*)value lockToken:(NSInteger)lockToken; Âä†ÈîÅÊØèÊ¨°Âä†ÈîÅÊàêÂäü‰ºöËøîÂõû‰∏Ä‰∏™NSIntegerÁ±ªÂûãÁöÑtokenÔºåÂú®ÈáäÊîæÈîÅÁöÑÊó∂ÂÄôÈúÄË¶ÅÊäätoken‰º†ÂÖ•„ÄÇtoken‰ºö‰∏çÊñ≠ÈÄíÂ¢ûÔºå‰øùËØÅÊØèÊ¨°Âä†ÈîÅËøîÂõûÁöÑtokenÈÉΩ‰∏çÂõûÈáçÂ§ç„ÄÇÂä†ÈîÅÁöÑÂÆûÁé∞‰ª£Á†ÅÂ¶Ç‰∏ãÔºö 123456789101112131415// CDVUserAgentUtil.m+ (void)acquireLock:(void (^)(NSInteger lockToken))block&#123; if (gCurrentLockToken == 0) &#123; gCurrentLockToken = ++gNextLockToken; VerboseLog(@"Gave lock %d", gCurrentLockToken); block(gCurrentLockToken); &#125; else &#123; if (gPendingSetUserAgentBlocks == nil) &#123; gPendingSetUserAgentBlocks = [[NSMutableArray alloc] initWithCapacity:4]; &#125; VerboseLog(@"Waiting for lock"); [gPendingSetUserAgentBlocks addObject:block]; &#125;&#125; Ë∞ÉÁî®acquireLock:ÔºåÈ¶ñÂÖà‰ºöÂà§Êñ≠gCurrentLockTokenÊòØÂê¶Á≠â‰∫é0 Â¶ÇÊûúÊòØ0ËØ¥ÊòéÊ≤°ÊúâÊ®°ÂùóÊ≠£Âú®‰øÆÊîπUserAgentÔºåËÉΩÂ§üÊàêÂäüËé∑ÂèñÂà∞ÈîÅÔºågCurrentLockTokenÈÄíÂ¢ûÔºåÊ†áËá¥ÂΩìÂâçÊúâÊ®°ÂùóÊ≠£Âú®‰øÆÊîπUserAgentÔºåÂπ∂ÂõûË∞ÉblockÔºåËøîÂõûgCurrentLockToken Â¶ÇÊûú‰∏ç‰∏∫0ËØ¥ÊòéÂΩìÂâçÊúâÊ®°ÂùóÊ≠£Âú®‰øÆÊîπUserAgentÔºåÂ∞ÜblockÂõûË∞ÉÂ≠òÂú®‰∏Ä‰∏™ÈòüÂàógPendingSetUserAgentBlocks‰∏≠ ÈáäÊîæÈîÅÈáäÊîæÈîÅÈúÄË¶Å‰º†ÂÖ•tokenÔºåÈáäÊîæÈîÅ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö 12345678910111213141516171819+ (void)releaseLock:(NSInteger*)lockToken&#123; if (*lockToken == 0) &#123; return; &#125; NSAssert(gCurrentLockToken == *lockToken, @"Got token %ld, expected %ld", (long)*lockToken, (long)gCurrentLockToken); VerboseLog(@"Released lock %d", *lockToken); if ([gPendingSetUserAgentBlocks count] &gt; 0) &#123; void (^block)() = [gPendingSetUserAgentBlocks objectAtIndex:0]; [gPendingSetUserAgentBlocks removeObjectAtIndex:0]; gCurrentLockToken = ++gNextLockToken; NSLog(@"Gave lock %ld", (long)gCurrentLockToken); block(gCurrentLockToken); &#125; else &#123; gCurrentLockToken = 0; &#125; *lockToken = 0;&#125; Â¶ÇÊûúË¶ÅÈáäÊîæÁöÑlockToken‰∏∫0ÔºåËØ¥ÊòéËøòÊ≤°Âä†ËøáÈîÅÔºåÂ∞±Ë∞ÉÁî®ÈáäÊîæ‰∫ÜÔºåÁõ¥Êé•ËøîÂõû ‰ªéÈòüÂàógPendingSetUserAgentBlocks‰∏≠ÂèñÂá∫ÊúÄÊó©Âä†ÂÖ•ÁöÑblockÔºå‰ªéÈòüÂàó‰∏≠ÁßªÈô§ gCurrentLockTokenÈÄíÂ¢ûÁîüÊàêÊñ∞tokenÔºåÂõûË∞Éblock Â¶ÇÊûúÈòüÂàógPendingSetUserAgentBlocksÈáäÊîæÂÆåÊàêÔºåËØ¥ÊòéÈáäÊîæÈîÅÁöÑË∞ÉÁî®Ê¨°Êï∞&gt;Âä†ÈîÅÁöÑÊ¨°Êï∞Ôºå‰∏çÂÅöÊìç‰ΩúÔºåÁÑ∂ÂêéÊäägCurrentLockTokenÁΩÆ‰∏∫0 ËÆæÁΩÆUserAgentÂú®CordovaÂÆûÈôÖËøêÁî®‰∏≠ÔºåÊìç‰ΩúÈîÅÁöÑÊó∂Êú∫ÔºöÂä†ÈîÅÊó∂Êú∫ÔºöCDVViewControllerÂä†ËΩΩÂÆåÊØïÔºåÂú®viewDidLoadÈáåË∞ÉÁî®ÈáäÊîæÈîÅÊó∂Êú∫Ôºö UIWebViewÁöÑwebViewDidFinishLoad:ÂõûË∞É UIWebViewÁöÑwebView:didFailLoadWithError:ÂõûË∞É CDVViewControllerÁöÑdealloc CDVViewControllerÁöÑviewDidUnload Âä†ÈîÅ‰ª£Á†ÅÔºåÁúÅÁï•‰∫Ü‰∏çÁõ∏ÂÖ≥‰ª£Á†Å 12345678910// CDVViewController.m- (void)viewDidLoad&#123; [CDVUserAgentUtil acquireLock:^(NSInteger lockToken) &#123; _userAgentLockToken = lockToken; [CDVUserAgentUtil setUserAgent:self.userAgent lockToken:lockToken]; NSURLRequest* appReq = [NSURLRequest requestWithURL:appURL cachePolicy:NSURLRequestUseProtocolCachePolicy timeoutInterval:20.0]; [self.webViewEngine loadRequest:appReq]; &#125;];&#125; ÈáäÊîæÈîÅ‰ª£Á†ÅÔºåËøôÈáåÂè™ÁúãÊ≠£Â∏∏ÈÄªËæëÔºåÂú®ÁΩëÈ°µÂä†ËΩΩÂÆåÊàêÂõûË∞ÉwebViewDidFinishLoad:‰∏≠ÈáäÊîæÈÄªËæë„ÄÇ‰∏çËÄÉËôëÂºÇÂ∏∏ÊÉÖÂÜµÔºåÁúÅÁï•‰∫Ü‰∏çÁõ∏ÂÖ≥‰ª£Á†Å„ÄÇ 123456789// CDVUIWebViewNavigationDelegate.m- (void)webViewDidFinishLoad:(UIWebView*)theWebView&#123; NSLog(@"Finished load of: %@", theWebView.request.URL); CDVViewController* vc = (CDVViewController*)self.enginePlugin.viewController; // It's safe to release the lock even if this is just a sub-frame that's finished loading. [CDVUserAgentUtil releaseLock:vc.userAgentLockToken];&#125; Âú®webViewDidFinishLoad:ÂõûË∞ÉÊó∂ÔºåUserAgentÂ∑≤ÁªèËÆæÁΩÆÊàêÂäüÔºåÊâÄ‰ª•ÂèØ‰ª•ÈáäÊîæÈîÅÔºåËÆ©ÂÖ∂ÂÆÉWebViewÊìç‰ΩúUserDefault‰∫Ü„ÄÇ]]></content>
      <tags>
        <tag>Ê∫êÁ†ÅÂ≠¶‰π†</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CordovaÊ∫êÁ†ÅËß£Êûê]]></title>
    <url>%2F2018%2F05%2F09%2FCordova%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%2F</url>
    <content type="text"><![CDATA[Êú¨ÊñáËÆæËÆ°Âà∞ÁöÑÊ∫êÁ†ÅÊòØÂü∫‰∫éCordova 4.2.1ÁâàÊú¨ÔºåCordovaÂÆòÁΩë„ÄÇ CDVViewControllerCDVViewControllerÊòØCordovaÊúÄ‰∏ªË¶ÅÁöÑÁ±ªÔºåÂÆÉÊääÊâÄÊúâÊ®°ÂùóÊï¥ÂêàÂú®‰∏ÄËµ∑ÔºåÁõ¥Êé•ÂàùÂßãÂåñ‰∏Ä‰∏™ÂÆÉÁöÑÂÆû‰æãÂ∞±ÂèØ‰ª•‰ΩøÁî®„ÄÇ‰æãÂ¶Ç‰∏ãÈù¢ÁöÑ‰ª£Á†ÅÔºö 123CDVViewController *vc = [[CDVViewController alloc] init];vc.startPage = @"www.baidu.com";[self presentViewController:vc animated:YES completion:nil]; CDVViewController‰∏ªË¶ÅÂÆûÁé∞ÁöÑÂäüËÉΩÔºö Ê≥®ÂÜå„ÄÅÂàùÂßãÂåñÊèí‰ª∂ ËØªÂèñ„ÄÅÂ∫îÁî®ÈÖçÁΩÆÊñá‰ª∂ ÂàùÂßãÂåñÂπ∂ÈÖçÁΩÆWebViewÔºåËÆæÁΩÆÂÖ∂‰ª£ÁêÜ ÁÆ°ÁêÜjs‰∏éÂéüÁîüÁöÑÊñπÊ≥ïË∞ÉÁî® ÁÆ°ÁêÜÂ∫îÁî®‰∏éÁΩëÈ°µÁöÑÁîüÂëΩÂë®Êúü„ÄÇ„ÄÇ„ÄÇ ÂÆÉ‰∏ªË¶ÅÁöÑÂ±ûÊÄßÊúâÔºö CDVWebViewEngineProtocolÔºöwebviewÁõ∏ÂÖ≥ÁöÑÂõûË∞É CDVCommandDelegateÔºöjs‰∏éÂéüÁîüÊèí‰ª∂‰∫§‰∫íÊñπÊ≥ïÔºåÊèí‰ª∂ÂàùÂßãÂåñ CDVCommandQueueÔºöÂëΩ‰ª§ÊâßË°åÈòüÂàó CDVCommandDelegateÂíåCDVCommandQueue‰ºöÂú®jsË∞ÉÁî®ÂéüÁîüÊèí‰ª∂‰∏éÊèí‰ª∂ÂàùÂßãÂåñÊèêÂà∞ÔºåËøôÈáåÂÖà‰∏çÁªÜËØ¥„ÄÇCDVWebViewEngineProtocolÂÆö‰πâ‰∫ÜWebViewÂºïÊìéÁöÑÊäΩË±°Á±ªÔºåÂÖ∑‰ΩìÂÆûÁé∞Áî±Êèí‰ª∂Êèê‰æõÔºå‰æãÂ¶ÇCDVUIWebViewEngineÂÆûÁé∞UIWebViewÁöÑÂºïÊìé„ÄÇ CDVWebViewEngineProtocolÂçèËÆÆÂÆö‰πâCDVWebViewEngineProtocolÂçèËÆÆÂÖ∂ÂÆûÊòØÂØπ‰∫éWebViewÁöÑ‰∏ÄÂ±ÇÂ∞ÅË£ÖÔºåÂ±èËîΩ‰∫Ü‰∏çÂêåWebViewÊé•Âè£ÁöÑÂ∑ÆÂºÇÔºåÁé∞Âú®iOSÊúâUIWebView‰∏éWKWebView„ÄÇ 1234567891011@protocol CDVWebViewEngineProtocol &lt;NSObject&gt;@property (nonatomic, strong, readonly) UIView* engineWebView;- (id)loadRequest:(NSURLRequest*)request;- (id)loadHTMLString:(NSString*)string baseURL:(NSURL*)baseURL;- (void)evaluateJavaScript:(NSString*)javaScriptString completionHandler:(void (^)(id, NSError*))completionHandler;- (NSURL*)URL;- (BOOL)canLoadRequest:(NSURLRequest*)request;- (instancetype)initWithFrame:(CGRect)frame;- (void)updateWithInfo:(NSDictionary*)info;@end engineWebViewÂ±ûÊÄßÂØπÂ§ñÁõ¥Êé•Êö¥Èú≤‰∫ÜÂÜÖÈÉ®Â∞ÅË£ÖÁöÑWebViewÔºåÂÖ∂ÂÆÉÊñπÊ≥ïÈÉΩÊòØÂØπWebViewÊñπÊ≥ïÁöÑ‰∏ÄÂ±ÇÁÆÄÂçïÂ∞ÅË£Ö„ÄÇ UIWebViewÂºïÊìéCDVUIWebViewEngineÊàë‰ª¨‰ª•UIWebViewÁöÑÂÆûÁé∞CDVUIWebViewEngine‰∏∫‰æãËØ¥ÊòéÔºåÂÆÉÊòØ‰ª•Êèí‰ª∂ÁöÑÂΩ¢ÂºèÂÆûÁé∞ÁöÑÔºå‰∏ªË¶Å‰ΩúÁî®ÊòØÂàùÂßãÂåñUIWebViewÁöÑÈÖçÁΩÆÔºåÂØπUIWebViewÁöÑÊñπÊ≥ïÂíå‰ª£ÁêÜËøõË°å‰∫Ü‰∏ÄÂ±ÇÂ∞ÅË£Ö„ÄÇÂÆÉÂÆûÁé∞‰∫ÜÂçèËÆÆCDVWebViewEngineProtocolÔºå‰∏ªË¶ÅÊúâ‰ª•‰∏ãÂá†‰∏™Â±ûÊÄß„ÄÇ 123456// CDVUIWebViewEngine// UIWebview@property (nonatomic, strong, readwrite) UIView* engineWebView;// UIWebViewÁöÑ‰ª£ÁêÜ@property (nonatomic, strong, readwrite) id &lt;UIWebViewDelegate&gt; uiWebViewDelegate;@property (nonatomic, strong, readwrite) CDVUIWebViewNavigationDelegate* navWebViewDelegate; ÂàùÂßãÂåñ‰ªéinitWithFrame:ÊñπÊ≥ïÂºÄÂßãÔºåÂÆÉÂàõÂª∫‰∫Ü‰∏Ä‰∏™UIWebViewÔºåÂπ∂ËµãÂÄºÁªô‰∫ÜengineWebViewÔºåÁÑ∂ÂêéÂú®Êèí‰ª∂ÂàùÂßãÂåñÊñπÊ≥ïpluginInitialize‰∏≠ÂàùÂßãÂåñUIWebViewÁöÑ‰ª£ÁêÜÂíåÈÖçÁΩÆ„ÄÇ 123456789101112131415161718192021- (void)pluginInitialize&#123; UIWebView* uiWebView = (UIWebView*)_engineWebView; // Âà§Êñ≠ÂΩìÂâçcontrollerÊòØÂê¶ÂÆûÁé∞‰∫ÜUIWebViewDelegate // Â¶ÇÊûúÂÆûÁé∞‰∫ÜÂ∞±ÊääÂΩìÂâçcontrollerËÆæÁΩÆ‰∏∫CDVUIWebViewDelegateÁöÑ‰ª£ÁêÜÂÆûÁé∞ if ([self.viewController conformsToProtocol:@protocol(UIWebViewDelegate)]) &#123; self.uiWebViewDelegate = [[CDVUIWebViewDelegate alloc] initWithDelegate:(id &lt;UIWebViewDelegate&gt;)self.viewController]; uiWebView.delegate = self.uiWebViewDelegate; &#125; // Â¶ÇÊûúÊ≤°ÊúâÂÆûÁé∞ÔºåÂàõÂª∫‰∏Ä‰∏™CDVUIWebViewNavigationDelegateÔºå‰Ωú‰∏∫CDVUIWebViewDelegateÁöÑ‰ª£ÁêÜÂÆûÁé∞ else &#123; self.navWebViewDelegate = [[CDVUIWebViewNavigationDelegate alloc] initWithEnginePlugin:self]; self.uiWebViewDelegate = [[CDVUIWebViewDelegate alloc] initWithDelegate:self.navWebViewDelegate]; uiWebView.delegate = self.uiWebViewDelegate; &#125; // ÂàùÂßãÂåñÈÖçÁΩÆ‰ø°ÊÅØ // self.commandDelegate.settingsÊòØCDVViewControllerÁöÑÈÖçÁΩÆ‰ø°ÊÅØÔºåÂÆö‰πâÂú®config.xml [self updateSettings:self.commandDelegate.settings];&#125; jsË∞ÉÁî®ÂéüÁîüÊèí‰ª∂Ëß£ÊûêÊèí‰ª∂Ë∞ÉÁî®ÊµÅÁ®ãÔºö jsÂèëËµ∑ËØ∑Ê±Çgap:// ÂÆûÁé∞WebViewÁöÑ‰ª£ÁêÜwebView:shouldStartLoadWithRequest:navigationType:ÔºåÊã¶Êà™scheme‰∏∫gapÁöÑËØ∑Ê±Ç ÊâßË°åjsÊñπÊ≥ïcordova.require(&#39;cordova/exec&#39;).nativeFetchMessages()Ëé∑ÂèñÈúÄË¶ÅÊâßË°åÁöÑÂéüÁîüÊèí‰ª∂ÁöÑ‰ø°ÊÅØÔºàÊèí‰ª∂ÂêçÔºåÊèí‰ª∂ÊñπÊ≥ïÔºåÂõûË∞ÉIDÔºåÂèÇÊï∞Ôºâ Â∞ÜÈúÄË¶ÅÊâßË°åÁöÑÂéüÁîüÊèí‰ª∂‰ø°ÊÅØÊîæÂÖ•ÂëΩ‰ª§ÈòüÂàóÁ≠âÂæÖÊâßË°å ÊâßË°åÂéüÁîüÊèí‰ª∂ÔºåÂπ∂ÊääÁªìÊûúÂõûË∞ÉÁªôjs Êèí‰ª∂Ë∞ÉÁî®Â†ÜÊ†àÂ¶ÇÂõæÊâÄÁ§∫Ôºö jsËØ∑Ê±ÇÊã¶Êà™CDVUIWebViewDelegateÂÆûÁé∞‰∫ÜUIWebViewÁöÑwebView:shouldStartLoadWithRequest:navigationType:‰ª£ÁêÜÔºåÂú®È°µÈù¢Âä†ËΩΩÂâçÂÅö‰∏Ä‰∫õÂ§ÑÁêÜ„ÄÇ 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364- (BOOL)webView:(UIWebView*)webView shouldStartLoadWithRequest:(NSURLRequest*)request navigationType:(UIWebViewNavigationType)navigationType&#123; BOOL shouldLoad = YES; // 1. Âà§Êñ≠Â¶ÇÊûúÊúâ‰ª£ÁêÜÔºåÂÖàË∞ÉÁî®‰ª£ÁêÜÊñπÊ≥ï // ËøôÈáåÁöÑ_delegateÊòØCDVUIWebViewNavigationDelegate if ([_delegate respondsToSelector:@selector(webView:shouldStartLoadWithRequest:navigationType:)]) &#123; shouldLoad = [_delegate webView:webView shouldStartLoadWithRequest:request navigationType:navigationType]; &#125; if (shouldLoad) &#123; // ÊòØÂê¶ÊòØË∞ÉËØïÂ∑•ÂÖ∑refresh BOOL isDevToolsRefresh = (request == webView.request); // ÊòØÂê¶ÊòØÈ°∂Â±ÇÈ°µÈù¢ BOOL isTopLevelNavigation = isDevToolsRefresh || [request.URL isEqual:[request mainDocumentURL]]; if (isTopLevelNavigation) &#123; if ([self request:request isEqualToRequestAfterStrippingFragments:webView.request]) &#123; NSString* prevURL = [self evalForCurrentURL:webView]; if ([prevURL isEqualToString:[request.URL absoluteString]]) &#123; VerboseLog(@"Page reload detected."); &#125; else &#123; VerboseLog(@"Detected hash change shouldLoad"); return shouldLoad; &#125; &#125; switch (_state) &#123; case STATE_WAITING_FOR_LOAD_FINISH: // ÈáçÂÆöÂêëÊÉÖÂÜµÔºåÂà§Êñ≠loadCountÊòØÂê¶ÊòØ1 if (_loadCount != 1) &#123; NSLog(@"CDVWebViewDelegate: Detected redirect when loadCount=%ld", (long)_loadCount); &#125; break; case STATE_IDLE: case STATE_IOS5_POLLING_FOR_LOAD_START: case STATE_CANCELLED: // È°µÈù¢ÂØºËà™ÂºÄÂßã _loadCount = 0; _state = STATE_WAITING_FOR_LOAD_START; break; default: &#123; // ÂÖ∂ÂÆÉÊÉÖÂÜµÔºåÂõûË∞ÉwebView:didFailLoadWithError: NSString* description = [NSString stringWithFormat:@"CDVWebViewDelegate: Navigation started when state=%ld", (long)_state]; NSLog(@"%@", description); _loadCount = 0; _state = STATE_WAITING_FOR_LOAD_START; if ([_delegate respondsToSelector:@selector(webView:didFailLoadWithError:)]) &#123; NSDictionary* errorDictionary = @&#123;NSLocalizedDescriptionKey : description&#125;; NSError* error = [[NSError alloc] initWithDomain:@"CDVUIWebViewDelegate" code:1 userInfo:errorDictionary]; [_delegate webView:webView didFailLoadWithError:error]; &#125; &#125; &#125; &#125; else &#123; // Â±èËîΩ‰∏Ä‰∫õÊó†ÊïàÁΩëÁ´ôÁöÑËÆøÈóÆ shouldLoad = shouldLoad &amp;&amp; [self shouldLoadRequest:request]; &#125; &#125; return shouldLoad;&#125; Êã¶Êà™jsË∞ÉÁî®ÂéüÁîüÊèí‰ª∂ËØ∑Ê±ÇÁöÑÂÖ≥ÈîÆ‰ª£Á†ÅÂú®CDVUIWebViewNavigationDelegateÔºåÂÆÉÂÆûÁé∞‰∫ÜCDVUIWebViewDelegateÁöÑ‰ª£ÁêÜÔºåÂú®CDVUIWebViewDelegate‰ºöÊääËØ∑Ê±ÇËΩ¨ÂèëÁªôÂÆÉ„ÄÇ 12345678910111213141516171819202122232425262728293031323334353637383940414243- (BOOL)webView:(UIWebView*)theWebView shouldStartLoadWithRequest:(NSURLRequest*)request navigationType:(UIWebViewNavigationType)navigationType&#123; NSURL* url = [request URL]; CDVViewController* vc = (CDVViewController*)self.enginePlugin.viewController; // H5Ë∞ÉÁî®ÂéüÁîüÊèí‰ª∂ÔºåÂêéÈù¢ÂàÜÊûê if ([[url scheme] isEqualToString:@"gap"]) &#123; [vc.commandQueue fetchCommandsFromJs]; [vc.commandQueue executePending]; return NO; &#125; // ÁªôÊèí‰ª∂È¢ÑÁïô‰∫Ü‰∏Ä‰∏™Â§ÑÁêÜURLÁöÑÊñπÊ≥ïÔºåË∞ÉÁî®Êèí‰ª∂ÁöÑÊñπÊ≥ï`shouldOverrideLoadWithRequest:navigationType:`ÔºåËé∑ÂèñËøîÂõûÂÄº // Â∫îÁî®ÔºöÁ≥ªÁªüÈªòËÆ§Êèí‰ª∂CDVIntentAndNavigationFilter‰∏≠ÔºåÂÆûÁé∞‰∫ÜIntent‰∏éNavigationÁöÑÁôΩÂêçÂçïÊú∫Âà∂„ÄÇ BOOL anyPluginsResponded = NO; BOOL shouldAllowRequest = NO; for (NSString* pluginName in vc.pluginObjects) &#123; CDVPlugin* plugin = [vc.pluginObjects objectForKey:pluginName]; SEL selector = NSSelectorFromString(@"shouldOverrideLoadWithRequest:navigationType:"); if ([plugin respondsToSelector:selector]) &#123; anyPluginsResponded = YES; shouldAllowRequest = (((BOOL (*)(id, SEL, id, int))objc_msgSend)(plugin, selector, request, navigationType)); if (!shouldAllowRequest) &#123; break; &#125; &#125; &#125; if (anyPluginsResponded) &#123; return shouldAllowRequest; &#125; // Â§ÑÁêÜÂÖ∂ÂÆÉÁ±ªÂûãÁöÑurl,file:Á±ªÂûãÁõ¥Êé•ËøîÂõûYES BOOL shouldAllowNavigation = [self defaultResourcePolicyForURL:url]; if (shouldAllowNavigation) &#123; return YES; &#125; else &#123; [[NSNotificationCenter defaultCenter] postNotification:[NSNotification notificationWithName:CDVPluginHandleOpenURLNotification object:url]]; &#125; return NO;&#125; H5Ë∞ÉÁî®ÂéüÁîüÊèí‰ª∂CordovaË∞ÉÁî®ÂéüÁîüÊèí‰ª∂ÁöÑÊñπÂºèÊòØÈÄöËøáÊã¶Êà™gap://ÁöÑURLÔºåÁÑ∂ÂêéÊâßË°åjs‰ª£Á†Åcordova.require(&#39;cordova/exec&#39;).nativeFetchMessages()Ëé∑ÂèñÂèÇÊï∞ÔºåÊù•ÂÆûÁé∞Ë∞ÉÁî®„ÄÇ Êàë‰ª¨Êù•ÁúãÂÖ≥ÈîÆ‰ª£Á†ÅÔºö 1234567891011// CDVUIWebViewNavigationDelegate.m- (BOOL)webView:(UIWebView*)theWebView shouldStartLoadWithRequest:(NSURLRequest*)request navigationType:(UIWebViewNavigationType)navigationType&#123; CDVViewController* vc = (CDVViewController*)self.enginePlugin.viewController; if ([[url scheme] isEqualToString:@"gap"]) &#123; [vc.commandQueue fetchCommandsFromJs]; [vc.commandQueue executePending]; return NO; &#125;&#125; 12345678910111213141516- (void)fetchCommandsFromJs&#123; __weak CDVCommandQueue* weakSelf = self; NSString* js = @"cordova.require('cordova/exec').nativeFetchMessages()"; [_viewController.webViewEngine evaluateJavaScript:js completionHandler:^(id obj, NSError* error) &#123; if ((error == nil) &amp;&amp; [obj isKindOfClass:[NSString class]]) &#123; NSString* queuedCommandsJSON = (NSString*)obj; // Ë∞ÉÁî®ÁöÑÊèí‰ª∂‰ø°ÊÅØÂä†ÂÖ•Âà∞queue‰∏≠ [weakSelf enqueueCommandBatch:queuedCommandsJSON]; // Ë∞ÉÁî®ÊâßË°åÊñπÊ≥ï [self executePending]; &#125; &#125;];&#125; Ë∞ÉÁî®jsÊñπÊ≥ïcordova.require(&#39;cordova/exec&#39;).nativeFetchMessages()ÔºåËé∑ÂèñË∞ÉÁî®ÁöÑÊèí‰ª∂‰ø°ÊÅØ„ÄÇ 12// Êèí‰ª∂‰ø°ÊÅØÁ§∫‰æã[["DevicePlugin1678563772","DevicePlugin","getDeviceInfo",[]]] ÂëΩ‰ª§ÈòüÂàóCDVCommandQueuejsÁöÑÊØèÊ¨°Ë∞ÉÁî®‰ø°ÊÅØ‰ºöÂ∞ÅË£ÖË¢´Â∞ÅË£Ö‰∏∫‰∏Ä‰∏™ÂëΩ‰ª§CDVInvokedUrlCommandÔºåCDVInvokedUrlCommandÁªßÊâøËá™NSObjectÔºå‰∏ªË¶ÅÂ≠òÂÇ®‰∫Ü‰∏ãÈù¢ÁöÑ‰ø°ÊÅØÔºö 123456789// CDVInvokedUrlCommand// ÂèÇÊï∞@property (nonatomic, readonly) NSArray* arguments;// ÂõûË∞ÉID@property (nonatomic, readonly) NSString* callbackId;// Á±ªÂêç@property (nonatomic, readonly) NSString* className;// ÊñπÊ≥ïÂêç@property (nonatomic, readonly) NSString* methodName; CDVCommandQueueÁÆ°ÁêÜÁùÄÊâÄÊúâÁöÑÂëΩ‰ª§ÔºåÂÆûÁé∞‰∫Ü‰∏Ä‰∏™ÂëΩ‰ª§ÁöÑÈòüÂàó„ÄÇÂú®jsË∞ÉÁî®ÂéüÁîüÊèí‰ª∂Êó∂Ôºå‰ºöË∞ÉÁî®CDVCommandQueueÁöÑenqueueCommandBatch:ÊñπÊ≥ïÔºåÂ∞ÜÊèí‰ª∂Ë∞ÉÁî®‰ø°ÊÅØÂä†Âà∞commandBatchHolderÊï∞ÁªÑ‰∏≠ÔºåÊúÄÂêécommandBatchHolderÊï∞ÁªÑÊ∑ªÂä†Âà∞CDVCommandQueueÁöÑqueue„ÄÇ 123456789101112131415161718- (void)enqueueCommandBatch:(NSString*)batchJSON&#123; if ([batchJSON length] &gt; 0) &#123; NSMutableArray* commandBatchHolder = [[NSMutableArray alloc] init]; [_queue addObject:commandBatchHolder]; if ([batchJSON length] &lt; JSON_SIZE_FOR_MAIN_THREAD) &#123; [commandBatchHolder addObject:[batchJSON cdv_JSONObject]]; &#125; else &#123; dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^() &#123; NSMutableArray* result = [batchJSON cdv_JSONObject]; @synchronized(commandBatchHolder) &#123; [commandBatchHolder addObject:result]; &#125; [self performSelectorOnMainThread:@selector(executePending) withObject:nil waitUntilDone:NO]; &#125;); &#125; &#125;&#125; Êèí‰ª∂ÁöÑÊâßË°åÁî±CDVCommandQueueÁÆ°ÁêÜÔºåÊØè‰∏™CDVViewControllerÊúâËá™Â∑±ÁöÑÈòüÂàóÔºåÊúâ‰∏§‰∏™ÈáçË¶ÅÁöÑÊàêÂëòÂèòÈáè„ÄÇ 1234/* ‰∫åÁª¥Êï∞ÁªÑÔºåÂ≠òÂÇ®ÁùÄÊâÄÊúâÊèí‰ª∂Ë∞ÉÁî®ÁöÑjson */NSMutableArray* _queue;/* ËÆ∞ÂΩïÂºÄÂßãË∞ÉÁî®ÁöÑÊó∂Èó¥ */NSTimeInterval _startExecutionTime; executePendingË¥üË¥£ÊâßË°åÂëΩ‰ª§ÈòüÂàó‰∏≠ÂæÖÊâßË°åÁöÑÊèí‰ª∂ÔºåÂÖ∑‰ΩìÂÆûÁé∞Â∞±ÊòØÈÅçÂéÜÊâßË°å‰∫åÁª¥Êï∞ÁªÑqueue„ÄÇ 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849- (void)executePending&#123; // Â¶ÇÊûúÂ∑≤ÁªèÂºÄÂßãÊâßË°å‰∫ÜÔºåËøîÂõû if (_startExecutionTime &gt; 0) &#123; return; &#125; @try &#123; // ËÆ∞ÂΩïÂºÄÂßãÊâßË°åÁöÑÊó∂Èó¥ _startExecutionTime = [NSDate timeIntervalSinceReferenceDate]; // ÈÅçÂéÜ_queue while ([_queue count] &gt; 0) &#123; NSMutableArray* commandBatchHolder = _queue[0]; NSMutableArray* commandBatch = nil; @synchronized(commandBatchHolder) &#123; if ([commandBatchHolder count] == 0) &#123; break; &#125; commandBatch = commandBatchHolder[0]; &#125; // ÈÅçÂéÜcommandBatch while ([commandBatch count] &gt; 0) &#123; @autoreleasepool &#123; // ÂèñÂá∫commandBatchÁöÑÁ¨¨‰∏ÄÊù°Êï∞ÊçÆÔºåÂπ∂ÁßªÈô§ NSArray* jsonEntry = [commandBatch cdv_dequeue]; if ([commandBatch count] == 0) &#123; [_queue removeObjectAtIndex:0]; &#125; // Áî®Êèí‰ª∂Ë∞ÉÁî®json‰ø°ÊÅØÔºåÂàõÂª∫CDVInvokedUrlCommand CDVInvokedUrlCommand* command = [CDVInvokedUrlCommand commandFromJson:jsonEntry]; // Ë∞ÉÁî®Êèí‰ª∂ [self execute:command]); &#125; // ÂØπ‰∫éÊÄßËÉΩÁöÑ‰∏Ä‰∏™‰ºòÂåñÔºåÂêéÈù¢‰ºöËØ¶ÁªÜËØ¥ if (([_queue count] &gt; 0) &amp;&amp; ([NSDate timeIntervalSinceReferenceDate] - _startExecutionTime &gt; MAX_EXECUTION_TIME)) &#123; [self performSelector:@selector(executePending) withObject:nil afterDelay:0]; return; &#125; &#125; &#125; &#125; @finally &#123; _startExecutionTime = 0; &#125;&#125; Áî®Runloop‰ºòÂåñÊÄßËÉΩCordovaÂØπ‰∫éÊèí‰ª∂ÁöÑÊâßË°åËøõË°å‰∫Ü‰ºòÂåñÔºå‰øùËØÅÈ°µÈù¢ÁöÑÊµÅÁ®ãÂ∫¶ÔºåËøêÁî®‰∫ÜRunLoopÔºåÂ∑ßÂ¶ôÁöÑÂ∞Ü‰ª£Á†ÅÂàÜÂâ≤‰∏∫Â§öÂùóÂàÜÊ¨°ÊâßË°åÔºåÈÅøÂÖçÁî±‰∫éÊèí‰ª∂ÊâßË°åÂØºËá¥‰∏ªÁ∫øÁ®ãÈòªÂ°ûÔºåÂΩ±ÂìçÈ°µÈù¢ÁªòÂà∂ÔºåÂØºËá¥ÊéâÂ∏ß„ÄÇÂÖ∑‰Ωì‰ª£Á†ÅÂ¶Ç‰∏ãÔºö 1234567891011// CDVCommandQueue.m// MAX_EXECUTION_TIME ‚âà 1s / 60 / 2// ËÆ°ÁÆóÂá∫ÁªòÂà∂‰∏ÄÂ∏ßÊó∂Èó¥ÁöÑ‰∏ÄÂçästatic const double MAX_EXECUTION_TIME = .008;// Âà§Êñ≠Êú¨Ê¨°ÊâßË°åÊó∂Èó¥ÔºåÂ¶ÇÊûúÂ§ß‰∫éMAX_EXECUTION_TIMEÔºåË∞ÉÁî®performSelector:withObject:afterDelayÔºåÁªìÊùüÊú¨Ê¨°Ë∞ÉÁî®if (([_queue count] &gt; 0) &amp;&amp; ([NSDate timeIntervalSinceReferenceDate] - _startExecutionTime &gt; MAX_EXECUTION_TIME)) &#123; [self performSelector:@selector(executePending) withObject:nil afterDelay:0]; return;&#125; ‰ºòÂåñÁ≠ñÁï•ÂàÜÊûêÔºö Â∞ÜÈòüÂàó‰∏≠ÁöÑÊèí‰ª∂ÂàÜÂâ≤‰∏∫ÂæàÂ§öÂ∞èÂùóÊù•ÊâßË°å ÂºÄÂßãÊâßË°åexecutePendingÊñπÊ≥ïÊó∂ÔºåËÆ∞ÂΩïÂºÄÂßãÊó∂Èó¥ÔºåÊØèÊ¨°ÊâßË°åÂÆå‰∏Ä‰∏™Êèí‰ª∂ÊñπÊ≥ïÂêéÔºåÂà§Êñ≠Êú¨Ê¨°ÊâßË°åÊó∂Èó¥ÊòØÂê¶Ë∂ÖËøáMAX_EXECUTION_TIMEÔºåÂ¶ÇÊûúÊ≤°ÊúâË∂ÖËøáÔºåÁªßÁª≠ÊâßË°åÔºåÂ¶ÇÊûúË∂ÖËøá‰∫ÜMAX_EXECUTION_TIMEÔºåË∞ÉÁî®performSelector:withObject:afterDelayÔºåÁªìÊùüÊú¨Ê¨°Ë∞ÉÁî® Â¶ÇÊûúË¶Å‰øùËØÅUIÊµÅÁïÖÔºåÈúÄË¶ÅÊª°Ë∂≥Êù°‰ª∂CPUÊó∂Èó¥ + GPUÊó∂Èó¥ &lt;= 1s/60Ôºå ‰∏∫‰∫ÜÁªôGPUÁïô‰∏ãË∂≥Â§üÁöÑÊó∂Èó¥Ê∏≤ÊüìÔºåË¶ÅÂ∞ΩÈáèËÆ©CPUÂç†Áî®Êó∂Èó¥Â∞è‰∫é1s/60/2 RunloopÊâßË°åÁöÑÊµÅÁ®ãÂ¶Ç‰∏ãÂõæÊâÄÁ§∫ÔºåÁ≥ªÁªüÂú®Êî∂Âà∞kCFRunLoopBeforeWaitingÔºàÁ∫øÁ®ãÂç≥Â∞Ü‰ºëÁú†ÔºâÈÄöÁü•Êó∂Ôºå‰ºöËß¶Âèë‰∏ÄÊ¨°ÁïåÈù¢ÁöÑÊ∏≤ÊüìÔºå‰πüÂ∞±ÊòØÂú®ÂÆåÊàêsource0ÁöÑÂ§ÑÁêÜÂêé source0Âú®ËøôÈáåÂ∞±ÊòØÊèí‰ª∂ÁöÑÊâßË°å‰ª£Á†ÅÔºåÂú®kCFRunLoopBeforeWaitingÈÄöÁü•‰πãÂâçÔºåÂ¶ÇÊûúsource0ÊâßË°åÊó∂Èó¥ËøáÈïøÂ∞±‰ºöÂØºËá¥ÁïåÈù¢Ê≤°ÊúâÂæóÂà∞ÂèäÊó∂ÁöÑÂà∑Êñ∞„ÄÇ ÂáΩÊï∞performSelector:withObject:afterDelayÔºå‰ºöÂ∞ÜÊñπÊ≥ïÊ≥®ÂÜåÂà∞TimerÔºåÁªìÊùüsource0Ë∞ÉÁî®ÔºåÂºÄÂßãÊ∏≤ÊüìÁïåÈù¢„ÄÇÁïåÈù¢Ê∏≤ÊüìÂÆåÊàêÂêéÔºåRunloopÂºÄÂßãsleepÔºåÁÑ∂ÂêéË¢´timerÂî§ÈÜíÂèàÂºÄÂßãÁªßÁª≠Â§ÑÁêÜsource0„ÄÇ Êèí‰ª∂ÊñπÊ≥ïÊâßË°åÊñπÊ≥ïÊúÄÁªàÁöÑÊâßË°åÂú®ÊñπÊ≥ïexecute:‰∏≠Ôºå‰ªécommand‰∏≠ÂèñÂá∫Ë¶ÅÊâßË°åÁöÑÊèí‰ª∂Á±ª„ÄÅÊñπÊ≥ï„ÄÅÂèÇÊï∞ÔºåÁÑ∂ÂêéÊâßË°åÊñπÊ≥ï„ÄÇ 123456789101112131415161718192021222324- (BOOL)execute:(CDVInvokedUrlCommand*)command&#123; // Ëé∑ÂèñÊèí‰ª∂ÂÆû‰æã CDVPlugin* obj = [_viewController.commandDelegate getCommandInstance:command.className]; BOOL retVal = YES; double started = [[NSDate date] timeIntervalSince1970] * 1000.0; NSString* methodName = [NSString stringWithFormat:@"%@:", command.methodName]; SEL normalSelector = NSSelectorFromString(methodName); if ([obj respondsToSelector:normalSelector]) &#123; ((void (*)(id, SEL, id))objc_msgSend)(obj, normalSelector, command); &#125; else &#123; // There's no method to call, so throw an error. NSLog(@"ERROR: Method '%@' not defined in Plugin '%@'", methodName, command.className); retVal = NO; &#125; double elapsed = [[NSDate date] timeIntervalSince1970] * 1000.0 - started; // ÁõëÊéßÊèí‰ª∂ÊñπÊ≥ïÊâßË°åÊó∂Èó¥ÔºåÊâìÂç∞Âá∫Â§ß‰∫é10msÁöÑÊñπÊ≥ï if (elapsed &gt; 10) &#123; NSLog(@"THREAD WARNING: ['%@'] took '%f' ms. Plugin should use a background thread.", command.className, elapsed); &#125; return retVal;&#125; ÂéüÁîüÂõûË∞ÉjsÂéüÁîüÊñπÊ≥ïÊâßË°åÂÆåÊàêÂêéÔºå‰ºöÊääÁªìÊûúËøîÂõûÁªôjsÔºåË∞ÉÁî®ÊñπÊ≥ïsendPluginResult:callbackId:ÔºåÁî®CDVPluginResultÊù•‰º†ÈÄíÂõûË∞ÉÂèÇÊï∞ÔºåÁî®callbackIdÊù•Âå∫ÂàÜÊòØÂì™Ê¨°Ë∞ÉÁî®ÔºàcallbackIdÁî±js‰∫ßÁîüÔºâ„ÄÇ 12345678910111213141516171819// CDVCommandDelegateImpl.m- (void)sendPluginResult:(CDVPluginResult*)result callbackId:(NSString*)callbackId&#123; // Âà§Êñ≠callbackIdÈïøÂ∫¶ÊòØÂê¶Â∞è‰∫é100 // Áî®Ê≠£ÂàôË°®ËææÂºè"[^A-Za-z0-9._-]"Êù•È™åËØÅcallbackId if (![self isValidCallbackId:callbackId]) &#123; return; &#125; // Áä∂ÊÄÅÁ†Å int status = [result.status intValue]; // ÊòØÂê¶ÊåÅÁª≠ÂõûË∞É BOOL keepCallback = [result.keepCallback boolValue]; // ‰ºöÂ∏¶Âì¶ÂèÇÊï∞ NSString* argumentsAsJSON = [result argumentsAsJSON]; // ÊâßË°åjsÊñπÊ≥ïÔºåÂõûË∞É NSString* js = [NSString stringWithFormat:@"cordova.require('cordova/exec').nativeCallback('%@',%d,%@,%d, %d)", callbackId, status, argumentsAsJSON, keepCallback, debug]; [self evalJsHelper:js];&#125; CDVPluginÊ≥®ÂÜå‰∏éÂàùÂßãÂåñÊàë‰ª¨ÂÖàÁúãÁúãÈÖçÁΩÆÊñá‰ª∂‰∏≠Êèí‰ª∂ÁöÑÂÆö‰πâÔºö 1234567&lt;!-- ÂÆö‰πâÊèí‰ª∂Âêç‰∏∫HandleOpenUrlÁöÑÊèí‰ª∂ --&gt;&lt;feature name="HandleOpenUrl"&gt; &lt;!-- ÂØπÂ∫îÁöÑiOSÁ±ªÂêçÊòØCDVHandleOpenURL --&gt; &lt;param name="ios-package" value="CDVHandleOpenURL" /&gt; &lt;!-- ÈúÄË¶ÅÈªòËÆ§Âä†ËΩΩÁöÑÊèí‰ª∂ --&gt; &lt;param name="onload" value="true" /&gt;&lt;/feature&gt; Âä†ËΩΩÈªòËÆ§Êèí‰ª∂Âú®CDVViewControllerÁöÑviewDidLoadÊó∂Ôºå‰ªéCordovaÁöÑÈÖçÁΩÆÊñá‰ª∂config.xml‰∏≠ÔºåËØªÂèñÂá∫ÈúÄË¶ÅÈªòËÆ§Âä†ËΩΩÁöÑÊèí‰ª∂ÔºåÈÅçÂéÜÂàùÂßãÂåñ„ÄÇ CDVViewController‰∏≠ÂàùÂßãÂåñÈªòËÆ§Êèí‰ª∂‰ª£Á†Å„ÄÇ 1234567891011121314151617- (void)viewDidLoad &#123; // Load settings [self loadSettings]; if ([self.startupPluginNames count] &gt; 0) &#123; [CDVTimer start:@"TotalPluginStartup"]; for (NSString* pluginName in self.startupPluginNames) &#123; [CDVTimer start:pluginName]; // ÂàùÂßãÂåñÊèí‰ª∂ [self getCommandInstance:pluginName]; [CDVTimer stop:pluginName]; &#125; [CDVTimer stop:@"TotalPluginStartup"]; &#125;&#125; Êèí‰ª∂ÂàùÂßãÂåñÊèí‰ª∂ÂàùÂßãÂåñÁöÑËøáÁ®ãÔºö Âä†ËΩΩÈÖçÁΩÆÊñá‰ª∂config.xml Ê†πÊçÆÊèí‰ª∂ÂêçËé∑ÂèñÂØπÂ∫îÁ±ªÂêç Ê†πÊçÆÁ±ªÂêç‰ªéÁºìÂ≠ò‰∏≠Êü•ÊâæÔºåÂ¶ÇÊûúÂëΩ‰∏≠Áõ¥Êé•ËøîÂõû Ê≤°ÊúâÁºìÂ≠òÈáçÊñ∞ÂàõÂª∫‰∏Ä‰∏™ÂÆû‰æãÔºåÂπ∂ÂÜôÂÖ•ÁºìÂ≠ò Êèí‰ª∂ÂàùÂßãÂåñÁöÑÂÖ•Âè£ÊòØgetCommandInstanceÔºå‰º†ÂÖ•ÂèÇÊï∞ÊòØÊèí‰ª∂ÂêçÁß∞ÔºåËøîÂõû‰∏Ä‰∏™Êèí‰ª∂ÁöÑÂÆû‰æãÂØπË±°„ÄÇ 12345678910111213141516171819202122232425- (id)getCommandInstance:(NSString*)pluginName&#123; // Âú®pluginsMap‰∏≠Áî®Êèí‰ª∂ÂêçÁß∞Ëé∑ÂèñÁ±ªÂêçÔºàÊèí‰ª∂Âêç‰∏çÂå∫ÂàÜÂ§ßÂ∞èÂÜôÔºâ NSString* className = [self.pluginsMap objectForKey:[pluginName lowercaseString]]; // Ê≤°ÊúâÈÖçÁΩÆÊèí‰ª∂ÔºåÂàùÂßãÂåñÂ§±Ë¥• if (className == nil) &#123; return nil; &#125; // ‰ªéÁºìÂ≠ò‰∏≠Ëé∑ÂèñÔºåÂ¶ÇÊûúÂëΩ‰∏≠Áõ¥Êé•ËøîÂõûÁºìÂ≠ò id obj = [self.pluginObjects objectForKey:className]; if (!obj) &#123; // Ê≤°ÊúâÁºìÂ≠òÔºåÂàõÂª∫‰∏Ä‰∏™Êñ∞ÁöÑÂÆû‰æã obj = [[NSClassFromString(className)alloc] initWithWebViewEngine:_webViewEngine]; if (obj != nil) &#123; // ÂÆû‰æãÂàõÂª∫ÊàêÂäüÔºåÊ≥®ÂÜåÊèí‰ª∂ [self registerPlugin:obj withClassName:className]; &#125; else &#123; NSLog(@"CDVPlugin class %@ (pluginName: %@) does not exist.", className, pluginName); &#125; &#125; return obj;&#125; Ê≥®ÂÜåÊèí‰ª∂ÁöÑÂÖ≥ÈîÆÊñπÊ≥ïregisterPlugin:withClassName: 1234567891011121314- (void)registerPlugin:(CDVPlugin*)plugin withClassName:(NSString*)className&#123; if ([plugin respondsToSelector:@selector(setViewController:)]) &#123; [plugin setViewController:self]; &#125; if ([plugin respondsToSelector:@selector(setCommandDelegate:)]) &#123; [plugin setCommandDelegate:_commandDelegate]; &#125; // ÂÜôÂÖ•ÁºìÂ≠ò [self.pluginObjects setObject:plugin forKey:className]; [plugin pluginInitialize];&#125; CordovaËøòÊèê‰æõ‰∫ÜÊèí‰ª∂ÂêçÊ≥®ÂÜåÊèí‰ª∂ÁöÑÊñπÂºèÔºå‰ΩøÁî®ÂáΩÊï∞registerPlugin:withPluginName:ÔºåÂÆûÁé∞ÊñπÂºèÂ∑Æ‰∏çÂ§öÔºåÂ∞±‰∏çËµòËø∞‰∫Ü„ÄÇ Ê≥®ÂÜåÊèí‰ª∂Ê≠•È™§ ËÆæÁΩÆÊèí‰ª∂ÁöÑviewControllerÂíådelegate Â∞ÜÊèí‰ª∂‰ª•className‰∏∫keyÊîæÂÖ•pluginObjects‰∏≠ÔºåpluginObjectsÊòØ‰∏Ä‰∏™Êèí‰ª∂ÁöÑÁºìÂ≠ò Ë∞ÉÁî®Êèí‰ª∂ÁöÑpluginInitialize Êèí‰ª∂ÈîÄÊØÅÊèí‰ª∂ÈîÄÊØÅÁöÑÊó∂Êú∫ÊòØÂàõÂª∫Êèí‰ª∂ÁöÑCDVViewControllerÈáäÊîæÁöÑÊó∂ÂÄôÔºåÂõ†‰∏∫Êèí‰ª∂ÂÆû‰æãË¢´ÂàõÂª∫ÂêéË¢´ÁºìÂ≠òmapÂºïÁî®ÔºåÂØπÂ∫îÁöÑÈîÄÊØÅ‰ª£Á†Å„ÄÇ 12345678910111213141516// CDVViewController.m- (void)dealloc&#123; [[NSNotificationCenter defaultCenter] removeObserver:self]; [CDVUserAgentUtil releaseLock:&amp;_userAgentLockToken]; [_commandQueue dispose]; [[self.pluginObjects allValues] makeObjectsPerformSelector:@selector(dispose)];&#125;// CDVPlugin.m- (void)dispose&#123; viewController = nil; commandDelegate = nil;&#125; Â∞èÁªì Âú®config.xmlÊñá‰ª∂‰∏≠ÈÖçÁΩÆÊèí‰ª∂ÔºåÂ£∞ÊòéÊèí‰ª∂‰∏éÁ±ªÁöÑÊò†Â∞ÑÂÖ≥Á≥ªÔºå‰ª•ÂèäÂä†ËΩΩÁ≠ñÁï• Êèí‰ª∂ÁöÑÂàùÂßãÂåñÊó∂ÊáíÂä†ËΩΩÔºåÈô§‰∫ÜonloadÈÖçÁΩÆ‰∏∫YESÁöÑÊèí‰ª∂‰ºöÈªòËÆ§Âä†ËΩΩÔºåÂÖ∂ÂÆÉÊèí‰ª∂ÈÉΩÊòØ‰ΩøÁî®Êó∂Âä†ËΩΩ Êèí‰ª∂‰ΩøÁî®‰∫Ü‰∏§‰∏™MapÊù•ÁºìÂ≠òÔºåpluginObjectsÂª∫Á´ã‰∫ÜÁ±ªÂêç‰∏éÊèí‰ª∂ÂÆû‰æãÂØπË±°ÁöÑÊò†Â∞ÑÔºåpluginsMapÂª∫Á´ã‰∫ÜÊèí‰ª∂Âêç‰∏éÁ±ªÂêçÁöÑÊò†Â∞Ñ„ÄÇ Âú®‰∏Ä‰∏™CDVViewController‰∏≠ÔºåÂêå‰∏Ä‰∏™Êèí‰ª∂ÂêåÊó∂Âè™‰ºöÂ≠òÂú®‰∏Ä‰∏™ÂÆû‰æã]]></content>
      <tags>
        <tag>Ê∫êÁ†ÅÂ≠¶‰π†</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÊµÖÊûêAutoreleasePoolÊ∫êÁ†Å]]></title>
    <url>%2F2018%2F04%2F14%2F%E6%B5%85%E6%9E%90AutoreleasePool%E6%BA%90%E7%A0%81%2F</url>
    <content type="text"><![CDATA[ÊúÄËøëÂú®ÊãúËØªDravenessÂ§ß‰Ω¨ÁöÑ‰∏ÄÁØáÊñáÁ´†Ëá™Âä®ÈáäÊîæÊ±†ÁöÑÂâç‰∏ñ‰ªäÁîü ‚Äî- Ê∑±ÂÖ•Ëß£Êûê autoreleasepoolÔºåÁúãÂà∞Êñá‰∏≠ÁªôËØªËÄÖÁïô‰∫Ü‰∏Ä‰∏™ÈóÆÈ¢òÔºö ÊàëÂà∞Áé∞Âú®‰πü‰∏çÊòØÂæàÊ∏ÖÊ•ö‰∏∫‰ªÄ‰πàË¶ÅÊ†πÊçÆÂΩìÂâçÈ°µÁöÑ‰∏çÂêåÁä∂ÊÄÅ kill Êéâ‰∏çÂêå child ÁöÑÈ°µÈù¢„ÄÇ ÂÖ≥‰∫éAutoreleasePoolÊòØ‰ªÄ‰πàÔºåÂº∫ÂäõÊé®ËçêÈòÖËØªÂéüÊñáÔºåÂÜôÁöÑÂæàÂ•Ω„ÄÇËøôÈáåÂ∞±‰∏çËØ¥‰∫ÜÔºåÁõ¥Êé•ËÆ®ËÆ∫ÈóÆÈ¢ò„ÄÇ È¶ñÂÖàÊòØÊï¥‰∏™popÊñπÊ≥ïÁöÑÂÆûÁé∞Ôºö 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758static inline void pop(void *token) &#123; AutoreleasePoolPage *page; id *stop; if (token == (void*)EMPTY_POOL_PLACEHOLDER) &#123; // Popping the top-level placeholder pool. if (hotPage()) &#123; // Pool was used. Pop its contents normally. // Pool pages remain allocated for re-use as usual. pop(coldPage()-&gt;begin()); &#125; else &#123; // Pool was never used. Clear the placeholder. setHotPage(nil); &#125; return; &#125; page = pageForPointer(token); stop = (id *)token; if (*stop != POOL_BOUNDARY) &#123; if (stop == page-&gt;begin() &amp;&amp; !page-&gt;parent) &#123; // Start of coldest page may correctly not be POOL_BOUNDARY: // 1. top-level pool is popped, leaving the cold page in place // 2. an object is autoreleased with no pool &#125; else &#123; // Error. For bincompat purposes this is not // fatal in executables built with old SDKs. return badPop(token); &#125; &#125; if (PrintPoolHiwat) printHiwat(); page-&gt;releaseUntil(stop); // memory: delete empty children if (DebugPoolAllocation &amp;&amp; page-&gt;empty()) &#123; // special case: delete everything during page-per-pool debugging AutoreleasePoolPage *parent = page-&gt;parent; page-&gt;kill(); setHotPage(parent); &#125; else if (DebugMissingPools &amp;&amp; page-&gt;empty() &amp;&amp; !page-&gt;parent) &#123; // special case: delete everything for pop(top) // when debugging missing autorelease pools page-&gt;kill(); setHotPage(nil); &#125; else if (page-&gt;child) &#123; // hysteresis: keep one empty child if page is more than half fully if (page-&gt;lessThanHalfFull()) &#123; page-&gt;child-&gt;kill(); &#125; else if (page-&gt;child-&gt;child) &#123; page-&gt;child-&gt;child-&gt;kill(); &#125; &#125;&#125; Êàë‰ª¨ÂÖàÁúãÁúãÈáäÊîæÁöÑÂáΩÊï∞releaseUntilÔºåÂÆÉÂú®ÈáäÊîæÁöÑÊó∂ÂÄôÂÖ∂ÂÆû‰ºö‰∏ÄÁõ¥È°∫ÁùÄparentÂæÄÂâçÈáäÊîæÔºåÁõ¥Âà∞ÂèÇÊï∞stopÔºå‰πüÂ∞±ÊòØËØ¥ÂèØËÉΩ‰∏ÄÊ¨°ÊÄßÈáäÊîæÂ•ΩÂá†‰∏™page„ÄÇ 123456789101112131415161718192021// ‰ª£Á†ÅÊúâÊâÄÂà†Âáèvoid releaseUntil(id *stop)&#123; while (this-&gt;next != stop) &#123; AutoreleasePoolPage *page = hotPage(); while (page-&gt;empty()) &#123; page = page-&gt;parent; setHotPage(page); &#125; id obj = *--page-&gt;next; memset((void*)page-&gt;next, SCRIBBLE, sizeof(*page-&gt;next)); if (obj != POOL_BOUNDARY) &#123; objc_release(obj); &#125; &#125; setHotPage(this);&#125; ÁÑ∂ÂêéÊàë‰ª¨Êù•ÁúãÁúãËøôÊÆµÊúâÁñëÈóÆÁöÑ‰ª£Á†Å 123456789101112131415161718192021// memory: delete empty childrenif (DebugPoolAllocation &amp;&amp; page-&gt;empty()) &#123; // ÂàÜÊîØ1 // special case: delete everything during page-per-pool debugging AutoreleasePoolPage *parent = page-&gt;parent; page-&gt;kill(); setHotPage(parent);&#125; else if (DebugMissingPools &amp;&amp; page-&gt;empty() &amp;&amp; !page-&gt;parent) &#123; // ÂàÜÊîØ2 // special case: delete everything for pop(top) // when debugging missing autorelease pools page-&gt;kill(); setHotPage(nil);&#125; else if (page-&gt;child) &#123; // ÂàÜÊîØ3 // hysteresis: keep one empty child if page is more than half fully if (page-&gt;lessThanHalfFull()) &#123; page-&gt;child-&gt;kill(); &#125; else if (page-&gt;child-&gt;child) &#123; page-&gt;child-&gt;child-&gt;kill(); &#125;&#125; ËøôÂùó‰ª£Á†ÅÁöÑ‰ΩúÁî®ÊòØÂà†Èô§Á©∫ÁöÑÂ≠êËäÇÁÇπÔºåÈáäÊîæÂÜÖÂ≠ò„ÄÇpop‰πãÂêé‰∏âÁßçÊÉÖÂÜµÔºö ÂΩìÂâçpage‰∏∫Á©∫ÔºåÁõ¥Êé•killÊéâÂΩìÂâçpageÔºåÁÑ∂ÂêéÊääparentËÆæÁΩÆ‰∏∫hotpageÔºõ ÂΩìÂâçpage‰∏∫Á©∫ÔºåËÄå‰∏îÊ≤°ÊúâparentÔºåkillÊéâÂΩìÂâçpageÔºåhotpageÁΩÆ‰∏∫Á©∫Ôºõ ÂΩìÂâçpage‰∏ç‰∏∫Á©∫Ôºå‰ΩÜÊòØÊúâchildÔºåÂ¶ÇÊûúÂΩìÂâçpageÁöÑÁ©∫Èó¥Âç†Áî®‰∏çÂà∞‰∏ÄÂçäÔºåÈáäÊîæchildÔºåÂ¶ÇÊûúÂΩìÂâçpageÁöÑÁ©∫Èó¥Âç†Áî®Ë∂ÖËøá‰∏ÄÂçäÔºå‰∏îchildËøòÊúâchildÔºåÁõ¥Êé•ÈáäÊîæËøô‰∏™Â≠ôÂ≠êËæàÁöÑpage„ÄÇÔºàÂØπ‰∫éÁ¨¨‰∏âÊ≠•Ê≥®Èáä‰∏≠ÁöÑËß£ÈáäÊòØÔºökeep one empty child if page is more than half fullyÔºâ Êàë‰ª¨ÂÜçÁúãÁúãkillÁöÑÂÆûÁé∞ÔºåÂèØ‰ª•ÂèëÁé∞‰ªñÊòØ‰ºöÈ°∫ÁùÄchild‰∏ÄÁõ¥ÂæÄÂêéÈáäÊîæÔºå‰øùËØÅÈáäÊîæËäÇÁÇπÁöÑchild pageÈÉΩË¢´ÈáäÊîæ‰∫Ü„ÄÇ 1234567891011121314151617void kill()&#123; AutoreleasePoolPage *page = this; while (page-&gt;child) page = page-&gt;child; AutoreleasePoolPage *deathptr; do &#123; deathptr = page; page = page-&gt;parent; if (page) &#123; page-&gt;unprotect(); page-&gt;child = nil; page-&gt;protect(); &#125; delete deathptr; &#125; while (deathptr != this);&#125; Âà∞ËøôÈáåÂ∞±ÂèØ‰ª•ÂæóÂá∫ÁªìËÆ∫‰∫ÜÔºö pop‰πãÂêéÔºåÊâÄÊúâchild pageËÇØÂÆöÈÉΩ‰∏∫Á©∫‰∫ÜÔºå‰∏îÂΩìÂâçpage‰∏ÄÂÆöÊòØhotPage Á≥ªÁªü‰∏∫‰∫ÜËäÇÁ∫¶ÂÜÖÂ≠òÔºåÂà§Êñ≠ÔºåÂ¶ÇÊûúÂΩìÂâçpageÁ©∫Èó¥‰ΩøÁî®Â∞ë‰∫é‰∏ÄÂçäÔºåÂ∞±ÈáäÊîæÊéâÊâÄÊúâÁöÑchild pageÔºåÂ¶ÇÊûúÂΩìÂâçpageÁ©∫Èó¥‰ΩøÁî®Â§ß‰∫é‰∏ÄÂçäÔºåÂ∞±‰ªéÂ≠ôÂ≠êpageÂºÄÂßãÈáäÊîæÔºåÈ¢ÑÁïô‰∏Ä‰∏™child page„ÄÇ]]></content>
      <tags>
        <tag>Ê∫êÁ†ÅÂ≠¶‰π†</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[iOSÁî®ÂéüÁîü‰ª£Á†ÅËØªÂÜôWebviewÁöÑLocal Storage]]></title>
    <url>%2F2018%2F04%2F03%2FiOS%E7%94%A8%E5%8E%9F%E7%94%9F%E4%BB%A3%E7%A0%81%E8%AF%BB%E5%86%99Webview%E7%9A%84Local%20Storage%2F</url>
    <content type="text"><![CDATA[ËÉåÊôØÂÖ¨Âè∏È°πÁõÆ‰ΩøÁî®ÁöÑCordovaÊ∑∑ÂêàÂºÄÂèëÁöÑÔºåÊúâ‰∏Ä‰∏™Ê®°Âùó‰ª•ÂâçÁî®H5ÂÆûÁé∞ÁöÑÔºåÊñ∞ÁâàÊú¨Áî®ÂéüÁîüÊù•ÂÆûÁé∞Ôºå‰∫éÊòØÈúÄË¶ÅËøÅÁßªÊï∞ÊçÆ„ÄÇH5‰ΩøÁî®ÁöÑLocal StorageÂ≠òÁöÑÊï∞ÊçÆÔºåÂéüÁîüË¶ÅÊãøÂà∞Êï∞ÊçÆÊúâ‰∏§ÁßçÊñπÊ°àÔºö Áî®WebViewÊâßË°åjsÊñπÊ≥ïÊù•ËØªÂèñÊï∞ÊçÆÔºõ ÊâæÂà∞Local StorageÂ≠òÂÇ®Ë∑ØÂæÑÔºåÁõ¥Êé•ËØªÂèñÔºõ ÊñπÊ°à‰∏ÄÂÆûÁé∞Ëµ∑Êù•ÊØîËæÉÁÆÄÂçïÔºå‰ΩÜÊòØ‰ºöÂ≠òÂú®‰∏Ä‰∫õÈóÆÈ¢òÔºåÈúÄË¶ÅÂ§öÂºÄ‰∏Ä‰∏™WebviewÊù•ËøÅÁßªÊï∞ÊçÆÔºåËÄå‰∏îËøô‰∏™ËøáÁ®ã‰∏çÂ•ΩÊéßÂà∂Ôºå‰∏çÊòØÊúÄ‰ºòËß£ÔºåÊú¨ÊñáËÆ®ËÆ∫ÁöÑÊòØÊñπÊ°à‰∫å„ÄÇ Áõ¥Êé•ËØªÂÜôLocal StorageÂÖàËØ¥ÁªìËÆ∫ÔºåLocal StorageÁöÑÂÖ∂ÂÆûÊòØ‰∏Ä‰∏™SqliteÊï∞ÊçÆÂ∫ìÔºåÊàë‰ª¨Ë¶ÅËØªÂÜôÊï∞ÊçÆÂè™Ë¶ÅÊâæÂà∞Ëøô‰∏™Êï∞ÊçÆÂ∫ìÔºåÁÑ∂ÂêéÂ∞±ÂèØ‰ª•ÂÆûÁé∞ÊâãÂä®ËØªÂÜô‰∫Ü„ÄÇ Êï∞ÊçÆÂ∫ìÂ≠òÊîæË∑ØÂæÑ iOS 5.1Âèä‰πãÂâç‰ΩøÁî®UIWebViewÔºöLibrary/Caches/iOS 5.1‰πãÂêé‰ΩøÁî®UIWebViewÔºöLibrary/WebKit/LocalStorage/WKWebViewÔºöLibrary/WebKit/WebsiteData/LocalStorage/ // UIWebViewÂèØ‰ª•‰ªéUserDefaultÂèñÂá∫LocalStorageÁöÑË∑ØÂæÑ[[NSUserDefaults standardUserDefaults] objectForKey:@‚ÄùWebKitLocalStorageDatabasePathPreferenceKey‚Äù] Êï∞ÊçÆÂ≠òÂÇ®ÊñπÂºèÊï∞ÊçÆÂ≠òÂú®ItemTableË°®ÔºåÂè™ÊúâkeyÂíåvalue‰∏§‰∏™Â≠óÊÆµÔºåkeyÁõ¥Êé•Áî®NSStringÂèØ‰ª•ÂèñÂá∫Êù•ÔºåvalueÂèñÂá∫Êù•ÊòØ‰∏Ä‰∏™NSDataÔºåÈúÄË¶ÅÁî®NSUTF16LittleEndianStringEncodingËß£Á†Å„ÄÇ ËØªÂÜôÊï∞ÊçÆÂÜô‰∫Ü‰∏™ÁÆÄÊòìÁöÑDemoÔºåÁî®ÁöÑFMDBÊù•Êìç‰ΩúÊï∞ÊçÆÂ∫ìÔºåËøôÈáåÂ∞±‰∏ç‰ªãÁªç‰∫Ü„ÄÇ 12345678910111213// ÂèñÊï∞ÊçÆ- (NSString *)valueWithKey:(NSString *)key &#123; if ([NSString isNull:key]) &#123; return nil; &#125; __block NSString *result; [self.dataQueue inDatabase:^(FMDatabase *db) &#123; NSData *data = [db dataForQuery:@&quot;select value from ItemTable where key = ?&quot;, key]; result = [[NSString alloc] initWithData:data encoding:NSUTF16LittleEndianStringEncoding]; &#125;]; return result;&#125; 123456789101112131415// Â≠òÊï∞ÊçÆ- (BOOL)saveValue:(NSString *)value forKey:(NSString *)key &#123; if ([NSString isNull:value] || [NSString isNull:key]) &#123; return NO; &#125; __block BOOL result; [self.dataQueue inDatabase:^(FMDatabase *db) &#123; [db executeUpdate:@&quot;delete from ItemTable where key = ?&quot;, key]; NSData *data = [value dataUsingEncoding:NSUTF16LittleEndianStringEncoding]; result = [db executeUpdate:@&quot;insert into ItemTable (key, value) values (?, ?)&quot;, key, data]; &#125;]; return result;&#125; WebKitÊ∫êÁ†ÅÂàÜÊûê‰∏∫‰∫ÜÊâæÂà∞Local StorageÂ≠òÊîæÁöÑË∑ØÂæÑÔºåÂú®ÁΩë‰∏äÊâæ‰∫ÜÂæàÂ§öËµÑÊñôÔºåÂèëÁé∞ËøôÊñπÈù¢ÁöÑËµÑÊñôÂæàÂ∞ëÔºå‰πüÊ≤°ÊúâÊÄïÂá∫Áé∞ÂêÑÁßçÂùëÊàñËÄÖÁ≥ªÁªüÁâàÊú¨ÂÖºÂÆπÔºå‰∫éÊòØÂÜ≥ÂÆöÁ†îÁ©∂‰∏ãWebKitÊ∫êÁ†ÅÔºå‰ªéÊ∫êÁ†ÅÈáåÈù¢ÊâæÁ≠îÊ°à„ÄÇ Webkit„ÄÅWebCoreÊ∫êÁ†ÅÂú∞ÂùÄ„ÄÇÂèØ‰ª•ÁúãÂà∞WebKitÊúâ‰∏§‰∏™ÁâàÊú¨ÔºåWebKit-7604.1.38.0.7ÂíåWebKit2-7604.1.38.0.7ÔºåÂâçËÄÖÊòØUIWebViewÁöÑÔºåÂêéËÄÖÊòØWKWebViewÁöÑ„ÄÇ Ëß£ÂéãWebKit-7604.1.38.0.7„ÄÇÁî®XcodeÊâìÂºÄÂ∑•Á®ãÊñá‰ª∂ÔºåÂ∑•Á®ãÂêçÂè´WebKitLegacyÔºåËøô‰∏™ÂëΩÂêçÂ§™ÂΩ¢Ë±°‰∫ÜÔºåWebKitÁöÑÈÅó‰∫ß„ÄÇËã¶‰∫éÂêÑÁßçÂéÜÂè≤ÂéüÂõ†ÔºåÂÖ¨Âè∏È°πÁõÆËøòÂÅúÁïôÂú®UIWebViewÁöÑÈò∂ÊÆµÔºåÂøÉÂ°û„ÄÇÂú®WebStorageManager.mÁ±ª‰∏≠ÂèØ‰ª•ÁúãÂà∞ÂÖ≥‰∫éLocal Storage‰øùÂ≠òË∑ØÂæÑÁöÑÂÆö‰πâÔºåË∑ØÂæÑÊòØLibrary/WebKit/LocalStorage/„ÄÇ 1234567891011static void initializeLocalStoragePath()&#123; NSUserDefaults *defaults = [NSUserDefaults standardUserDefaults]; sLocalStoragePath = [defaults objectForKey:WebStorageDirectoryDefaultsKey]; if (!sLocalStoragePath || ![sLocalStoragePath isKindOfClass:[NSString class]]) &#123; NSArray *paths = NSSearchPathForDirectoriesInDomains(NSLibraryDirectory, NSUserDomainMask, YES); NSString *libraryDirectory = [paths objectAtIndex:0]; sLocalStoragePath = [libraryDirectory stringByAppendingPathComponent:@&quot;WebKit/LocalStorage&quot;]; &#125; sLocalStoragePath = [[sLocalStoragePath stringByStandardizingPath] retain];&#125; Ëß£ÂéãWebKit2-7604.1.38.0.7ÔºåË∑ØÂæÑÂÆö‰πâÂú®WKProcessPool.mmÁ±ª‰∏≠ÔºåË∑ØÂæÑÊòØLibrary/WebKit/WebsiteData/LocalStorage/„ÄÇ 123456789+ (NSURL *)_websiteDataURLForContainerWithURL:(NSURL *)containerURL bundleIdentifierIfNotInContainer:(NSString *)bundleIdentifier&#123; NSURL *url = [containerURL URLByAppendingPathComponent:@&quot;Library&quot; isDirectory:YES]; url = [url URLByAppendingPathComponent:@&quot;WebKit&quot; isDirectory:YES]; if (!WebKit::processHasContainer() &amp;&amp; bundleIdentifier) url = [url URLByAppendingPathComponent:bundleIdentifier isDirectory:YES]; return [url URLByAppendingPathComponent:@&quot;WebsiteData&quot; isDirectory:YES]; Ëá≥Ê≠§ÂÖ≥‰∫éUIWebViewÂíåWKWebViewÁöÑÂ≠òÊîæË∑ØÂæÑÊàë‰ª¨Â∑≤ÁªèËÉΩÂ§üÁ°ÆÂÆö‰∫ÜÔºåÈÇ£‰πàÊñá‰ª∂ÂêçÊòØÊÄé‰πàÂÆö‰πâÁöÑÂë¢ÔºåËøôË¶ÅÁúãWebCoreÁöÑÊ∫êÁ†Å‰∫ÜÔºåÂú®SecurityOriginData.cpp‰∏≠ÂÆö‰πâ‰∫ÜÊñá‰ª∂ÂêçÂëΩÂêçËßÑÂàô„ÄÇ 12345678910111213141516171819String SecurityOriginData::databaseIdentifier() const&#123; // Historically, we&apos;ve used the following (somewhat non-sensical) string // for the databaseIdentifier of local files. We used to compute this // string because of a bug in how we handled the scheme for file URLs. // Now that we&apos;ve fixed that bug, we still need to produce this string // to avoid breaking existing persistent state. if (equalIgnoringASCIICase(protocol, &quot;file&quot;)) return ASCIILiteral(&quot;file__0&quot;); StringBuilder stringBuilder; stringBuilder.append(protocol); stringBuilder.append(separatorCharacter); stringBuilder.append(encodeForFileName(host)); stringBuilder.append(separatorCharacter); stringBuilder.appendNumber(port.value_or(0)); return stringBuilder.toString();&#125; ‰ªé‰∏äÈù¢‰ª£Á†ÅÊàë‰ª¨ÂèØ‰ª•ÂæóÂá∫ÁªìËÆ∫ÔºåÂ¶ÇÊûúÊòØfileÂçèËÆÆÁöÑurlÔºåÊñá‰ª∂ÂêçÂÆö‰πâ‰∏∫file__0ÔºåÂê¶Âàô‰ºöÊ†πÊçÆÂÆÉÁöÑurlÊù•ÁîüÊàê‰∏Ä‰∏™Êñá‰ª∂Âêç„ÄÇ Âú®Ë∑ü‰ª£Á†ÅÁöÑÊó∂ÂÄôÔºåÂèëÁé∞UIWebView‰ºöÊääLocal StorageÁöÑÂ≠òÂÇ®Ë∑ØÂæÑÂ≠òÂú®UserDefaultÈáåÔºåÂ≠òÂÇ®ÁöÑKeyÊòØWebKitLocalStorageDatabasePathPreferenceKeyÔºàÂÆö‰πâÂú®WebPreferenceKeysPrivate.hÔºâ„ÄÇÂú®Êñá‰ª∂WebPrefences.mm‰∏≠ÂèØ‰ª•ÊâæÂà∞Áõ∏ÂÖ≥‰ª£Á†Å 123456789101112131415161718192021222324252627282930- (NSString *)_localStorageDatabasePath&#123; return [[self _stringValueForKey:WebKitLocalStorageDatabasePathPreferenceKey] stringByStandardizingPath];&#125;- (NSString *)_stringValueForKey:(NSString *)key&#123; id s = [self _valueForKey:key]; return [s isKindOfClass:[NSString class]] ? (NSString *)s : nil;&#125;- (id)_valueForKey:(NSString *)key&#123; NSString *_key = KEY(key);#if PLATFORM(IOS) __block id o = nil; dispatch_sync(_private-&gt;readWriteQueue, ^&#123; o = [_private-&gt;values.get() objectForKey:_key]; &#125;);#else id o = [_private-&gt;values.get() objectForKey:_key];#endif if (o) return o; o = [[NSUserDefaults standardUserDefaults] objectForKey:_key]; if (!o &amp;&amp; key != _key) o = [[NSUserDefaults standardUserDefaults] objectForKey:key]; return o;&#125; Local StorageÂ≠òÂú®ÁöÑÈóÆÈ¢òÂú®Êü•ËØ¢ËµÑÊñôÁöÑËøáÁ®ã‰∏≠ÔºåÂèëÁé∞‰∫ÜÂæàÂ§öLocal StorageÁöÑÁº∫Èô∑ÔºåÊúâ‰∏ÄÁØáÂÖ≥‰∫éLocal StorageÁöÑËÆ∫ÊñáÂèØ‰ª•ÂèÇËÄÉ„ÄÇÊúâ‰ª•‰∏ãÂá†ÁÇπÔºö ‰∏çË¶ÅÁî®Local StorageÊù•ÂÅöÊåÅ‰πÖÂåñÂ≠òÂÇ®ÔºåÂú®iOS‰∏≠ÔºåÂá∫Áé∞Â≠òÂÇ®Á©∫Èó¥Á¥ßÂº†Êó∂ÔºåÂÆÉ‰ºöË¢´Á≥ªÁªüÊ∏ÖÁêÜÊéâÔºõ ‰∏çË¶ÅÁî®Local StorageÊù•Â≠òÂ§ßÊï∞ÊçÆÔºåÂÆÉÁöÑËØªÂÜôÊïàÁéáÂæà‰Ωé‰∏ãÔºåÂõ†‰∏∫ÂÆÉÈúÄË¶ÅÂ∫èÂàóÂåñ/ÂèçÂ∫èÂàóÂåñ ÂÆÉÊúâ5MÁöÑÂ§ßÂ∞èÈôêÂà∂ ÊÄªÁªìËµ∑Êù•Â∞±‰∏ÄÂè•ËØùÔºå‰∏çË¶ÅÊª•Áî®Local Storage„ÄÇÊúâÂæàÂ§öÊõø‰ª£ÊñπÊ°àÔºåÊØîÂ¶Çhttps://github.com/TheCocoaProject/cordova-plugin-nativestorage ÂèÇËÄÉËµÑÊñôhttps://github.com/wootwoot1234/react-native-webkit-localstorage-reader/issues/4https://blog.csdn.net/shuimuniao/article/details/8027276https://stackoverflow.com/questions/26465409/restore-localstorage-data-from-old-cordova-app/49604587#49604587https://stackoverflow.com/questions/9067249/how-do-i-access-html5-local-storage-created-by-phonegap-on-ios/49604541#49604541https://issues.apache.org/jira/browse/CB-12509]]></content>
      <tags>
        <tag>iOSÁü•ËØÜÂ∞èÁªì</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[AFNetworking‰∏ãËΩΩÊñá‰ª∂Êó∂Êñá‰ª∂ÂêçÈïøÂ∫¶ÁöÑÂùë]]></title>
    <url>%2F2018%2F03%2F29%2FAFNetworking%E4%B8%8B%E8%BD%BD%E6%96%87%E4%BB%B6%E6%97%B6%E6%96%87%E4%BB%B6%E5%90%8D%E9%95%BF%E5%BA%A6%E7%9A%84%E5%9D%91%2F</url>
    <content type="text"><![CDATA[ËÉåÊôØÊúÄËøëÈÅáÂà∞‰∏Ä‰∏™BugÔºåÂú®Áî®AFNetworking‰∏ãËΩΩÊñá‰ª∂ÁöÑÊó∂ÂÄôËé´ÂêçÂÖ∂Â¶ôÁöÑÂ§±Ë¥•‰∫ÜÔºåË∑ü‰∫Ü‰∏Ä‰∏ãÂèëÁé∞‰∏Ä‰∏™Â∞èÂùëÔºåËÆ∞ÂΩï‰∏Ä‰∏ãÈò≤Ê≠¢‰ª•ÂêéÂÜçÊéâËøõÂéª„ÄÇ iOSÂíåLinuxÁöÑÊñá‰ª∂ÂêçÁöÑÈïøÂ∫¶ÈôêÂà∂Áõ∏ÂêåÈÉΩÊòØ255‰∏™Â≠óÁ¨¶ÔºÅÔºÅÔºÅ ÈóÆÈ¢òÊ†πÊ∫êÊòØÊñá‰ª∂ÂêçË∂ÖÂ∫¶Ë∂ÖËøá‰∫Ü255‰∏™Â≠óÁ¨¶ÔºåAFNetworking‰∏ãËΩΩÊñá‰ª∂ÊòØÊàêÂäü‰∫ÜÔºàÊ°ÜÊû∂‰ºöÊääÊñá‰ª∂‰∏ãËΩΩÂà∞‰∏Ä‰∏™‰∏¥Êó∂Êñá‰ª∂Ôºå‰æãÂ¶ÇÔºöCFNetworkDownload_xxx.tmpÔºåËøô‰∏™Êñá‰ª∂Âêç‰∏ç‰ºöÂá∫Áé∞ËøáÈïøÁöÑÈóÆÈ¢òÔºâÔºå‰∏ãËΩΩÊàêÂäü‰πãÂêé‰ºöcopyÂà∞Ë∞ÉÁî®ËÄÖÊåáÂÆöË∑ØÂæÑÔºåÂú®ËøôÈáåÊåáÂÆöÁöÑÊñá‰ª∂ÂêçË∂ÖËøá‰∫Ü255‰∏™Â≠óÁ¨¶ÔºåÂØºËá¥ÂàõÂª∫Êñá‰ª∂Â§±Ë¥•Ôºå‰∫éÊòØÂõûË∞ÉÊòØÊàêÂäü‰∫ÜÔºå‰ΩÜÊòØÂú®ËÆæÁΩÆÁöÑË∑ØÂæÑÊâæ‰∏çÂà∞Ëøô‰∏™Êñá‰ª∂„ÄÇ ‰∏ä‰ª£Á†ÅÔºÅ ‰∏ãËΩΩ‰ª£Á†ÅÔºö 12345678910// Ê≥®ÊÑèÂØπÊñá‰ª∂ÂêçÈïøÂ∫¶ËøõË°åÂ§ÑÁêÜÔºÅÔºÅÔºÅNSString *destination = @&quot;‰∏ãËΩΩÂú∞ÂùÄÔºàÈïøÂ∫¶Â§ß‰∫é255Ôºâ&quot;;NSURLSessionDownloadTask *aTask = [self.updownloadSessionManager downloadTaskWithRequest:mutableRequest progress:^(NSProgress * _Nonnull downloadProgress) &#123; &#125; destination:^NSURL * _Nonnull(NSURL * _Nonnull targetPath, NSURLResponse * _Nonnull response) &#123; return [NSURL fileURLWithPath:destination]; &#125; completionHandler:^(NSURLResponse * _Nonnull response, NSURL * _Nullable filePath, NSError * _Nullable error) &#123; // ‰∏ãËΩΩÊàêÂäüÂêé‰ºöÂõûË∞ÉËØ•blockÔºå‰ΩÜÊòØË∑ØÂæÑ`destination`Êâæ‰∏çÂà∞Ëøô‰∏™Êñá‰ª∂ &#125;]; [aTask resume]; Âá∫ÈîôÁöÑÂú∞ÊñπAFURLSessionManager.m 123456789101112131415161718192021- (void)URLSession:(NSURLSession *)session downloadTask:(NSURLSessionDownloadTask *)downloadTaskdidFinishDownloadingToURL:(NSURL *)location&#123; self.downloadFileURL = nil; if (self.downloadTaskDidFinishDownloading) &#123; self.downloadFileURL = self.downloadTaskDidFinishDownloading(session, downloadTask, location); if (self.downloadFileURL) &#123; NSError *fileManagerError = nil; // locationÊòØ‰∏¥Êó∂Êñá‰ª∂ÔºåÊòØ‰∏ãËΩΩÊàêÂäü‰∫Ü // self.downloadFileURL ÊòØÁõÆÊ†áË∑ØÂæÑÔºåÊñá‰ª∂ÂêçË∂ÖËøá255 // ÁßªÂä®Êñá‰ª∂‰ºöÊä•Èîô if (![[NSFileManager defaultManager] moveItemAtURL:location toURL:self.downloadFileURL error:&amp;fileManagerError]) &#123; // Âá∫Èîô‰ºöÂèëÈÄöÁü•ÔºåÂèØ‰ª•ÁõëÂê¨Â§ÑÁêÜ [[NSNotificationCenter defaultCenter] postNotificationName:AFURLSessionDownloadTaskDidFailToMoveFileNotification object:downloadTask userInfo:fileManagerError.userInfo]; &#125; &#125; &#125;&#125; Êàë‰ª¨Êù•ÁúãÁúãAFURLSessionDownloadTaskDidFailToMoveFileNotificationÁöÑÂÆö‰πâAFURLSessionManager.h 1234/** Posted when a session download task encountered an error when moving the temporary download file to a specified destination. */FOUNDATION_EXPORT NSString * const AFURLSessionDownloadTaskDidFailToMoveFileNotification;]]></content>
      <tags>
        <tag>iOSÁü•ËØÜÂ∞èÁªì</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[iOSÁî®CallKitÂÆûÁé∞Êù•ÁîµËØÜÂà´]]></title>
    <url>%2F2018%2F03%2F03%2FiOS%E7%94%A8CallKit%E5%AE%9E%E7%8E%B0%E6%9D%A5%E7%94%B5%E8%AF%86%E5%88%AB%2F</url>
    <content type="text"><![CDATA[ÂâçË®Ä ÊúÄËøëÈúÄË¶ÅÂÆûÁé∞‰∏Ä‰∏™Êñ∞ÈúÄÊ±ÇÔºåÁî®iOS 10Âá∫ÁöÑCallKitÂÆûÁé∞Â∞ÜAPPÁöÑÈÄöËÆØÂΩïÁöÑ‰ø°ÊÅØÂêåÊ≠•Âà∞Á≥ªÁªü‰∏≠ÔºåÂèØ‰ª•‰∏çÊää‰∫∫Âëò‰ø°ÊÅØÂä†Âà∞ÈÄöËÆØÂΩï‰∏≠ÔºåÂÆûÁé∞Êù•ÁîµÂè∑Á†ÅËØÜÂà´„ÄÇËøô‰∏™ÂäüËÉΩÂú®xxÂÆâÂÖ®Âç´Â£´„ÄÅxxÁÆ°ÂÆ∂‰∏≠ÂæàÊó©Â∞±ÂÆûÁé∞‰∫ÜÔºå‰ΩÜÊòØÁΩë‰∏äÁõ∏ÂÖ≥ÁöÑËµÑÊñôËæÉÂ∞ëÔºåËÄå‰∏îÂÆòÊñπÁöÑÊñáÊ°£ÂÜôÁöÑÂ§™ÁÆÄÂçï‰∫ÜÔºåÂæàÂ§öÂùëËøòË¶ÅËá™Â∑±ÂéªÊë∏Á¥¢„ÄÇ‰∫éÊòØËÆ∞ÂΩï‰∏Ä‰∏ãÂíåÂêÑ‰ΩçÂàÜ‰∫´ÔºåÂ¶ÇÊúâÈîôËØØ‰πãÂ§ÑËØ∑ÂêÑ‰ΩçÊåáÂá∫ÔºÅ PS: ÂÖàËØ¥‰∏™È¢òÂ§ñËØùÂêßÔºåCallKitÂäüËÉΩÂú®iOS 10ÁöÑÊó∂ÂÄôËøò‰∏çÂ§™Á®≥ÂÆöÔºåiOS 10ÂàöÂá∫Êù•ÁöÑÊó∂ÂÄô‰∏∫‰∫Ü‰ΩìÈ™åÈ™öÊâ∞Êã¶Êà™ÂäüËÉΩÔºåÊâãË¥±Ë£Ö‰∫Ü‰∏§‰∏™‰∏çÂêåÁöÑÊã¶Êà™APPÔºåÁÑ∂ÂêéÂ∞±ÊÇ≤Ââß‰∫Ü„ÄÇÁõó‰∏ÄÂº†ÁΩë‰∏äÁöÑÂõæÔºö ÁÑ∂ÂêéÂêÑÁßçÈáçÂêØ„ÄÅÈáçË£ÖAPPÈÉΩÊ≤°ÊúâÁî®ÔºåÂÜôÁöÑDemo‰πüË∑ë‰∏çËµ∑Êù•ÔºåÂîØ‰∏ÄÁöÑÂäûÊ≥ïÂè™ÊúâÈáçÁΩÆÁ≥ªÁªü„ÄÇËØ¥Â§ö‰∫ÜÈÉΩÊòØÊ≥™ÔºÅ Êú¨ÊñáÊ∂âÂèäÁöÑDemo„ÄÇ ‰∏Ä„ÄÅCall Directory app extensionÂÆûÁé∞Êù•ÁîµËØÜÂà´„ÄÅÊù•ÁîµÊã¶Êà™ÂäüËÉΩÈúÄË¶Å‰ΩøÁî®CallKitÂΩì‰∏≠ÁöÑCall Directory app extensionÔºåÈ¶ñÂÖàÔºåÈúÄË¶Å‰∫ÜËß£extension„ÄÇÂÖ≥‰∫éextensionÁΩë‰∏äÊúâÂæàÂ§öÊïôÁ®ãÔºåËøôÈáåÂ∞±‰∏çÁªÜËØ¥‰∫Ü„ÄÇÊé®Ëçê‰∏§ÁØáÊñáÁ´†ÔºåËã±ÊñáÂ•ΩÁöÑÊé®ËçêÁúãÂÆòÊñπÊñáÊ°£ÔºåËøòÊúâ‰∏ÄÁØá‰∏≠ÊñáÂçöÂÆ¢„ÄÇ ‰ΩøÁî®Call Directory Extension‰∏ªË¶ÅÈúÄË¶ÅÂíå3‰∏™Á±ªÊâì‰∫§ÈÅìÔºåÂàÜÂà´ÊòØCXCallDirectoryProvider„ÄÅCXCallDirectoryExtensionContext„ÄÅCXCallDirectoryManager„ÄÇ CXCallDirectoryProvider ÂÆòÊñπÊñáÊ°£ÔºöThe principal object for a Call Directory app extension for a host app. Ê≠£Â¶ÇÂÆòÊñπÊñáÊ°£ÊâÄËØ¥ÔºåËøôÊòØCall Directory app extensionÊúÄÈáçË¶ÅÁöÑ‰∏Ä‰∏™Á±ª„ÄÇÁî®Á≥ªÁªüÊ®°ÊùøÊñ∞Âª∫Call Directory Extension‰πãÂêé‰ºöËá™Âä®ÁîüÊàê‰∏Ä‰∏™Á±ªÔºåÁªßÊâøËá™CXCallDirectoryProvider„ÄÇÂÖ•Âè£ÊñπÊ≥ïÔºö123456789// Êúâ‰∏§ÁßçÊÉÖÂÜµÊîπÊñπÊ≥ï‰ºöË¢´Ë∞ÉÁî®// 1.Á¨¨‰∏ÄÊ¨°ÊâìÂºÄËÆæÁΩÆ-ÁîµËØù-Êù•ÁîµÈòªÊ≠¢‰∏éË∫´‰ªΩËØÜÂà´ÂºÄÂÖ≥Êó∂ÔºåÁ≥ªÁªüËá™Âä®Ë∞ÉÁî®// 2.Ë∞ÉÁî®CXCallDirectoryManagerÁöÑreloadExtensionWithIdentifierÊñπÊ≥ï‰ºöË∞ÉÁî®- (void)beginRequestWithExtensionContext:(CXCallDirectoryExtensionContext *)context &#123; context.delegate = self; // Ê∑ªÂä†Âè∑Á†ÅËØÜÂà´‰ø°ÊÅØ‰∏éÂè∑Á†ÅÊã¶Êà™ÂàóË°® [self addIdentificationPhoneNumbersToContext:context]; [context completeRequestWithCompletionHandler:nil];&#125; CXCallDirectoryExtensionContext ÂÆòÊñπÊñáÊ°£ÔºöA programmatic interface for adding identification and blocking entries to a Call Directory app extension.CXCallDirectoryExtensionContext objects are not initialized directly, but are instead passed as arguments to the CXCallDirectoryProvider instance method beginRequestWithExtensionContext:. Â§ßËá¥ÊÑèÊÄùÂ∞±ÊòØËØ¥ÔºåËøôÊòØ‰∏Ä‰∏™‰∏∫Call Directory app extensionÊ∑ªÂä†Âè∑Á†ÅËØÜÂà´„ÄÅÂè∑Á†ÅÊã¶Êà™ÁöÑÂÖ•Âè£„ÄÇCXCallDirectoryExtensionContext‰∏çÈúÄË¶ÅËá™Â∑±ÂàùÂßãÂåñÔºåÂÆÉ‰ºö‰Ωú‰∏∫CXCallDirectoryProviderÁöÑbeginRequestWithExtensionContextÂáΩÊï∞ÁöÑÂèÇÊï∞‰º†ÈÄíÁªô‰ΩøÁî®ËÄÖ„ÄÇÂÆÉÁöÑ‰∏ªË¶ÅÊñπÊ≥ïÊúâ‰∏§‰∏™Ôºö 12345// ËÆæÁΩÆÂè∑Á†ÅËØÜÂà´‰ø°ÊÅØ- (void)addIdentificationEntryWithNextSequentialPhoneNumber:(CXCallDirectoryPhoneNumber)phoneNumber label:(NSString *)label;// ËÆæÁΩÆÂè∑Á†ÅÊã¶Êà™ÂàóË°®- (void)addBlockingEntryWithNextSequentialPhoneNumber:(CXCallDirectoryPhoneNumber)phoneNumber; Âú®ËÆæÁΩÆÊó∂ÂÄôË¶ÅÊ≥®ÊÑèÔºö Âè∑Á†Å‰∏çËÉΩÈáçÂ§çÔºå‰∏çÁÑ∂‰ºöÊä•ÈîôCXErrorCodeCallDirectoryManagerErrorDuplicateEntries Âè∑Á†ÅÂøÖÈ°ªÊåâÁÖßÂçáÂ∫èÂÜôÂÖ•Ôºå‰∏çÁÑ∂‰ºöÊä•ÈîôCXErrorCodeCallDirectoryManagerErrorEntriesOutOfOrder Âè∑Á†ÅÂøÖÈ°ªÊ†ºÂºèÂåñÂêé‰º†ÂÖ•ÔºåÊâãÊú∫Âè∑Á†ÅÂøÖÈ°ªÂä†‰∏äÂõΩÂÆ∂Á†ÅÔºå‰æãÂ¶Ç18012341234Â∞±‰∏çË°åÔºåÈúÄË¶ÅÂä†‰∏ä86ÔºåÊûÑÈÄ†Êàê8618012341234ÔºõÂõ∫ËØùÈúÄË¶ÅÊ†ºÂºè‰∏∫ÔºöÂõΩÂÆ∂Á†Å+Âå∫Âè∑ÔºàÂéªÊéâÁ¨¨‰∏Ä‰∏™0Ôºâ+Âè∑Á†ÅÔºå‰æãÂ¶Ç010-61001234Ê†ºÂºèÂåñ‰πãÂêé‰∏∫Ôºå861061001234„ÄÇÂ¶ÇÊûúÂè∑Á†ÅÊ†ºÂºèÈîôËØØÔºå‰ºöÂØºËá¥ËØÜÂà´‰∏çÂá∫Êù•„ÄÇ ‰∏äÈôêÊï∞ÊçÆÊòØ200‰∏áÔºàÂú®ÂÖ∂ÂÆÉÊñáÁ´†ÈáåÁúãÂà∞ÁöÑÔºåÁÑ∂ÂêéËá™Â∑±ÊµãËØï‰∫Ü‰∏ãÔºåÊûÑÈÄ†‰∫Ü200‰∏áÊù°Êï∞ÊçÆÂÜôÂÖ•ÁöÑÊó∂ÂÄô‰ºöÊä•ÈîôCXErrorCodeCallDirectoryManagerErrorMaximumEntriesExceededÔºå150‰∏áÊù°Êï∞ÊçÆÊòØOKÁöÑÔºåÊâÄ‰ª•Ëøô‰∏™Êï∞ÊçÆ‰∏äÈôê‰∏ÄÂÆöË¶ÅÊ≥®ÊÑè„ÄÇÂÆûÊµãÂÆâË£Ö‰∫ÜXXÂÆâÂÖ®Âç´Â£´„ÄÅXXÁÆ°ÂÆ∂ÂÆûÁé∞È™öÊâ∞ÁîµËØùÊã¶Êà™Áî®‰∫Ü3‰∏™extensionÔºåÂèØËÉΩÊï∞ÊçÆÈáèÂ§™Â§ßÂ∞±ÊòØ‰∏Ä‰∏™ÂéüÂõ†„ÄÇÔºâ Âú®Áî®Êà∑Á¨¨‰∏ÄÊ¨°ÊâìÂºÄËÆæÁΩÆÊó∂Ôºå‰ºöË∞ÉÁî®beginRequestWithExtensionContextÔºåËøôÊó∂ÂÄô‰∏çÂÆúÂÜôÂ§™Â§öÊï∞ÊçÆÔºå‰∏çÁÑ∂‰ºöÂç°Âú®ËÆæÁΩÆÈÇ£ÈáåËΩ¨ÂúàÔºåÁî®Êà∑‰ΩìÈ™åÂæàÂ∑Æ„ÄÇÂèØ‰ª•ÂÖàÂÜôÈÉ®ÂàÜÊï∞ÊçÆÔºåÁÑ∂ÂêéÂõûÂà∞‰∏ªAPP‰∫ÜË∞ÉÁî®reloadExtensionWithIdentifierÂéªÂà∑Êñ∞„ÄÇ CXCallDirectoryManager ÂÆòÊñπÊñáÊ°£ÔºöThe programmatic interface to an object that manages a Call Directory app extension. CXCallDirectoryManager‰∏ªË¶Å‰ΩúÁî®ÊòØÁÆ°ÁêÜCall Directory app extension„ÄÇÊúâ‰∏§‰∏™ÊñπÊ≥ïÔºö 123456// ÈáçÊñ∞ËÆæÁΩÆÂè∑Á†ÅËØÜÂà´„ÄÅÁîµËØùÊã¶Êà™ÂàóË°®// Ë∞ÉÁî®ËØ•ÊñπÊ≥ïÂêé‰ºöÈáçÁΩÆ‰πãÂâçËÆæÁΩÆÁöÑÂàóË°®ÔºåÁÑ∂ÂêéË∞ÉÁî®beginRequestWithExtensionContext:- (void)reloadExtensionWithIdentifier:(NSString *)identifier completionHandler:(nullable void (^)(NSError *_Nullable error))completion;// Ëé∑ÂèñextensionÊòØÂê¶ÂèØÁî®ÔºåÈúÄË¶ÅÂú®‚ÄúËÆæÁΩÆ-ÁîµËØù-Êù•ÁîµÈòªÊ≠¢‰∏éË∫´‰ªΩËØÜÂà´"‰∏≠ÂºÄÂêØÊùÉÈôê- (void)getEnabledStatusForExtensionWithIdentifier:(NSString *)identifier completionHandler:(void (^)(CXCallDirectoryEnabledStatus enabledStatus, NSError *_Nullable error))completion; ‰∫å„ÄÅÂÆûÊàò ÂÖà‰∏äDemoÂú∞ÂùÄ„ÄÇ‰∏ãÈù¢‰ºö‰∏ÄÊ≠•Ê≠•ËÆ≤Ëß£„ÄÇ ÂàõÂª∫extensionÊñ∞Âª∫‰∏Ä‰∏™TargetÔºàFile-New-TargetÔºâ„ÄÇ ‰ºöËá™Âä®Âª∫Á´ã‰∏Ä‰∏™ÁõÆÂΩïÔºåÈªòËÆ§Êúâ‰∏â‰∏™Êñá‰ª∂„ÄÇÂú®.mÊñá‰ª∂‰∏≠ÊúâÁ≥ªÁªüÁªôÂá∫ÁöÑÁ§∫‰æã‰ª£Á†Å Êàë‰ª¨Êù•ÁúãÁúãÁ≥ªÁªüÁöÑÊ®°Êùø‰ª£Á†ÅÔºåÈ¶ñÂÖàÊòØÂÖ•Âè£ÂáΩÊï∞ 1234567891011121314- (void)beginRequestWithExtensionContext:(CXCallDirectoryExtensionContext *)context &#123; context.delegate = self; if (context.isIncremental) &#123; [self addOrRemoveIncrementalBlockingPhoneNumbersToContext:context]; [self addOrRemoveIncrementalIdentificationPhoneNumbersToContext:context]; &#125; else &#123; [self addAllBlockingPhoneNumbersToContext:context]; [self addAllIdentificationPhoneNumbersToContext:context]; &#125; [context completeRequestWithCompletionHandler:nil];&#125; CallDirectoryHandlerÊàëÂú®Xcode 9ÁîüÊàêÁöÑ‰ª£Á†ÅÔºåcontext.isIncrementalÊòØiOS 11ÊâçÂ¢ûÂä†ÁöÑÔºåËøòÊúâÊâÄÊúâÁöÑremoveÁöÑÊñπÊ≥ï‰πüÊòØiOS 11ÊâçÊúâÁöÑÔºå‰∏∫‰∫ÜÈÄÇÈÖçiOS 10ÔºåËøòÊòØ‰∏çÊé®Ëçê‰ΩøÁî®„ÄÇÁ≥ªÁªüÊ®°Êùø‰ª£Á†ÅÂ§ßËá¥ÈÄªËæëÂ∞±ÊòØÔºåÂÖàÊ∑ªÂä†Âè∑Á†ÅËØÜÂà´„ÄÅÂè∑Á†ÅÊã¶Êà™ËÆ∞ÂΩïÔºåÊ∑ªÂä†ÂÆåÊàêÂêéË∞ÉÁî®completeRequestWithCompletionHandler:ÂÆåÊàêÊï¥‰∏™ËøáÁ®ã„ÄÇÁî±‰∫éÂè∑Á†ÅÊã¶Êà™ÊØîËæÉÁÆÄÂçïÔºåÂè™ÊòØÂÜôÂÖ•‰∏Ä‰∏™Âè∑Á†ÅÁöÑÊï∞ÁªÑÔºåÊú¨ÊñáÂ∞±‰ª•Âè∑Á†ÅËØÜÂà´‰∏∫‰æãÔºåÂè∑Á†ÅËØÜÂà´ÊñπÊ≥ïÁ≥ªÁªüÊ®°ÊùøËøô‰πàÂÜôÁöÑÔºö12345678910- (void)addAllIdentificationPhoneNumbersToContext:(CXCallDirectoryExtensionContext *)context &#123; CXCallDirectoryPhoneNumber allPhoneNumbers[] = &#123; 8618788888888, 8618885555555 &#125;; NSArray&lt;NSString *&gt; *labels = @[ @"ÈÄÅÈ§êÁîµËØù", @"ËØàÈ™óÁîµËØù" ]; NSUInteger count = (sizeof(allPhoneNumbers) / sizeof(CXCallDirectoryPhoneNumber)); for (NSUInteger i = 0; i &lt; count; i += 1) &#123; CXCallDirectoryPhoneNumber phoneNumber = allPhoneNumbers[i]; NSString *label = labels[i]; [context addIdentificationEntryWithNextSequentialPhoneNumber:phoneNumber label:label]; &#125;&#125; Ëøô‰πàÂ§ö‰ª£Á†ÅÔºåÊ†∏ÂøÉÂ∞±ÊòØ‰∏ÄË°å[context addIdentificationEntryWithNextSequentialPhoneNumber:phoneNumber label:label];,Ê≥®ÊÑèphoneNumberÊòØCXCallDirectoryPhoneNumberÁ±ªÂûãÔºåÂÖ∂ÂÆûÂ∞±ÊòØlong longÁ±ªÂûã„ÄÇÂú®Ëøô‰∏™ÂáΩÊï∞ÈáåÔºåÈúÄË¶ÅÊääÈúÄË¶ÅËØÜÂà´ÁöÑÂè∑Á†ÅÂíåËØÜÂà´‰ø°ÊÅØÔºå‰∏ÄÊù°‰∏ÄÊù°ÁöÑÂÜôÂÖ• Ê£ÄÊü•ÊéàÊùÉÂºÄÂêØextensionÂäüËÉΩÈúÄË¶ÅÂú®‚ÄúËÆæÁΩÆ-ÁîµËØù-Êù•ÁîµÈòªÊ≠¢‰∏éË∫´‰ªΩËØÜÂà´‚Äù‰∏≠ÂºÄÂêØÔºåÊàë‰ª¨Âú®ÂÜôÂÖ•Êï∞ÊçÆÊó∂Á¨¨‰∏ÄÊ≠•ÊòØÂºïÂØºÁî®Êà∑ÁªôÊàë‰ª¨ÁöÑextensionÊéàÊùÉ„ÄÇ123456789 CXCallDirectoryManager *manager = [CXCallDirectoryManager sharedInstance]; [manage getEnabledStatusForExtensionWithIdentifier:self.externsionIdentifier completionHandler:^(CXCallDirectoryEnabledStatus enabledStatus, NSError * _Nullable error) &#123; // Ê†πÊçÆerrorÔºåenabledStatusÂà§Êñ≠ÊéàÊùÉÊÉÖÂÜµ// error == nil &amp;&amp; enabledStatus == CXCallDirectoryEnabledStatusEnabled ËØ¥ÊòéÂèØÁî®// error ËßÅ CXErrorCodeCallDirectoryManagerError// enabledStatus ËßÅ CXCallDirectoryEnabledStatus &#125;]; ÂÜôÂÖ•Êï∞ÊçÆÁî®Êà∑Âú®ËÆæÁΩÆÂºÄÂêØÂêéÔºåË∞ÉÁî®reloadExtensionWithIdentifierÂç≥ÂèØËß¶ÂèëCallDirectoryHandlerÊõ¥Êñ∞Êï∞ÊçÆÈÄªËæë„ÄÇ 1234CXCallDirectoryManager *manager = [CXCallDirectoryManager sharedInstance];[manager reloadExtensionWithIdentifier:self.externsionIdentifier completionHandler:^(NSError * _Nullable error) &#123; // error ËßÅ CXErrorCodeCallDirectoryManagerError&#125;]; È™åËØÅÊé•‰∏ãÊù•Âú®ÁúüÊú∫‰∏ãË∑ë‰∏ãÔºà‰∏ÄÂÆöË¶ÅÂú®Êèí‰∫ÜÁîµËØùÂç°ÁöÑiPhone‰∏äË∞ÉËØïÔºåÊ®°ÊãüÂô®‰∏çË°åÔºÅÔºâÔºåÂÜôÂÖ•ÊàêÂäüÂêéÔºåÊâìÂºÄÁîµËØùÔºåÊã®Âè∑18788888888ÔºåÊèêÁ§∫‚ÄùÈÄÅÈ§êÁîµËØù‚Äù„ÄÇËØ¥ÊòéÂÜôÂÖ•ÊàêÂäüÔºÅ ‰∏â„ÄÅextensionÂíåcontaining appÊï∞ÊçÆÂÖ±‰∫´‰∏äÈù¢ÁöÑÊ≠•È™§‰∏≠ÔºåÂè∑Á†Å‰ø°ÊÅØÊòØÂÜôÊ≠ªÂú®‰ª£Á†Å‰∏≠ÁöÑÔºåÂú®ÂÆûÈôÖÂ∫îÁî®‰∏≠Ëøô‰∫õÂè∑Á†Å‰ø°ÊÅØËÇØÂÆö‰∏çÊòØÂÜôÊ≠ªÁöÑÔºå‰∏ÄËà¨ÈúÄË¶Å‰ªéÊúçÂä°Âô®Ëé∑Âèñ„ÄÇËøôÂ∞±ÈúÄË¶ÅÊàë‰ª¨ÁöÑAPP‰∏éextensionËøõË°åÈÄö‰ø°ÔºåÈúÄË¶ÅÁî®Âà∞APP GroupsÔºåÊÄé‰πàÁî®ÁΩë‰∏äÊúâÂæàÂ§öÊñáÁ´†‰∫ÜÔºåÊàëÂ∞±‰∏çÂ§öËØ¥‰∫ÜÔºåÊé®Ëçê‰∏ÄÁØá„ÄÇÂÖ∂ÂÆûÊú¨Ë¥®Â∞±ÊòØÈÄöËøáAPP GroupsÔºåÂºÄËæü‰∏ÄÁâáÁ©∫Èó¥ÔºåextensionÂíåcontaining appÈÉΩÂèØ‰ª•ËÆøÈóÆÔºåÁÑ∂ÂêéÊàë‰ª¨ÁöÑAPPÂ∞±ÂèØ‰ª•ÈÄöËøáNSUserDefaults„ÄÅÊñá‰ª∂„ÄÅÊï∞ÊçÆÂ∫ìÁ≠âÊñπÂºèÂÖ±‰∫´Êï∞ÊçÆÁªôextension‰∫Ü„ÄÇÂâçÊúüÊàë‰ΩøÁî®ËøáNSUserDefaultsÔºåÊïàÁéáÂæà‰ΩéÔºåÂ§ßÊ¶ÇÂú®5‰∏áÊï∞ÊçÆÁöÑÊó∂ÂÄôÂ∞±ÁàÜÂÜÖÂ≠ò‰∫ÜÔºå‰ΩøÁî®extension‰∏ÄÂÆöË¶ÅÊ≥®ÊÑèÂÜÖÂ≠òÔºå‰∏çÁÑ∂ÂæàÂÆπÊòìË¢´Á≥ªÁªüÂπ≤ÊéâÔºåÊâÄ‰ª•‰∏çÊé®Ëçê‰ΩøÁî®ËøôÁßçÊñπÂºè„ÄÇDemo‰∏≠ÈááÁî®ÁöÑÊòØËØªÂÜôÊñá‰ª∂ÁöÑÊñπÂºèÔºåÂ§ßËá¥ÊÄùË∑ØÔºàÂÖ∑‰ΩìÂÆûÁé∞ÁúãDemoÔºâÔºö Âú®APP‰∏≠ÊääÊï∞ÊçÆÂ∫èÂàóÂåñ‰πãÂêéÂÜôÂà∞‰∏Ä‰∏™Êñá‰ª∂‰∏≠ Âú®extension‰∏≠ËØªÂèñËøô‰∏™Êñá‰ª∂ÔºåËØªÂèñ‰∏ÄË°åÔºåË∞ÉÁî®‰∏ÄÊ¨°addIdentificationEntryWithNextSequentialPhoneNumberÔºåÁÑ∂ÂêéÂèäÊó∂ÈáäÊîæËøôÁßçÊñπÂºèÁêÜËÆ∫‰∏äÊòØÂèØ‰ª•ËææÂà∞ÊúÄÂ§ßÈôêÂà∂200wÊù°ÁöÑÔºàÂÆûÈôÖÊµãËØï150‰∏áÊ≤°ÊúâÈóÆÈ¢òÔºâ„ÄÇ Ëé∑ÂèñAPP GroupsÊñá‰ª∂Ë∑ØÂæÑ1234NSFileManager *fileManager = [NSFileManager defaultManager]; NSURL *containerURL = [[NSFileManager defaultManager] containerURLForSecurityApplicationGroupIdentifier:self.groupIdentifier]; containerURL = [containerURL URLByAppendingPathComponent:@"CallDirectoryData"]; NSString* filePath = containerURL.path; ËøõÂ∫¶ÁõëÊéßÂú®xxÂÆâÂÖ®Âç´Â£´‰∏≠ÔºåÂºÄÂêØÈ™öÊâ∞ÁîµËØùÊã¶Êà™ÂäüËÉΩÊúâ‰∏Ä‰∏™ËøõÂ∫¶Êù°ÔºåÈùûÂ∏∏ÁöÑÁõ¥ËßÇ„ÄÇ‰ΩÜÊòØÂú®extension‰∏≠ÊòØÊ≤°Ê≥ïÊõ¥Êñ∞UIÁöÑÔºåÊúâ‰∏ÄÁßçÂÆûÁé∞ÊñπÂºèÔºåÂèØ‰ª•Áî®ÂºÄÊ∫êÊ°ÜÊû∂MMWormholeÊù•ÂÆûÁé∞APP‰∏éextensionÈÄö‰ø°ÔºåÁÑ∂ÂêéÊääËøõÂ∫¶‰ªéextension‰º†Âà∞APP‰∏≠ÔºåÂú®APP‰∏≠Êõ¥Êñ∞ËøõÂ∫¶Êù°„ÄÇÁêÜËÆ∫‰∏äËØ•ÊñπÊ°àÊòØÂèØË°åÁöÑÔºåÊÑüÂÖ¥Ë∂£ÁöÑÂêåÂ≠¶ÂèØ‰ª•Â∞ùËØï‰∏ã„ÄÇ ÂÖ≥‰∫é‰∏äÊû∂Âú®Âä†‰∏äCallKitÁ¨¨‰∏ÄÊ¨°‰∏äÊû∂Êó∂ÔºåÊî∂Âà∞‰∫ÜËãπÊûúÁöÑÊãí‰ø°ÔºåËØ¥CallKitÂú®‰∏≠ÂõΩÂå∫Ë¢´Á¶ÅÊ≠¢‰∫Ü„ÄÇ ÂêéÊù•ËßÇÂØü‰∫Ü‰∏ãxxÂÆâÂÖ®Âç´Â£´‰∏ÄÁõ¥Âú®Ê≠£Â∏∏Êõ¥Êñ∞ÔºåÁåúÊÉ≥ËãπÊûúÂè™ÊòØÁ¶ÅÊ≠¢‰∫ÜCallKitÂÖ≥‰∫éVOIPËøôÈÉ®ÂàÜÂäüËÉΩ„ÄÇÈÅáÂà∞ËãπÊûúÁöÑÊãí‰ø°‰∏çË¶ÅÊÖåÔºåÂΩïÂà∂‰∏Ä‰∏™Êù•ÁîµËØÜÂà´ÁöÑÂäüËÉΩÊºîÁ§∫ËßÜÈ¢ëÔºåÊîæÂà∞YoutubeÔºåÁÑ∂ÂêéÂú®Â§áÊ≥®ÈáåÈù¢Ëß£Èáä‰∏Ä‰∏ãÔºåÂ∞±ÂèØ‰ª•ÈÄöËøáÂÆ°Ê†∏‰∫Ü„ÄÇ Áªô‰∏Ä‰∏™ÂÆ°Ê†∏Â§áÊ≥®Ê®°ÊùøÔºö ÂÖ≥‰∫éCallKitÔºåÊàë‰ª¨ÈÅµÂÆà‰∏≠ÂõΩÁöÑÊ≥ïÂæãÔºåÊ≤°Êúâ‰ΩøÁî®VOIPÔºåÊàë‰ª¨‰ªÖ‰ΩøÁî®‰∫ÜCall Directory„ÄÇÊàë‰ª¨Â∫îÁî®ÂÜÖÊúâ‰∏Ä‰∏™ÂÖ¨Âè∏ÂÜÖÈÉ®ÈÄöËÆØÂΩïÔºå‰∏∫‰∫ÜÂ¢ûÂä†Áî®Êà∑ÂëòÂ∑•Ê≤üÈÄöÊïàÁéáÔºåÊàë‰ª¨Âú®ÁîµËØùÈ°µÈù¢Ëá™Âä®ËØÜÂà´ÂÜÖÈÉ®ÈÄöËÆØÂΩïÁöÑ‰∫∫Âëò ÔºåÂπ∂Â±ïÁ§∫ÂßìÂêç‰∏éÂ≤ó‰Ωç„ÄÇÊàë‰ª¨ÂΩïÂà∂‰∫Ü‰∏Ä‰∏™ÊºîÁ§∫ËßÜÈ¢ëÔºöËßÜÈ¢ëÂú∞ÂùÄ ÂèÇËÄÉÈìæÊé•https://developer.apple.com/documentation/callkithttps://developer.apple.com/videos/play/wwdc2016/230/https://colin1994.github.io/2016/06/17/Call-Directory-Extension-Study/https://yunissong.github.io/2017/03/29/CallKit/http://www.jianshu.com/p/7f88cbe7948chttps://www.raywenderlich.com/150015/callkit-tutorial-ios]]></content>
      <tags>
        <tag>iOSÁü•ËØÜÂ∞èÁªì</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[iOSÁöÑCookieÁÆ°ÁêÜ]]></title>
    <url>%2F2018%2F03%2F01%2FiOS%E7%9A%84Cookie%E7%AE%A1%E7%90%86%2F</url>
    <content type="text"><![CDATA[ËÉåÊôØÊúÄËøëÊúâ‰∏Ä‰∏™ÈúÄÊ±ÇÔºåÈúÄË¶ÅÊâãÂä®ÁöÑÂéªÁºìÂ≠òcookieÔºåÁÑ∂ÂêéÂêØÂä®APPÁöÑÊó∂ÂÄôËÆæÁΩÆÁºìÂ≠òËøáÁöÑcookieÔºåÈ°πÁõÆÁΩëÁªúÊ°ÜÊû∂Áî®ÁöÑÊòØAfnetworking„ÄÇ Ëß£ÂÜ≥ÊñπÊ°àÁøª‰∫Ü‰∏ãAfnetworkingÁöÑissueÔºåÂèëÁé∞‰∫Ü‰ΩúËÄÖÂØπ‰∫écookieÁöÑËß£Èáä AfnetworkingÊ≤°ÊúâÂØπCookieÂÅöËøáÂ§ÑÁêÜ ‰ΩøÁî®NSHTTPCookieStorageÂç≥ÂèØÂÆûÁé∞cookieÁöÑÁÆ°ÁêÜ„ÄÇ‰∏ä‰ª£Á†ÅÔºÅ Â≠òcookie 1234NSArray *cookies = [[NSHTTPCookieStorage sharedHTTPCookieStorage] cookiesForURL:[NSURL URLWithString:url]];NSData *data = [NSKeyedArchiver archivedDataWithRootObject:cookies];NSUserDefaults *userDefaults = [NSUserDefaults standardUserDefaults];[userDefaults setObject:data forKey:@&quot;cookie&quot;]; ËÆæÁΩÆcookie 12345678NSData *cookiesdata = [[NSUserDefaults standardUserDefaults] objectForKey:@&quot;m3cookie&quot;]; if([cookiesdata length]) &#123; NSArray *cookies = [NSKeyedUnarchiver unarchiveObjectWithData:cookiesdata]; NSHTTPCookie *cookie; for (cookie in cookies) &#123; [[NSHTTPCookieStorage sharedHTTPCookieStorage] setCookie:cookie]; &#125; &#125; Ê∏ÖÁêÜcookie 12345NSHTTPCookie *cookie;NSHTTPCookieStorage *storage = [NSHTTPCookieStorage sharedHTTPCookieStorage];for (cookie in [storage cookies]) &#123; [storage deleteCookie:cookie];&#125; ÂèÇËÄÉÊñáÁ´†Ôºö NSHTTPCookieStorageÂÆòÊñπÊñáÊ°£Persisting Cookies In An iOS Application?Clear cookies for response in AFNetworking 2]]></content>
      <tags>
        <tag>iOSÁü•ËØÜÂ∞èÁªì</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[imageNamed‰∏éimageWithContentsOfFileÂ∞èÁªì]]></title>
    <url>%2F2018%2F03%2F01%2FimageNamed%E4%B8%8EimageWithContentsOfFile%E5%B0%8F%E7%BB%93%2F</url>
    <content type="text"><![CDATA[Êú¨Êñá‰∏ªË¶ÅËÆ≤imageNamed‰∏éimageWithContentsOfFileÁöÑÂ∑ÆÂºÇÔºåÈúÄË¶ÅÊ≥®ÊÑèÁöÑÁÇπÔºå‰∏éÂÆûÊàò‰∏≠ÈÅáÂà∞ÁöÑÂùë„ÄÇ Â•Ω‰πÖÊ≤°ÂÜôËøáÂçöÂÆ¢‰∫ÜÔºå‰ªÄ‰πàÂ∑•‰ΩúÂ§™ÂøôÔºåÂä†Áè≠Â§™ÊôöÊàëÂ∞±‰∏çËØ¥‰∫ÜÔºåÈÉΩÊÄ™Ëá™Â∑±Â§™ÊáíüòÇÔºåÊó∂Èó¥ÈÉΩÊòØÊå§Âá∫Êù•ÁöÑ„ÄÇÁúãÁùÄÂêÑ‰ΩçÂ§ßÁâõÂÜôÁöÑÊñáÁ´†ÔºåÁÆÄÁõ¥ËøáÁòæÔºåÂ∏åÊúõÊúâ‰∏ÄÂ§©Ëá™Â∑±‰πüËÉΩÂÜôÂá∫Ëøô‰πàÈ´òË¥®Èáè„ÄÅÂπ≤Ë¥ßÂØÜÈõÜÁöÑÊñáÁ´†ÔºåÂÖà‰ªéÁÆÄÂçïÁöÑÂÅöËµ∑Âêß„ÄÇ ‰ªéÂ∑ÆÂºÇËØ¥Ëµ∑‰ªéÁ£ÅÁõòÂä†ËΩΩÂõæÁâáÔºåUIImage‰∏ªË¶ÅÊèê‰æõ‰∫Ü‰∏§ÁßçÊñπÂºèÔºö +(UIImage )imageNamed:(NSString )name;+(UIImage )imageWithContentsOfFile:(NSString )path; ÂÖ≥‰∫éËøô‰∏§ÁßçÊñπÊ≥ïÁöÑ‰ΩøÁî®Êó∂Êú∫ÔºåËãπÊûúÂÆòÊñπÊñáÊ°£ÊèèËø∞Â¶Ç‰∏ãÔºö Use the imageNamed:inBundle:compatibleWithTraitCollection: method (or the imageNamed: method) to create an image from an image asset or image file located in your app‚Äôs main bundle (or some other known bundle). Because these methods cache the image data automatically, they are especially recommended for images that you use frequently.Use the imageWithContentsOfFile: or initWithContentsOfFile: method to create an image object where the initial data is not in a bundle. These methods load the image data from disk each time, so you should not use them to load the same image repeatedly. ‰πüÂ∞±ÊòØËØ¥ÔºåimageNamed:Á¨¨‰∏ÄÊ¨°Âä†ËΩΩÂõæÁâáÊó∂‰ºöÁºìÂ≠òÂõæÁâáÂà∞ÂÜÖÂ≠òÔºåÈÄÇÂêà‰ΩøÁî®È¢ëÁπÅÁöÑÂõæÁâáÔºåimageWithContentsOfFile:‰∏ç‰ºöÊääÂõæÁâáÁºìÂ≠òÂà∞ÂÜÖÂ≠òÔºåÊØèÊ¨°Ë∞ÉÁî®ÈÉΩË¶ÅÈáçÊñ∞‰ªéÁ£ÅÁõòÂä†ËΩΩ‰∏ÄÊ¨°„ÄÇÂú®ÂÆûÈôÖ‰ΩøÁî®‰∏≠Êàë‰ª¨Ë¶ÅÊ†πÊçÆ‰∏öÂä°Êù•Âà§Êñ≠Ë∞ÉÁî®ÂÖ∑‰ΩìÁöÑÊñπÊ≥ïÔºåÊù•ÊúÄ‰ºòÂåñÂÜÖÂ≠ò‰∏éÊÄßËÉΩ„ÄÇ‰∏æ‰∏™‰æãÂ≠êÔºö ÁôªÈôÜËÉåÊôØÂõæÔºåÂè™‰ºöÂú®Áî®Êà∑ÁôªÈôÜÁöÑÊó∂ÂÄô‰ΩøÁî®ÔºåËÄå‰∏îÂõæÁâáËæÉÂ§ßÔºåÂ∞±Âª∫ËÆÆÁî®imageWithContentsOfFile:Âä†ËΩΩÔºõ Â∫ïÂØºËà™ÂõæÊ†áÔºåÂõæÊ†áËæÉÂ∞èÔºå‰ΩøÁî®È¢ëÁπÅÔºåÂ∞±Âª∫ËÆÆ‰ΩøÁî®imageNamed:Âä†ËΩΩÔºõ imageNamed:ÊñπÊ≥ïËøòÊúâ‰∏™ÈôêÂà∂ÔºåÂÆÉÊòØÂú®main bundleÈáåÊâæÂõæÁâáÔºåÂ¶ÇÊûúÂõæÁâáÊîæÂú®Images.xcassetsÊàñËÄÖÁõ¥Êé•ÊääÂõæÁâáÊñπÂú®Â∑•Á®ãÈáåÔºåÂèÇÊï∞Áõ¥Êé•‰º†ÂõæÁâáÂêçÂèØ‰ª•ÊâæÂà∞„ÄÇÂÉèÊàëÂè∏ÁöÑÂõæÁâáÊòØÊîæÂú®ÂçïÁã¨Âª∫Á´ãÁöÑbundleÈáåÔºåÂ¶ÇÊûúË¶ÅÁî®imageNamed:Âä†ËΩΩÁöÑËØùÊñá‰ª∂ÂêçÂâçÈù¢Â∞±Ë¶ÅÂä†‰∏äbundleÂêçÔºåÂÉèËøôÊ†∑a.bundle/b.png„ÄÇ Â±èÂπïÈÄÇÈÖçÈóÆÈ¢òiOSÁöÑÂõæÁâáÊñá‰ª∂ÈúÄË¶ÅÊèê‰æõ3ÁßçÂ∞∫ÂØ∏ÁöÑ1x„ÄÅ2x„ÄÅ3xÔºåÊ†πÊçÆ‰∏çÂêåÁöÑÂ±èÂπïÂ∞∫ÂØ∏Êàë‰ª¨ÈúÄË¶ÅÂä†ËΩΩ‰∏çÂêåÁöÑÂõæÁâáÔºåÂÖ≥‰∫é‰∏çÂêåÂ±èÂπïÁöÑÂõæÁâáÂä†ËΩΩÔºåËãπÊûúÂ∑≤ÁªèÂ∏ÆÊàë‰ª¨Â∞ÅË£ÖÂ•Ω‰∫ÜÔºåÊàë‰ª¨Âè™ÈúÄË¶ÅÂ∞Ü3‰∏≠Â∞∫ÂØ∏ÁöÑÂõæÁâáÊîæÂà∞Â∑•Á®ã‰∏≠ÔºåÁÑ∂ÂêéË∞ÉÁî®imageNamed:ÊàñËÄÖimageWithContentsOfFile:ÔºåÂÆÉ‰ºöËá™Âä®Ê†πÊçÆÂ±èÂπïÂ∞∫ÂØ∏Êù•Âä†ËΩΩ‰∏çÂêåÁöÑÂõæÁâá„ÄÇÂÖ≥‰∫éimageNamed:ÔºåÂÆòÊñπÊñáÊ°£‰∏≠ÊúâËøô‰πà‰∏ÄÊÆµËÆ®ËÆ∫Ôºö This method looks in the system caches for an image object with the specified name and returns the variant of that image that is best suited for the main screen. imageWithContentsOfFile:ËøòÊ≤°ÊâæÂà∞ÂÆòÊñπÊñáÊ°£ÁöÑËØ¥ÊòéÔºàÂ¶ÇÊûúÂêÑ‰ΩçÁü•ÈÅìÔºåÊ¨¢ËøéÂêÑ‰ΩçÂ§ßÁâõÂú®ËØÑËÆ∫‰∏≠ÊèêÂá∫ÔºâÔºå‰∏çËøáÊàëÊµãËØïËøáÊòØÂèØ‰ª•ÁöÑ„ÄÇ ‰ΩøÁî®imageWithContentsOfFileÁöÑ‰∏Ä‰∏™ÂùëÂú®‰ΩøÁî®imageWithContentsOfFile:Âä†ËΩΩÂõæÁâáÁöÑÊó∂ÂÄôÈÅáÂà∞‰∏Ä‰∏™ÂùëÔºåÂÖà‰∏ä‰ª£Á†ÅÔºö 1234567+ (UIImage *)imageWithName:(NSString *)name type:(NSString *)type inBundle:(NSString *)bundle &#123; NSString *imageBundlePath = [[NSBundle mainBundle] pathForResource:bundle ofType:@&quot;bundle&quot;]; NSBundle *imageBundle = [NSBundle bundleWithPath:imageBundlePath]; NSString *imagePath = [imageBundle pathForResource:name ofType:type]; UIImage *image = [UIImage imageWithContentsOfFile:imagePath]; return image;&#125; ÂæàÁÆÄÂçïÁöÑ‰∏Ä‰∏™ÂáΩÊï∞ÔºåÂ∞±ÊòØËé∑ÂèñbundleÂÖ®Ë∑ØÂæÑÔºåÁÑ∂ÂêéÂÜçËé∑ÂèñÂà∞bundleÈáåÂõæÁâáÁöÑÂÖ®Ë∑ØÂæÑÔºåÁÑ∂ÂêéË∞ÉÁî®imageWithContentsOfFile:Âä†ËΩΩÂõæÁâá„ÄÇÂú®‰ΩøÁî®ÁöÑÊó∂ÂÄô‰πüÂæàÊ≠£Â∏∏Ôºå‰ΩÜÊòØÊúâ‰∏ÄÂ§©ÂèëÁé∞ÊüêÂº†ÂõæÂä†ËΩΩ‰∏çÂá∫Êù•‰∫Ü„ÄÇÊ£ÄÊü•ËµÑÊ∫êÊñá‰ª∂ÔºåÂè™Êúâ2xÁöÑÂõæÔºàÂèàÊòØ‰∏Ä‰∏™ÂÅ∑ÊáíÁöÑÁ®ãÂ∫èÂëò„ÄÇ„ÄÇ„ÄÇÂæà‰∏çÂª∫ËÆÆËøô‰πàÁé©ÔºåËôΩÁÑ∂Âè™Êúâ2xÁöÑÂõæÔºåÂú®ÊâÄÊúâÂ±èÂπïÈÉΩËÉΩÊòæÁ§∫Ôºå‰ΩÜÊòØ‰ºöÈÄ†ÊàêÂõæÁâáÁöÑÂéãÁº©‰∏éÊîæÂ§ßÔºåÊØè‰∏™ÁªÜËäÇÈÉΩÂæàÈáçË¶ÅÔºÅÔºÅÔºÅÔºâÔºåÂ¶ÇÊûúÂä†‰∏ä1xÁöÑÂõæÂ∞±ÂèØ‰ª•Âä†ËΩΩÂá∫Êù•‰∫Ü„ÄÇÁªèËøáË∞ÉËØïÂèëÁé∞ÈóÆÈ¢òÂ∞±Âá∫Âú®pathForResource:ofType‰∏äÔºåËøô‰∏™ÂáΩÊï∞ÊòØÁ≤æÁ°ÆÂåπÈÖçË∞ÉÁî®ËÄÖËæìÂÖ•ÁöÑÊñá‰ª∂ÂêçÔºå‰∏ç‰ºöËá™Âä®ËØÜÂà´Êñá‰ª∂ÂêçÂêéÈù¢ÁöÑ@2x„ÄÇ‰øÆÊîπÂêéÁöÑ‰ª£Á†ÅÔºö 12345678+ (UIImage *)imageWithName:(NSString *)name type:(NSString *)type inBundle:(NSString *)bundle &#123; NSString *imageBundlePath = [[NSBundle mainBundle] pathForResource:bundle ofType:@&quot;bundle&quot;]; NSBundle *imageBundle = [NSBundle bundleWithPath:imageBundlePath]; NSString *imageFullName = [name stringByAppendingPathExtension:type]; NSString *imagePath = [[imageBundle resourcePath] stringByAppendingPathComponent:imageFullName]; UIImage *image = [UIImage imageWithContentsOfFile:imagePath]; return image;&#125;]]></content>
      <tags>
        <tag>iOSÁü•ËØÜÂ∞èÁªì</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ê≠£ÂàôË°®ËææÂºèÁ¨îËÆ∞]]></title>
    <url>%2F2016%2F11%2F20%2F%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[Ê≠£ÂàôË°®ËææÂºèÔºàregular expressionÔºâÊèèËø∞‰∫Ü‰∏ÄÁßçÂ≠óÁ¨¶‰∏≤ÂåπÈÖçÁöÑÊ®°ÂºèÔºåÂèØ‰ª•Áî®Êù•Ê£ÄÊü•‰∏Ä‰∏™‰∏≤ÊòØÂê¶Âê´ÊúâÊüêÁßçÂ≠ê‰∏≤„ÄÅÂ∞ÜÂåπÈÖçÁöÑÂ≠ó‰∏≤ÂÅöÊõøÊç¢ÊàñËÄÖ‰ªéÊüê‰∏™‰∏≤‰∏≠ÂèñÂá∫Á¨¶ÂêàÊüê‰∏™Êù°‰ª∂ÁöÑÂ≠ó‰∏≤Á≠â„ÄÇ Ê≠£ÂàôË°®ËææÂºèÂú®Á∫øÊµãËØïÔºöhttp://www.regexpal.com/ ÂÖÉÂ≠óÁ¨¶Â∏∏Áî®ÂÖÉÂ≠óÁ¨¶Ôºö ‰ª£Á†Å ËØ¥Êòé . ÂåπÈÖçÈô§Êç¢Ë°åÁ¨¶‰ª•Â§ñÁöÑ‰ªªÊÑèÂ≠óÁ¨¶ \w ÂåπÈÖçÂ≠óÊØçÊàñÊï∞Â≠óÊàñ‰∏ãÂàíÁ∫øÊàñÊ±âÂ≠ó \d ÂåπÈÖçÊï∞Â≠ó \s ÂåπÈÖçÁ©∫Ê†º \b ÂåπÈÖçÂçïËØçÁöÑÂºÄÂßãÊàñÁªìÊùü ^ ÂåπÈÖçÂ≠óÁ¨¶‰∏≤ÁöÑÂºÄÂßãÔºåÂ¶ÇÊûúÊòØÂ§ÑÁêÜÂ§öË°åÔºåÊÑè‰πâÂèòÊàêË°åÂºÄÂßãÂ§Ñ $ ÂåπÈÖçÂ≠óÁ¨¶‰∏≤ÁöÑÁªìÊùüÔºåÂ¶ÇÊûúÊòØÂ§ÑÁêÜÂ§öË°åÔºåÊÑè‰πâÂèòÊàêË°åÁªìÊùüÂ§Ñ ÈôêÂÆöÁ¨¶Â∏∏Áî®ÈôêÂÆöÁ¨¶Ôºö ‰ª£Á†Å ËØ¥Êòé * *ÂâçÈù¢ÁöÑÂÜÖÂÆπÈáçÂ§ç‰ªªÊÑèÊ¨° + +ÂâçÈù¢ÁöÑÂÜÖÂÆπÈáçÂ§ç‰∏ÄÊ¨°ÊàñËÄÖÂ§öÊ¨° ? ÈáçÂ§çÈõ∂Ê¨°Êàñ‰∏ÄÊ¨° {n} ÈáçÂ§çnÊ¨° {n, } ÈáçÂ§çÊ¨°Êï∞Â§ß‰∫éÁ≠â‰∫én {n,m} ÈáçÂ§çÊ¨°Êï∞Â§ß‰∫éÁ≠â‰∫énÂ∞è‰∫éÁ≠â‰∫ém Â≠óÁ¨¶Á±ª[auiou] ÂåπÈÖç‰ªª‰Ωï‰∏Ä‰∏™Ëã±ÊñáÂÖÉÈü≥Â≠óÊØç[.?!] ÂåπÈÖçÊ†áÁÇπÁ¨¶Âè∑Ôºà. ? !Ôºâ Âèç‰πâ ‰ª£Á†Å ËØ¥Êòé \W ÂåπÈÖç‰ªªÊÑè‰∏çÊòØÂ≠óÊØç„ÄÅÊï∞Â≠ó„ÄÅ‰∏ãÂàíÁ∫ø„ÄÅÊ±âÂ≠óÁöÑÂ≠óÁ¨¶ \S ÂåπÈÖç‰ªªÊÑè‰∏çÊòØÁ©∫ÁôΩÁ¨¶ÁöÑÂ≠óÁ¨¶ \D ÂåπÈÖç‰ªªÊÑèÈùûÊï∞Â≠óÁöÑÂ≠óÁ¨¶ \B ÂåπÈÖç‰∏çÊòØÂçïËØçÂºÄÂ§¥ÊàñÁªìÊùüÁöÑ‰ΩçÁΩÆ [^x] ÂåπÈÖçÈô§‰∫Üx‰ª•Â§ñÁöÑ‰ªªÊÑèÂ≠óÁ¨¶ [^abcd] ÂåπÈÖçÈô§‰∫Üabcd‰ª•Â§ñÁöÑ‰ªªÊÑèÂ≠óÁ¨¶ ÂàÜÁªÑ ‰ª£Á†Å ËØ¥Êòé (exp) ÂåπÈÖçexpÔºåÂπ∂ÊçïËé∑ÊñáÊú¨Âà∞Ëá™Âä®ÂëΩÂêçÁªÑ‰∏≠ (?&lt;name&gt;exp) ÂåπÈÖçexp,Âπ∂ÊçïËé∑ÊñáÊú¨Âà∞ÂêçÁß∞‰∏∫nameÁöÑÁªÑÈáåÔºå‰πüÂèØ‰ª•ÂÜôÊàê(?`name`exp) (?:exp) ÂåπÈÖçexpÔºå‰∏çÊçïËé∑ÂåπÈÖçÁöÑÊñáÊú¨Ôºå‰πü‰∏çÁªôÊ¨°ÂàÜÁªÑÂàÜÈÖçÁªÑÂè∑ (?=exp) ÂåπÈÖçexpÂâçÈù¢ÁöÑ‰ΩçÁΩÆ (?&lt;=exp) ÂåπÈÖçexpÂêéÈù¢ÁöÑ‰ΩçÁΩÆ (?!exp) ÂåπÈÖçÂêéÈù¢Ë∑üÁöÑ‰∏çÊòØexpÁöÑ‰ΩçÁΩÆ (?&lt;!exp) ÂåπÈÖçÂâçÈù¢‰∏çÊòØexpÁöÑ‰ΩçÁΩÆ (?#comment) Ê≥®Èáä Ë¥™Â©™‰∏éÊáíÊÉ∞ÈÄöÂ∏∏ÈáçÂ§çÈôêÂÆöÁ¨¶ÁöÑË°å‰∏∫ÊòØÂåπÈÖçÂ∞ΩÂèØËÉΩÂ§öÁöÑÂ≠óÁ¨¶ÔºåÂú®ÈôêÂÆöÁ¨¶ÂêéÈù¢Âä†?‰Ωø‰πãÊàê‰∏∫ÊÉ∞ÊÄßÈôêÂÆöÁ¨¶Ôºå‰æãÂ¶Ç*?ÁöÑÂê´‰πâ‰∏∫ÈáçÂ§ç‰ªªÊÑèÊ¨°Êï∞Ôºå‰ΩÜÊòØÂ∞ΩÂèØËÉΩÂ∞ë]]></content>
      <tags>
        <tag>ÂÖ∂ÂÆÉ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[GolangÁºñÁ†ÅËßÑËåÉ]]></title>
    <url>%2F2016%2F11%2F20%2FGolang%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83%2F</url>
    <content type="text"><![CDATA[gofmt Â§ßÈÉ®ÂàÜÁöÑÊ†ºÂºèÈóÆÈ¢òÂèØ‰ª•ÈÄöËøágofmtËß£ÂÜ≥ÔºågofmtËá™Âä®Ê†ºÂºèÂåñ‰ª£Á†ÅÔºå‰øùËØÅÊâÄÊúâÁöÑgo‰ª£Á†Å‰∏éÂÆòÊñπÊé®ËçêÁöÑÊ†ºÂºè‰øùÊåÅ‰∏ÄËá¥Ôºå‰∫éÊòØÊâÄÊúâÊ†ºÂºèÊúâÂÖ≥ÈóÆÈ¢òÔºåÈÉΩ‰ª•gofmtÁöÑÁªìÊûú‰∏∫ÂáÜ„ÄÇ Ë°åÈïø ‰∏ÄË°åÊúÄÈïø‰∏çË∂ÖËøá80‰∏™Â≠óÁ¨¶ÔºåË∂ÖËøáÁöÑ‰ΩøÁî®Êç¢Ë°åÂ±ïÁ§∫ÔºåÂ∞ΩÈáè‰øùÊåÅÊ†ºÂºè‰ºòÈõÖ„ÄÇ Ê≥®Èáä Âú®ÁºñÁ†ÅÈò∂ÊÆµÂ∫îËØ•ÂêåÊ≠•ÂÜôÂ•ΩÂèòÈáè„ÄÅÂáΩÊï∞„ÄÅÂåÖÁöÑÊ≥®ÈáäÔºåÊúÄÂêéÂèØ‰ª•Âà©Áî®godocÂØºÂá∫ÊñáÊ°£„ÄÇÊ≥®ÈáäÂøÖÈ°ªÊòØÂÆåÊï¥ÁöÑÂè•Â≠êÔºåÂè•Â≠êÁöÑÁªìÂ∞æÂ∫îËØ•Áî®Âè•Âè∑‰Ωú‰∏∫ÁªìÂ∞æÔºàËã±ÊñáÂè•Âè∑Ôºâ„ÄÇÊ≥®ÈáäÊé®ËçêÁî®Ëã±ÊñáÔºåÂèØ‰ª•Âú®ÂÜô‰ª£Á†ÅËøáÁ®ã‰∏≠ÈîªÁÇºËã±ÊñáÁöÑÈòÖËØªÂíå‰π¶ÂÜôËÉΩÂäõ„ÄÇËÄå‰∏îÁî®Ëã±Êñá‰∏ç‰ºöÂá∫Áé∞ÂêÑÁßçÁºñÁ†ÅÁöÑÈóÆÈ¢ò„ÄÇÊØè‰∏™ÂåÖÈÉΩÂ∫îËØ•Êúâ‰∏Ä‰∏™ÂåÖÊ≥®ÈáäÔºå‰∏Ä‰∏™‰Ωç‰∫épackageÂ≠êÂè•‰πãÂâçÁöÑÂùóÊ≥®ÈáäÊàñË°åÊ≥®Èáä„ÄÇÂåÖÂ¶ÇÊûúÊúâÂ§ö‰∏™goÊñá‰ª∂ÔºåÂè™ÈúÄË¶ÅÂá∫Áé∞Âú®‰∏Ä‰∏™goÊñá‰ª∂‰∏≠Âç≥ÂèØ„ÄÇ 12// pingÂåÖÂÆûÁé∞‰∫ÜÂ∏∏Áî®ÁöÑpingÁõ∏ÂÖ≥ÁöÑÂáΩÊï∞package ping ÂØºÂá∫ÂáΩÊï∞Ê≥®ÈáäÔºåÁ¨¨‰∏ÄÊù°ËØ≠Âè•Â∫îËØ•‰∏∫‰∏ÄÊù°Ê¶ÇÊã¨ËØ≠Âè•ÔºåÂπ∂‰∏î‰ΩøÁî®Ë¢´Â£∞ÊòéÁöÑÂêçÂ≠ó‰Ωú‰∏∫ÂºÄÂ§¥„ÄÇ 12// Ê±ÇaÂíåbÁöÑÂíåÔºåËøîÂõûsum„ÄÇfunc Myfunction(sum int) (a, b int) &#123; ÂëΩÂêç ÈúÄË¶ÅÊ≥®ÈáäÊù•Ë°•ÂÖÖÁöÑÂëΩÂêçÂ∞±‰∏çÁÆóÊòØÂ•ΩÂëΩÂêç„ÄÇ ‰ΩøÁî®ÂèØÊêúÁ¥¢ÁöÑÂêçÁß∞ÔºöÂçïÂ≠óÊØçÂêçÁß∞ÂíåÊï∞Â≠óÂ∏∏ÈáèÂæàÈöæ‰ªé‰∏ÄÂ§ßÂ†ÜÊñáÂ≠ó‰∏≠ÊêúÁ¥¢Âá∫Êù•„ÄÇÂçïÂ≠óÊØçÂêçÁß∞‰ªÖÈÄÇÁî®‰∫éÁü≠ÊñπÊ≥ï‰∏≠ÁöÑÊú¨Âú∞ÂèòÈáèÔºåÂêçÁß∞ÈïøÁü≠Â∫î‰∏éÂÖ∂‰ΩúÁî®ÂüüÁõ∏ÂØπÂ∫î„ÄÇËã•ÂèòÈáèÊàñÂ∏∏ÈáèÂèØËÉΩÂú®‰ª£Á†Å‰∏≠Â§öÂ§Ñ‰ΩøÁî®ÔºåÂàôÂ∫îËµãÂÖ∂‰ª•‰æø‰∫éÊêúÁ¥¢ÁöÑÂêçÁß∞„ÄÇ ÂÅöÊúâÊÑè‰πâÁöÑÂå∫ÂàÜÔºöProductÂíåProductInfoÂíåProductDataÊ≤°ÊúâÂå∫Âà´ÔºåNameStringÂíåNameÊ≤°ÊúâÂå∫Âà´ÔºåË¶ÅÂå∫ÂàÜÂêçÁß∞ÔºåÂ∞±Ë¶Å‰ª•ËØªËÄÖËÉΩÈâ¥Âà´‰∏çÂêå‰πãÂ§ÑÁöÑÊñπÂºèÊù•Âå∫ÂàÜ „ÄÇ ÂáΩÊï∞ÂëΩÂêçËßÑÂàôÔºöÈ©ºÂ≥∞ÂºèÂëΩÂêçÔºåÂêçÂ≠óÂèØ‰ª•Èïø‰ΩÜÊòØÂæóÊääÂäüËÉΩÔºåÂøÖË¶ÅÁöÑÂèÇÊï∞ÊèèËø∞Ê∏ÖÊ•öÔºåÂáΩÊï∞ÂêçÂêçÂ∫îÂΩìÊòØÂä®ËØçÊàñÂä®ËØçÁü≠ËØ≠ÔºåÂ¶ÇpostPayment„ÄÅdeletePage„ÄÅsave„ÄÇÂπ∂‰æùJavabeanÊ†áÂáÜÂä†‰∏äget„ÄÅset„ÄÅisÂâçÁºÄ„ÄÇ‰æãÂ¶ÇÔºöxxx + With + ÈúÄË¶ÅÁöÑÂèÇÊï∞Âêç + And + ÈúÄË¶ÅÁöÑÂèÇÊï∞Âêç + ‚Ä¶.. ÁªìÊûÑ‰ΩìÂëΩÂêçËßÑÂàôÔºöÁªìÊûÑ‰ΩìÂêçÂ∫îËØ•ÊòØÂêçËØçÊàñÂêçËØçÁü≠ËØ≠ÔºåÂ¶ÇCustome„ÄÅWikiPage„ÄÅAccount„ÄÅAddressParserÔºåÈÅøÂÖç‰ΩøÁî®Manager„ÄÅProcessor„ÄÅData„ÄÅInfo„ÄÅËøôÊ†∑ÁöÑÁ±ªÂêçÔºåÁ±ªÂêç‰∏çÂ∫îÂΩìÊòØÂä®ËØç„ÄÇ ÂåÖÂêçÂëΩÂêçËßÑÂàôÔºöÂåÖÂêçÂ∫îËØ•‰∏∫Â∞èÂÜôÂçïËØçÔºå‰∏çË¶Å‰ΩøÁî®‰∏ãÂàíÁ∫øÊàñËÄÖÊ∑∑ÂêàÂ§ßÂ∞èÂÜô„ÄÇ Êé•Âè£ÂëΩÂêçËßÑÂàôÔºöÂçï‰∏™ÂáΩÊï∞ÁöÑÊé•Âè£Âêç‰ª•‚Äùer‚Äù‰Ωú‰∏∫ÂêéÁºÄÔºåÂ¶ÇReader,Writer„ÄÇÊé•Âè£ÁöÑÂÆûÁé∞ÂàôÂéªÊéâ‚Äúer‚Äù„ÄÇ 123type Reader interface &#123; Read(p []byte) (n int, err error)&#125; ‰∏§‰∏™ÂáΩÊï∞ÁöÑÊé•Âè£ÂêçÁªºÂêà‰∏§‰∏™ÂáΩÊï∞Âêç1234type WriteFlusher interface &#123; Write([]byte) (int, error) Flush() error&#125; ‰∏â‰∏™‰ª•‰∏äÂáΩÊï∞ÁöÑÊé•Âè£ÂêçÔºåÊäΩË±°Ëøô‰∏™Êé•Âè£ÁöÑÂäüËÉΩÔºåÁ±ª‰ºº‰∫éÁªìÊûÑ‰ΩìÂêç12345type Car interface &#123; Start([]byte) Stop() error Recover()&#125; Â∏∏Èáè Â∏∏ÈáèÂùáÈúÄ‰ΩøÁî®ÂÖ®ÈÉ®Â§ßÂÜôÂ≠óÊØçÁªÑÊàêÔºåÂπ∂‰ΩøÁî®‰∏ãÂàíÁ∫øÂàÜËØçÔºö 1const APP_VER = &quot;1.0&quot; Â¶ÇÊûúÊòØÊûö‰∏æÁ±ªÂûãÁöÑÂ∏∏ÈáèÔºåÈúÄË¶ÅÂÖàÂàõÂª∫Áõ∏Â∫îÁ±ªÂûãÔºö 123456type Scheme stringconst ( HTTP Scheme = &quot;http&quot; HTTPS Scheme = &quot;https&quot;) Â¶ÇÊûúÊ®°ÂùóÁöÑÂäüËÉΩËæÉ‰∏∫Â§çÊùÇ„ÄÅÂ∏∏ÈáèÂêçÁß∞ÂÆπÊòìÊ∑∑Ê∑ÜÁöÑÊÉÖÂÜµ‰∏ãÔºå‰∏∫‰∫ÜÊõ¥Â•ΩÂú∞Âå∫ÂàÜÊûö‰∏æÁ±ªÂûãÔºåÂèØ‰ª•‰ΩøÁî®ÂÆåÊï¥ÁöÑÂâçÁºÄÔºö 1234567type PullRequestStatus intconst ( PULL_REQUEST_STATUS_CONFLICT PullRequestStatus = iota PULL_REQUEST_STATUS_CHECKING PULL_REQUEST_STATUS_MERGEABLE) ÂèòÈáè ÂèòÈáèÂëΩÂêçÂü∫Êú¨‰∏äÈÅµÂæ™Áõ∏Â∫îÁöÑËã±ÊñáË°®ËææÊàñÁÆÄÂÜô,Âú®Áõ∏ÂØπÁÆÄÂçïÁöÑÁéØÂ¢ÉÔºàÂØπË±°Êï∞ÈáèÂ∞ë„ÄÅÈíàÂØπÊÄßÂº∫Ôºâ‰∏≠ÔºåÂèØ‰ª•Â∞Ü‰∏Ä‰∫õÂêçÁß∞Áî±ÂÆåÊï¥ÂçïËØçÁÆÄÂÜô‰∏∫Âçï‰∏™Â≠óÊØçÔºå‰æãÂ¶ÇÔºö user ÂèØ‰ª•ÁÆÄÂÜô‰∏∫ u userID ÂèØ‰ª•ÁÆÄÂÜô uidËã•ÂèòÈáèÁ±ªÂûã‰∏∫ bool Á±ªÂûãÔºåÂàôÂêçÁß∞Â∫î‰ª• Has, Is, Can Êàñ Allow ÂºÄÂ§¥Ôºö 1234var isExist boolvar hasConflict boolvar canManage boolvar allowGitHook bool ÂèòÈáèÂëΩÂêçÊÉØ‰æã ÂèòÈáèÂêçÁß∞‰∏ÄËà¨ÈÅµÂæ™È©ºÂ≥∞Ê≥ïÔºå‰ΩÜÈÅáÂà∞ÁâπÊúâÂêçËØçÊó∂ÔºåÈúÄË¶ÅÈÅµÂæ™‰ª•‰∏ãËßÑÂàôÔºö Â¶ÇÊûúÂèòÈáè‰∏∫ÁßÅÊúâÔºå‰∏îÁâπÊúâÂêçËØç‰∏∫È¶ñ‰∏™ÂçïËØçÔºåÂàô‰ΩøÁî®Â∞èÂÜôÔºåÂ¶Ç apiClient ÂÖ∂ÂÆÉÊÉÖÂÜµÈÉΩÂ∫îÂΩì‰ΩøÁî®ËØ•ÂêçËØçÂéüÊúâÁöÑÂÜôÊ≥ïÔºåÂ¶Ç APIClient„ÄÅrepoID„ÄÅUserID ÈîôËØØÁ§∫‰æãÔºöUrlArrayÔºåÂ∫îËØ•ÂÜôÊàêurlArrayÊàñËÄÖURLArray ‰∏ãÈù¢Âàó‰∏æ‰∫Ü‰∏Ä‰∫õÂ∏∏ËßÅÁöÑÁâπÊúâÂêçËØçÔºö 123456789101112131415161718192021222324252627282930313233343536// A GonicMapper that contains a list of common initialisms taken from golang/lintvar LintGonicMapper = GonicMapper&#123; &quot;API&quot;: true, &quot;ASCII&quot;: true, &quot;CPU&quot;: true, &quot;CSS&quot;: true, &quot;DNS&quot;: true, &quot;EOF&quot;: true, &quot;GUID&quot;: true, &quot;HTML&quot;: true, &quot;HTTP&quot;: true, &quot;HTTPS&quot;: true, &quot;ID&quot;: true, &quot;IP&quot;: true, &quot;JSON&quot;: true, &quot;LHS&quot;: true, &quot;QPS&quot;: true, &quot;RAM&quot;: true, &quot;RHS&quot;: true, &quot;RPC&quot;: true, &quot;SLA&quot;: true, &quot;SMTP&quot;: true, &quot;SSH&quot;: true, &quot;TLS&quot;: true, &quot;TTL&quot;: true, &quot;UI&quot;: true, &quot;UID&quot;: true, &quot;UUID&quot;: true, &quot;URI&quot;: true, &quot;URL&quot;: true, &quot;UTF8&quot;: true, &quot;VM&quot;: true, &quot;XML&quot;: true, &quot;XSRF&quot;: true, &quot;XSS&quot;: true,&#125; structËßÑËåÉ structÁî≥ÊòéÂíåÂàùÂßãÂåñÊ†ºÂºèÈááÁî®Â§öË°åÔºö ÂÆö‰πâÂ¶Ç‰∏ãÔºö 1234type User struct&#123; Username string Email string&#125; ÂàùÂßãÂåñÂ¶Ç‰∏ãÔºö 1234u := User&#123; Username: &quot;test&quot;, Email: &quot;test@gmail.com&quot;,&#125; ÊéßÂà∂ÁªìÊûÑ ififÊé•ÂèóÂàùÂßãÂåñËØ≠Âè•ÔºåÁ∫¶ÂÆöÂ¶Ç‰∏ãÊñπÂºèÂª∫Á´ãÂ±ÄÈÉ®ÂèòÈáè 123if err := file.Chmod(0664); err != nil &#123; return err&#125; forÈááÁî®Áü≠Â£∞ÊòéÂª∫Á´ãÂ±ÄÈÉ®ÂèòÈáè 1234sum := 0for i := 0; i &lt; 10; i++ &#123; sum += i&#125; returnÂ∞ΩÊó©returnÔºö‰∏ÄÊó¶ÊúâÈîôËØØÂèëÁîüÔºåÈ©¨‰∏äËøîÂõû 12345678910f, err := os.Open(name)if err != nil &#123; return err&#125;d, err := f.Stat()if err != nil &#123; f.Close() return err&#125;codeUsing(f, d) ÈîôËØØÂ§ÑÁêÜ error‰Ωú‰∏∫ÂáΩÊï∞ÁöÑÂÄºËøîÂõû,ÂøÖÈ°ªÂØπerrorËøõË°åÂ§ÑÁêÜ ÈîôËØØÊèèËø∞Â¶ÇÊûúÊòØËã±ÊñáÂøÖÈ°ª‰∏∫Â∞èÂÜôÔºå‰∏çÈúÄË¶ÅÊ†áÁÇπÁªìÂ∞æ ÈááÁî®Áã¨Á´ãÁöÑÈîôËØØÊµÅËøõË°åÂ§ÑÁêÜ ‰∏çË¶ÅÈááÁî®‰∏ãÈù¢ÁöÑÂ§ÑÁêÜÈîôËØØÂÜôÊ≥ï 12345if err != nil &#123; // error handling&#125; else &#123; // normal code&#125; ÈááÁî®‰∏ãÈù¢ÁöÑÂÜôÊ≥ï 12345if err != nil &#123; // error handling return // or continue, etc.&#125;// normal code ‰ΩøÁî®ÂáΩÊï∞ÁöÑËøîÂõûÂÄºÊó∂ÔºåÂàôÈááÁî®‰∏ãÈù¢ÁöÑÊñπÂºè 123456x, err := f()if err != nil &#123; // error handling return&#125;// use x panic Â∞ΩÈáè‰∏çË¶Å‰ΩøÁî®panicÔºåÈô§Èùû‰Ω†Áü•ÈÅì‰Ω†Âú®ÂÅö‰ªÄ‰πà import ÂØπimportÁöÑÂåÖËøõË°åÂàÜÁªÑÁÆ°ÁêÜÔºåÁî®Êç¢Ë°åÁ¨¶ÂàÜÂâ≤ÔºåËÄå‰∏îÊ†áÂáÜÂ∫ì‰Ωú‰∏∫ÂàÜÁªÑÁöÑÁ¨¨‰∏ÄÁªÑ„ÄÇÂ¶ÇÊûú‰Ω†ÁöÑÂåÖÂºïÂÖ•‰∫Ü‰∏âÁßçÁ±ªÂûãÁöÑÂåÖÔºåÊ†áÂáÜÂ∫ìÂåÖÔºåÁ®ãÂ∫èÂÜÖÈÉ®ÂåÖÔºåÁ¨¨‰∏âÊñπÂåÖÔºåÂª∫ËÆÆÈááÁî®Â¶Ç‰∏ãÊñπÂºèËøõË°åÁªÑÁªá‰Ω†ÁöÑÂåÖ 123456789101112package mainimport ( &quot;fmt&quot; &quot;os&quot; &quot;kmg/a&quot; &quot;kmg/b&quot; &quot;code.google.com/a&quot; &quot;github.com/b&quot;) Âú®È°πÁõÆ‰∏≠‰∏çË¶Å‰ΩøÁî®Áõ∏ÂØπË∑ØÂæÑÂºïÂÖ•ÂåÖÔºö 12345// ÈîôËØØÁ§∫‰æãimport ‚Äú../net‚Äù// Ê≠£Á°ÆÁöÑÂÅöÊ≥ïimport ‚Äúgithub.com/repo/proj/src/net‚Äù goimports‰ºöËá™Âä®Â∏Æ‰Ω†Ê†ºÂºèÂåñ ÂèÇÊï∞‰º†ÈÄí ÂØπ‰∫éÂ∞ëÈáèÊï∞ÊçÆÔºå‰∏çË¶Å‰º†ÈÄíÊåáÈíà ÂØπ‰∫éÂ§ßÈáèÊï∞ÊçÆÁöÑstructÂèØ‰ª•ËÄÉËôë‰ΩøÁî®ÊåáÈíà ‰º†ÂÖ•ÂèÇÊï∞ÊòØmapÔºåsliceÔºåchan‰∏çË¶Å‰º†ÈÄíÊåáÈíàÔºåÂõ†‰∏∫mapÔºåsliceÔºåchanÊòØÂºïÁî®Á±ªÂûãÔºå‰∏çÈúÄË¶Å‰º†ÈÄíÊåáÈíàÁöÑÊåáÈíà ÂçïÂÖÉÊµãËØï ÂçïÂÖÉÊµãËØïÊñá‰ª∂ÂêçÂëΩÂêçËßÑËåÉ‰∏∫ example_test.goÊµãËØïÁî®‰æãÁöÑÂáΩÊï∞ÂêçÁß∞ÂøÖÈ°ª‰ª• Test ÂºÄÂ§¥Ôºå‰æãÂ¶ÇÔºöTestExample]]></content>
      <tags>
        <tag>ÂÖ∂ÂÆÉ</tag>
      </tags>
  </entry>
</search>
