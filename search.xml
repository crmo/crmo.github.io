<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[iOSÁöÑCookieÁÆ°ÁêÜ]]></title>
    <url>%2F2018%2F02%2F28%2FiOS%E7%9A%84Cookie%E7%AE%A1%E7%90%86%2F</url>
    <content type="text"><![CDATA[ËÉåÊôØÊúÄËøëÊúâ‰∏Ä‰∏™ÈúÄÊ±ÇÔºåÈúÄË¶ÅÊâãÂä®ÁöÑÂéªÁºìÂ≠òcookieÔºåÁÑ∂ÂêéÂêØÂä®APPÁöÑÊó∂ÂÄôËÆæÁΩÆÁºìÂ≠òËøáÁöÑcookieÔºåÈ°πÁõÆÁΩëÁªúÊ°ÜÊû∂Áî®ÁöÑÊòØAfnetworking„ÄÇ Ëß£ÂÜ≥ÊñπÊ°àÁøª‰∫Ü‰∏ãAfnetworkingÁöÑissueÔºåÂèëÁé∞‰∫Ü‰ΩúËÄÖÂØπ‰∫écookieÁöÑËß£Èáä AfnetworkingÊ≤°ÊúâÂØπCookieÂÅöËøáÂ§ÑÁêÜ ‰ΩøÁî®NSHTTPCookieStorageÂç≥ÂèØÂÆûÁé∞cookieÁöÑÁÆ°ÁêÜ„ÄÇ‰∏ä‰ª£Á†ÅÔºÅ Â≠òcookie 1234NSArray *cookies = [[NSHTTPCookieStorage sharedHTTPCookieStorage] cookiesForURL:[NSURL URLWithString:url]];NSData *data = [NSKeyedArchiver archivedDataWithRootObject:cookies];NSUserDefaults *userDefaults = [NSUserDefaults standardUserDefaults];[userDefaults setObject:data forKey:@&quot;cookie&quot;]; ËÆæÁΩÆcookie 12345678NSData *cookiesdata = [[NSUserDefaults standardUserDefaults] objectForKey:@&quot;m3cookie&quot;]; if([cookiesdata length]) &#123; NSArray *cookies = [NSKeyedUnarchiver unarchiveObjectWithData:cookiesdata]; NSHTTPCookie *cookie; for (cookie in cookies) &#123; [[NSHTTPCookieStorage sharedHTTPCookieStorage] setCookie:cookie]; &#125; &#125; Ê∏ÖÁêÜcookie 12345NSHTTPCookie *cookie;NSHTTPCookieStorage *storage = [NSHTTPCookieStorage sharedHTTPCookieStorage];for (cookie in [storage cookies]) &#123; [storage deleteCookie:cookie];&#125; ÂèÇËÄÉÊñáÁ´†Ôºö NSHTTPCookieStorageÂÆòÊñπÊñáÊ°£Persisting Cookies In An iOS Application?Clear cookies for response in AFNetworking 2]]></content>
  </entry>
  <entry>
    <title><![CDATA[imageNamed‰∏éimageWithContentsOfFileÂ∞èÁªì]]></title>
    <url>%2F2018%2F02%2F28%2FimageNamed%E4%B8%8EimageWithContentsOfFile%E5%B0%8F%E7%BB%93%2F</url>
    <content type="text"><![CDATA[Êú¨Êñá‰∏ªË¶ÅËÆ≤imageNamed‰∏éimageWithContentsOfFileÁöÑÂ∑ÆÂºÇÔºåÈúÄË¶ÅÊ≥®ÊÑèÁöÑÁÇπÔºå‰∏éÂÆûÊàò‰∏≠ÈÅáÂà∞ÁöÑÂùë„ÄÇ Â•Ω‰πÖÊ≤°ÂÜôËøáÂçöÂÆ¢‰∫ÜÔºå‰ªÄ‰πàÂ∑•‰ΩúÂ§™ÂøôÔºåÂä†Áè≠Â§™ÊôöÊàëÂ∞±‰∏çËØ¥‰∫ÜÔºåÈÉΩÊÄ™Ëá™Â∑±Â§™ÊáíüòÇÔºåÊó∂Èó¥ÈÉΩÊòØÊå§Âá∫Êù•ÁöÑ„ÄÇÁúãÁùÄÂêÑ‰ΩçÂ§ßÁâõÂÜôÁöÑÊñáÁ´†ÔºåÁÆÄÁõ¥ËøáÁòæÔºåÂ∏åÊúõÊúâ‰∏ÄÂ§©Ëá™Â∑±‰πüËÉΩÂÜôÂá∫Ëøô‰πàÈ´òË¥®Èáè„ÄÅÂπ≤Ë¥ßÂØÜÈõÜÁöÑÊñáÁ´†ÔºåÂÖà‰ªéÁÆÄÂçïÁöÑÂÅöËµ∑Âêß„ÄÇ ‰ªéÂ∑ÆÂºÇËØ¥Ëµ∑‰ªéÁ£ÅÁõòÂä†ËΩΩÂõæÁâáÔºåUIImage‰∏ªË¶ÅÊèê‰æõ‰∫Ü‰∏§ÁßçÊñπÂºèÔºö +(UIImage )imageNamed:(NSString )name;+(UIImage )imageWithContentsOfFile:(NSString )path; ÂÖ≥‰∫éËøô‰∏§ÁßçÊñπÊ≥ïÁöÑ‰ΩøÁî®Êó∂Êú∫ÔºåËãπÊûúÂÆòÊñπÊñáÊ°£ÊèèËø∞Â¶Ç‰∏ãÔºö Use the imageNamed:inBundle:compatibleWithTraitCollection: method (or the imageNamed: method) to create an image from an image asset or image file located in your app‚Äôs main bundle (or some other known bundle). Because these methods cache the image data automatically, they are especially recommended for images that you use frequently.Use the imageWithContentsOfFile: or initWithContentsOfFile: method to create an image object where the initial data is not in a bundle. These methods load the image data from disk each time, so you should not use them to load the same image repeatedly. ‰πüÂ∞±ÊòØËØ¥ÔºåimageNamed:Á¨¨‰∏ÄÊ¨°Âä†ËΩΩÂõæÁâáÊó∂‰ºöÁºìÂ≠òÂõæÁâáÂà∞ÂÜÖÂ≠òÔºåÈÄÇÂêà‰ΩøÁî®È¢ëÁπÅÁöÑÂõæÁâáÔºåimageWithContentsOfFile:‰∏ç‰ºöÊääÂõæÁâáÁºìÂ≠òÂà∞ÂÜÖÂ≠òÔºåÊØèÊ¨°Ë∞ÉÁî®ÈÉΩË¶ÅÈáçÊñ∞‰ªéÁ£ÅÁõòÂä†ËΩΩ‰∏ÄÊ¨°„ÄÇÂú®ÂÆûÈôÖ‰ΩøÁî®‰∏≠Êàë‰ª¨Ë¶ÅÊ†πÊçÆ‰∏öÂä°Êù•Âà§Êñ≠Ë∞ÉÁî®ÂÖ∑‰ΩìÁöÑÊñπÊ≥ïÔºåÊù•ÊúÄ‰ºòÂåñÂÜÖÂ≠ò‰∏éÊÄßËÉΩ„ÄÇ‰∏æ‰∏™‰æãÂ≠êÔºö ÁôªÈôÜËÉåÊôØÂõæÔºåÂè™‰ºöÂú®Áî®Êà∑ÁôªÈôÜÁöÑÊó∂ÂÄô‰ΩøÁî®ÔºåËÄå‰∏îÂõæÁâáËæÉÂ§ßÔºåÂ∞±Âª∫ËÆÆÁî®imageWithContentsOfFile:Âä†ËΩΩÔºõ Â∫ïÂØºËà™ÂõæÊ†áÔºåÂõæÊ†áËæÉÂ∞èÔºå‰ΩøÁî®È¢ëÁπÅÔºåÂ∞±Âª∫ËÆÆ‰ΩøÁî®imageNamed:Âä†ËΩΩÔºõ imageNamed:ÊñπÊ≥ïËøòÊúâ‰∏™ÈôêÂà∂ÔºåÂÆÉÊòØÂú®main bundleÈáåÊâæÂõæÁâáÔºåÂ¶ÇÊûúÂõæÁâáÊîæÂú®Images.xcassetsÊàñËÄÖÁõ¥Êé•ÊääÂõæÁâáÊñπÂú®Â∑•Á®ãÈáåÔºåÂèÇÊï∞Áõ¥Êé•‰º†ÂõæÁâáÂêçÂèØ‰ª•ÊâæÂà∞„ÄÇÂÉèÊàëÂè∏ÁöÑÂõæÁâáÊòØÊîæÂú®ÂçïÁã¨Âª∫Á´ãÁöÑbundleÈáåÔºåÂ¶ÇÊûúË¶ÅÁî®imageNamed:Âä†ËΩΩÁöÑËØùÊñá‰ª∂ÂêçÂâçÈù¢Â∞±Ë¶ÅÂä†‰∏äbundleÂêçÔºåÂÉèËøôÊ†∑a.bundle/b.png„ÄÇ Â±èÂπïÈÄÇÈÖçÈóÆÈ¢òiOSÁöÑÂõæÁâáÊñá‰ª∂ÈúÄË¶ÅÊèê‰æõ3ÁßçÂ∞∫ÂØ∏ÁöÑ1x„ÄÅ2x„ÄÅ3xÔºåÊ†πÊçÆ‰∏çÂêåÁöÑÂ±èÂπïÂ∞∫ÂØ∏Êàë‰ª¨ÈúÄË¶ÅÂä†ËΩΩ‰∏çÂêåÁöÑÂõæÁâáÔºåÂÖ≥‰∫é‰∏çÂêåÂ±èÂπïÁöÑÂõæÁâáÂä†ËΩΩÔºåËãπÊûúÂ∑≤ÁªèÂ∏ÆÊàë‰ª¨Â∞ÅË£ÖÂ•Ω‰∫ÜÔºåÊàë‰ª¨Âè™ÈúÄË¶ÅÂ∞Ü3‰∏≠Â∞∫ÂØ∏ÁöÑÂõæÁâáÊîæÂà∞Â∑•Á®ã‰∏≠ÔºåÁÑ∂ÂêéË∞ÉÁî®imageNamed:ÊàñËÄÖimageWithContentsOfFile:ÔºåÂÆÉ‰ºöËá™Âä®Ê†πÊçÆÂ±èÂπïÂ∞∫ÂØ∏Êù•Âä†ËΩΩ‰∏çÂêåÁöÑÂõæÁâá„ÄÇÂÖ≥‰∫éimageNamed:ÔºåÂÆòÊñπÊñáÊ°£‰∏≠ÊúâËøô‰πà‰∏ÄÊÆµËÆ®ËÆ∫Ôºö This method looks in the system caches for an image object with the specified name and returns the variant of that image that is best suited for the main screen. imageWithContentsOfFile:ËøòÊ≤°ÊâæÂà∞ÂÆòÊñπÊñáÊ°£ÁöÑËØ¥ÊòéÔºàÂ¶ÇÊûúÂêÑ‰ΩçÁü•ÈÅìÔºåÊ¨¢ËøéÂêÑ‰ΩçÂ§ßÁâõÂú®ËØÑËÆ∫‰∏≠ÊèêÂá∫ÔºâÔºå‰∏çËøáÊàëÊµãËØïËøáÊòØÂèØ‰ª•ÁöÑ„ÄÇ ‰ΩøÁî®imageWithContentsOfFileÁöÑ‰∏Ä‰∏™ÂùëÂú®‰ΩøÁî®imageWithContentsOfFile:Âä†ËΩΩÂõæÁâáÁöÑÊó∂ÂÄôÈÅáÂà∞‰∏Ä‰∏™ÂùëÔºåÂÖà‰∏ä‰ª£Á†ÅÔºö 1234567+ (UIImage *)imageWithName:(NSString *)name type:(NSString *)type inBundle:(NSString *)bundle &#123; NSString *imageBundlePath = [[NSBundle mainBundle] pathForResource:bundle ofType:@&quot;bundle&quot;]; NSBundle *imageBundle = [NSBundle bundleWithPath:imageBundlePath]; NSString *imagePath = [imageBundle pathForResource:name ofType:type]; UIImage *image = [UIImage imageWithContentsOfFile:imagePath]; return image;&#125; ÂæàÁÆÄÂçïÁöÑ‰∏Ä‰∏™ÂáΩÊï∞ÔºåÂ∞±ÊòØËé∑ÂèñbundleÂÖ®Ë∑ØÂæÑÔºåÁÑ∂ÂêéÂÜçËé∑ÂèñÂà∞bundleÈáåÂõæÁâáÁöÑÂÖ®Ë∑ØÂæÑÔºåÁÑ∂ÂêéË∞ÉÁî®imageWithContentsOfFile:Âä†ËΩΩÂõæÁâá„ÄÇÂú®‰ΩøÁî®ÁöÑÊó∂ÂÄô‰πüÂæàÊ≠£Â∏∏Ôºå‰ΩÜÊòØÊúâ‰∏ÄÂ§©ÂèëÁé∞ÊüêÂº†ÂõæÂä†ËΩΩ‰∏çÂá∫Êù•‰∫Ü„ÄÇÊ£ÄÊü•ËµÑÊ∫êÊñá‰ª∂ÔºåÂè™Êúâ2xÁöÑÂõæÔºàÂèàÊòØ‰∏Ä‰∏™ÂÅ∑ÊáíÁöÑÁ®ãÂ∫èÂëò„ÄÇ„ÄÇ„ÄÇÂæà‰∏çÂª∫ËÆÆËøô‰πàÁé©ÔºåËôΩÁÑ∂Âè™Êúâ2xÁöÑÂõæÔºåÂú®ÊâÄÊúâÂ±èÂπïÈÉΩËÉΩÊòæÁ§∫Ôºå‰ΩÜÊòØ‰ºöÈÄ†ÊàêÂõæÁâáÁöÑÂéãÁº©‰∏éÊîæÂ§ßÔºåÊØè‰∏™ÁªÜËäÇÈÉΩÂæàÈáçË¶ÅÔºÅÔºÅÔºÅÔºâÔºåÂ¶ÇÊûúÂä†‰∏ä1xÁöÑÂõæÂ∞±ÂèØ‰ª•Âä†ËΩΩÂá∫Êù•‰∫Ü„ÄÇÁªèËøáË∞ÉËØïÂèëÁé∞ÈóÆÈ¢òÂ∞±Âá∫Âú®pathForResource:ofType‰∏äÔºåËøô‰∏™ÂáΩÊï∞ÊòØÁ≤æÁ°ÆÂåπÈÖçË∞ÉÁî®ËÄÖËæìÂÖ•ÁöÑÊñá‰ª∂ÂêçÔºå‰∏ç‰ºöËá™Âä®ËØÜÂà´Êñá‰ª∂ÂêçÂêéÈù¢ÁöÑ@2x„ÄÇ‰øÆÊîπÂêéÁöÑ‰ª£Á†ÅÔºö 12345678+ (UIImage *)imageWithName:(NSString *)name type:(NSString *)type inBundle:(NSString *)bundle &#123; NSString *imageBundlePath = [[NSBundle mainBundle] pathForResource:bundle ofType:@&quot;bundle&quot;]; NSBundle *imageBundle = [NSBundle bundleWithPath:imageBundlePath]; NSString *imageFullName = [name stringByAppendingPathExtension:type]; NSString *imagePath = [[imageBundle resourcePath] stringByAppendingPathComponent:imageFullName]; UIImage *image = [UIImage imageWithContentsOfFile:imagePath]; return image;&#125;]]></content>
  </entry>
  <entry>
    <title><![CDATA[Ê≠£ÂàôË°®ËææÂºèÁ¨îËÆ∞]]></title>
    <url>%2F2016%2F11%2F20%2F%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[Ê≠£ÂàôË°®ËææÂºèÔºàregular expressionÔºâÊèèËø∞‰∫Ü‰∏ÄÁßçÂ≠óÁ¨¶‰∏≤ÂåπÈÖçÁöÑÊ®°ÂºèÔºåÂèØ‰ª•Áî®Êù•Ê£ÄÊü•‰∏Ä‰∏™‰∏≤ÊòØÂê¶Âê´ÊúâÊüêÁßçÂ≠ê‰∏≤„ÄÅÂ∞ÜÂåπÈÖçÁöÑÂ≠ó‰∏≤ÂÅöÊõøÊç¢ÊàñËÄÖ‰ªéÊüê‰∏™‰∏≤‰∏≠ÂèñÂá∫Á¨¶ÂêàÊüê‰∏™Êù°‰ª∂ÁöÑÂ≠ó‰∏≤Á≠â„ÄÇ Ê≠£ÂàôË°®ËææÂºèÂú®Á∫øÊµãËØïÔºöhttp://www.regexpal.com/ ÂÖÉÂ≠óÁ¨¶Â∏∏Áî®ÂÖÉÂ≠óÁ¨¶Ôºö ‰ª£Á†Å ËØ¥Êòé . ÂåπÈÖçÈô§Êç¢Ë°åÁ¨¶‰ª•Â§ñÁöÑ‰ªªÊÑèÂ≠óÁ¨¶ \w ÂåπÈÖçÂ≠óÊØçÊàñÊï∞Â≠óÊàñ‰∏ãÂàíÁ∫øÊàñÊ±âÂ≠ó \d ÂåπÈÖçÊï∞Â≠ó \s ÂåπÈÖçÁ©∫Ê†º \b ÂåπÈÖçÂçïËØçÁöÑÂºÄÂßãÊàñÁªìÊùü ^ ÂåπÈÖçÂ≠óÁ¨¶‰∏≤ÁöÑÂºÄÂßãÔºåÂ¶ÇÊûúÊòØÂ§ÑÁêÜÂ§öË°åÔºåÊÑè‰πâÂèòÊàêË°åÂºÄÂßãÂ§Ñ $ ÂåπÈÖçÂ≠óÁ¨¶‰∏≤ÁöÑÁªìÊùüÔºåÂ¶ÇÊûúÊòØÂ§ÑÁêÜÂ§öË°åÔºåÊÑè‰πâÂèòÊàêË°åÁªìÊùüÂ§Ñ ÈôêÂÆöÁ¨¶Â∏∏Áî®ÈôêÂÆöÁ¨¶Ôºö ‰ª£Á†Å ËØ¥Êòé * *ÂâçÈù¢ÁöÑÂÜÖÂÆπÈáçÂ§ç‰ªªÊÑèÊ¨° + +ÂâçÈù¢ÁöÑÂÜÖÂÆπÈáçÂ§ç‰∏ÄÊ¨°ÊàñËÄÖÂ§öÊ¨° ? ÈáçÂ§çÈõ∂Ê¨°Êàñ‰∏ÄÊ¨° {n} ÈáçÂ§çnÊ¨° {n, } ÈáçÂ§çÊ¨°Êï∞Â§ß‰∫éÁ≠â‰∫én {n,m} ÈáçÂ§çÊ¨°Êï∞Â§ß‰∫éÁ≠â‰∫énÂ∞è‰∫éÁ≠â‰∫ém Â≠óÁ¨¶Á±ª[auiou] ÂåπÈÖç‰ªª‰Ωï‰∏Ä‰∏™Ëã±ÊñáÂÖÉÈü≥Â≠óÊØç[.?!] ÂåπÈÖçÊ†áÁÇπÁ¨¶Âè∑Ôºà. ? !Ôºâ Âèç‰πâ ‰ª£Á†Å ËØ¥Êòé \W ÂåπÈÖç‰ªªÊÑè‰∏çÊòØÂ≠óÊØç„ÄÅÊï∞Â≠ó„ÄÅ‰∏ãÂàíÁ∫ø„ÄÅÊ±âÂ≠óÁöÑÂ≠óÁ¨¶ \S ÂåπÈÖç‰ªªÊÑè‰∏çÊòØÁ©∫ÁôΩÁ¨¶ÁöÑÂ≠óÁ¨¶ \D ÂåπÈÖç‰ªªÊÑèÈùûÊï∞Â≠óÁöÑÂ≠óÁ¨¶ \B ÂåπÈÖç‰∏çÊòØÂçïËØçÂºÄÂ§¥ÊàñÁªìÊùüÁöÑ‰ΩçÁΩÆ [^x] ÂåπÈÖçÈô§‰∫Üx‰ª•Â§ñÁöÑ‰ªªÊÑèÂ≠óÁ¨¶ [^abcd] ÂåπÈÖçÈô§‰∫Üabcd‰ª•Â§ñÁöÑ‰ªªÊÑèÂ≠óÁ¨¶ ÂàÜÁªÑ ‰ª£Á†Å ËØ¥Êòé (exp) ÂåπÈÖçexpÔºåÂπ∂ÊçïËé∑ÊñáÊú¨Âà∞Ëá™Âä®ÂëΩÂêçÁªÑ‰∏≠ (?&lt;name&gt;exp) ÂåπÈÖçexp,Âπ∂ÊçïËé∑ÊñáÊú¨Âà∞ÂêçÁß∞‰∏∫nameÁöÑÁªÑÈáåÔºå‰πüÂèØ‰ª•ÂÜôÊàê(?`name`exp) (?:exp) ÂåπÈÖçexpÔºå‰∏çÊçïËé∑ÂåπÈÖçÁöÑÊñáÊú¨Ôºå‰πü‰∏çÁªôÊ¨°ÂàÜÁªÑÂàÜÈÖçÁªÑÂè∑ (?=exp) ÂåπÈÖçexpÂâçÈù¢ÁöÑ‰ΩçÁΩÆ (?&lt;=exp) ÂåπÈÖçexpÂêéÈù¢ÁöÑ‰ΩçÁΩÆ (?!exp) ÂåπÈÖçÂêéÈù¢Ë∑üÁöÑ‰∏çÊòØexpÁöÑ‰ΩçÁΩÆ (?&lt;!exp) ÂåπÈÖçÂâçÈù¢‰∏çÊòØexpÁöÑ‰ΩçÁΩÆ (?#comment) Ê≥®Èáä Ë¥™Â©™‰∏éÊáíÊÉ∞ÈÄöÂ∏∏ÈáçÂ§çÈôêÂÆöÁ¨¶ÁöÑË°å‰∏∫ÊòØÂåπÈÖçÂ∞ΩÂèØËÉΩÂ§öÁöÑÂ≠óÁ¨¶ÔºåÂú®ÈôêÂÆöÁ¨¶ÂêéÈù¢Âä†?‰Ωø‰πãÊàê‰∏∫ÊÉ∞ÊÄßÈôêÂÆöÁ¨¶Ôºå‰æãÂ¶Ç*?ÁöÑÂê´‰πâ‰∏∫ÈáçÂ§ç‰ªªÊÑèÊ¨°Êï∞Ôºå‰ΩÜÊòØÂ∞ΩÂèØËÉΩÂ∞ë]]></content>
      <tags>
        <tag>Ê≠£ÂàôË°®ËææÂºè</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[GolangÁºñÁ†ÅËßÑËåÉ]]></title>
    <url>%2F2016%2F11%2F20%2FGolang%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83%2F</url>
    <content type="text"><![CDATA[gofmt Â§ßÈÉ®ÂàÜÁöÑÊ†ºÂºèÈóÆÈ¢òÂèØ‰ª•ÈÄöËøágofmtËß£ÂÜ≥ÔºågofmtËá™Âä®Ê†ºÂºèÂåñ‰ª£Á†ÅÔºå‰øùËØÅÊâÄÊúâÁöÑgo‰ª£Á†Å‰∏éÂÆòÊñπÊé®ËçêÁöÑÊ†ºÂºè‰øùÊåÅ‰∏ÄËá¥Ôºå‰∫éÊòØÊâÄÊúâÊ†ºÂºèÊúâÂÖ≥ÈóÆÈ¢òÔºåÈÉΩ‰ª•gofmtÁöÑÁªìÊûú‰∏∫ÂáÜ„ÄÇ Ë°åÈïø ‰∏ÄË°åÊúÄÈïø‰∏çË∂ÖËøá80‰∏™Â≠óÁ¨¶ÔºåË∂ÖËøáÁöÑ‰ΩøÁî®Êç¢Ë°åÂ±ïÁ§∫ÔºåÂ∞ΩÈáè‰øùÊåÅÊ†ºÂºè‰ºòÈõÖ„ÄÇ Ê≥®Èáä Âú®ÁºñÁ†ÅÈò∂ÊÆµÂ∫îËØ•ÂêåÊ≠•ÂÜôÂ•ΩÂèòÈáè„ÄÅÂáΩÊï∞„ÄÅÂåÖÁöÑÊ≥®ÈáäÔºåÊúÄÂêéÂèØ‰ª•Âà©Áî®godocÂØºÂá∫ÊñáÊ°£„ÄÇÊ≥®ÈáäÂøÖÈ°ªÊòØÂÆåÊï¥ÁöÑÂè•Â≠êÔºåÂè•Â≠êÁöÑÁªìÂ∞æÂ∫îËØ•Áî®Âè•Âè∑‰Ωú‰∏∫ÁªìÂ∞æÔºàËã±ÊñáÂè•Âè∑Ôºâ„ÄÇÊ≥®ÈáäÊé®ËçêÁî®Ëã±ÊñáÔºåÂèØ‰ª•Âú®ÂÜô‰ª£Á†ÅËøáÁ®ã‰∏≠ÈîªÁÇºËã±ÊñáÁöÑÈòÖËØªÂíå‰π¶ÂÜôËÉΩÂäõ„ÄÇËÄå‰∏îÁî®Ëã±Êñá‰∏ç‰ºöÂá∫Áé∞ÂêÑÁßçÁºñÁ†ÅÁöÑÈóÆÈ¢ò„ÄÇÊØè‰∏™ÂåÖÈÉΩÂ∫îËØ•Êúâ‰∏Ä‰∏™ÂåÖÊ≥®ÈáäÔºå‰∏Ä‰∏™‰Ωç‰∫épackageÂ≠êÂè•‰πãÂâçÁöÑÂùóÊ≥®ÈáäÊàñË°åÊ≥®Èáä„ÄÇÂåÖÂ¶ÇÊûúÊúâÂ§ö‰∏™goÊñá‰ª∂ÔºåÂè™ÈúÄË¶ÅÂá∫Áé∞Âú®‰∏Ä‰∏™goÊñá‰ª∂‰∏≠Âç≥ÂèØ„ÄÇ 12// pingÂåÖÂÆûÁé∞‰∫ÜÂ∏∏Áî®ÁöÑpingÁõ∏ÂÖ≥ÁöÑÂáΩÊï∞package ping ÂØºÂá∫ÂáΩÊï∞Ê≥®ÈáäÔºåÁ¨¨‰∏ÄÊù°ËØ≠Âè•Â∫îËØ•‰∏∫‰∏ÄÊù°Ê¶ÇÊã¨ËØ≠Âè•ÔºåÂπ∂‰∏î‰ΩøÁî®Ë¢´Â£∞ÊòéÁöÑÂêçÂ≠ó‰Ωú‰∏∫ÂºÄÂ§¥„ÄÇ 12// Ê±ÇaÂíåbÁöÑÂíåÔºåËøîÂõûsum„ÄÇfunc Myfunction(sum int) (a, b int) &#123; ÂëΩÂêç ÈúÄË¶ÅÊ≥®ÈáäÊù•Ë°•ÂÖÖÁöÑÂëΩÂêçÂ∞±‰∏çÁÆóÊòØÂ•ΩÂëΩÂêç„ÄÇ ‰ΩøÁî®ÂèØÊêúÁ¥¢ÁöÑÂêçÁß∞ÔºöÂçïÂ≠óÊØçÂêçÁß∞ÂíåÊï∞Â≠óÂ∏∏ÈáèÂæàÈöæ‰ªé‰∏ÄÂ§ßÂ†ÜÊñáÂ≠ó‰∏≠ÊêúÁ¥¢Âá∫Êù•„ÄÇÂçïÂ≠óÊØçÂêçÁß∞‰ªÖÈÄÇÁî®‰∫éÁü≠ÊñπÊ≥ï‰∏≠ÁöÑÊú¨Âú∞ÂèòÈáèÔºåÂêçÁß∞ÈïøÁü≠Â∫î‰∏éÂÖ∂‰ΩúÁî®ÂüüÁõ∏ÂØπÂ∫î„ÄÇËã•ÂèòÈáèÊàñÂ∏∏ÈáèÂèØËÉΩÂú®‰ª£Á†Å‰∏≠Â§öÂ§Ñ‰ΩøÁî®ÔºåÂàôÂ∫îËµãÂÖ∂‰ª•‰æø‰∫éÊêúÁ¥¢ÁöÑÂêçÁß∞„ÄÇ ÂÅöÊúâÊÑè‰πâÁöÑÂå∫ÂàÜÔºöProductÂíåProductInfoÂíåProductDataÊ≤°ÊúâÂå∫Âà´ÔºåNameStringÂíåNameÊ≤°ÊúâÂå∫Âà´ÔºåË¶ÅÂå∫ÂàÜÂêçÁß∞ÔºåÂ∞±Ë¶Å‰ª•ËØªËÄÖËÉΩÈâ¥Âà´‰∏çÂêå‰πãÂ§ÑÁöÑÊñπÂºèÊù•Âå∫ÂàÜ „ÄÇ ÂáΩÊï∞ÂëΩÂêçËßÑÂàôÔºöÈ©ºÂ≥∞ÂºèÂëΩÂêçÔºåÂêçÂ≠óÂèØ‰ª•Èïø‰ΩÜÊòØÂæóÊääÂäüËÉΩÔºåÂøÖË¶ÅÁöÑÂèÇÊï∞ÊèèËø∞Ê∏ÖÊ•öÔºåÂáΩÊï∞ÂêçÂêçÂ∫îÂΩìÊòØÂä®ËØçÊàñÂä®ËØçÁü≠ËØ≠ÔºåÂ¶ÇpostPayment„ÄÅdeletePage„ÄÅsave„ÄÇÂπ∂‰æùJavabeanÊ†áÂáÜÂä†‰∏äget„ÄÅset„ÄÅisÂâçÁºÄ„ÄÇ‰æãÂ¶ÇÔºöxxx + With + ÈúÄË¶ÅÁöÑÂèÇÊï∞Âêç + And + ÈúÄË¶ÅÁöÑÂèÇÊï∞Âêç + ‚Ä¶.. ÁªìÊûÑ‰ΩìÂëΩÂêçËßÑÂàôÔºöÁªìÊûÑ‰ΩìÂêçÂ∫îËØ•ÊòØÂêçËØçÊàñÂêçËØçÁü≠ËØ≠ÔºåÂ¶ÇCustome„ÄÅWikiPage„ÄÅAccount„ÄÅAddressParserÔºåÈÅøÂÖç‰ΩøÁî®Manager„ÄÅProcessor„ÄÅData„ÄÅInfo„ÄÅËøôÊ†∑ÁöÑÁ±ªÂêçÔºåÁ±ªÂêç‰∏çÂ∫îÂΩìÊòØÂä®ËØç„ÄÇ ÂåÖÂêçÂëΩÂêçËßÑÂàôÔºöÂåÖÂêçÂ∫îËØ•‰∏∫Â∞èÂÜôÂçïËØçÔºå‰∏çË¶Å‰ΩøÁî®‰∏ãÂàíÁ∫øÊàñËÄÖÊ∑∑ÂêàÂ§ßÂ∞èÂÜô„ÄÇ Êé•Âè£ÂëΩÂêçËßÑÂàôÔºöÂçï‰∏™ÂáΩÊï∞ÁöÑÊé•Âè£Âêç‰ª•‚Äùer‚Äù‰Ωú‰∏∫ÂêéÁºÄÔºåÂ¶ÇReader,Writer„ÄÇÊé•Âè£ÁöÑÂÆûÁé∞ÂàôÂéªÊéâ‚Äúer‚Äù„ÄÇ 123type Reader interface &#123; Read(p []byte) (n int, err error)&#125; ‰∏§‰∏™ÂáΩÊï∞ÁöÑÊé•Âè£ÂêçÁªºÂêà‰∏§‰∏™ÂáΩÊï∞Âêç1234type WriteFlusher interface &#123; Write([]byte) (int, error) Flush() error&#125; ‰∏â‰∏™‰ª•‰∏äÂáΩÊï∞ÁöÑÊé•Âè£ÂêçÔºåÊäΩË±°Ëøô‰∏™Êé•Âè£ÁöÑÂäüËÉΩÔºåÁ±ª‰ºº‰∫éÁªìÊûÑ‰ΩìÂêç12345type Car interface &#123; Start([]byte) Stop() error Recover()&#125; Â∏∏Èáè Â∏∏ÈáèÂùáÈúÄ‰ΩøÁî®ÂÖ®ÈÉ®Â§ßÂÜôÂ≠óÊØçÁªÑÊàêÔºåÂπ∂‰ΩøÁî®‰∏ãÂàíÁ∫øÂàÜËØçÔºö 1const APP_VER = &quot;1.0&quot; Â¶ÇÊûúÊòØÊûö‰∏æÁ±ªÂûãÁöÑÂ∏∏ÈáèÔºåÈúÄË¶ÅÂÖàÂàõÂª∫Áõ∏Â∫îÁ±ªÂûãÔºö 123456type Scheme stringconst ( HTTP Scheme = &quot;http&quot; HTTPS Scheme = &quot;https&quot;) Â¶ÇÊûúÊ®°ÂùóÁöÑÂäüËÉΩËæÉ‰∏∫Â§çÊùÇ„ÄÅÂ∏∏ÈáèÂêçÁß∞ÂÆπÊòìÊ∑∑Ê∑ÜÁöÑÊÉÖÂÜµ‰∏ãÔºå‰∏∫‰∫ÜÊõ¥Â•ΩÂú∞Âå∫ÂàÜÊûö‰∏æÁ±ªÂûãÔºåÂèØ‰ª•‰ΩøÁî®ÂÆåÊï¥ÁöÑÂâçÁºÄÔºö 1234567type PullRequestStatus intconst ( PULL_REQUEST_STATUS_CONFLICT PullRequestStatus = iota PULL_REQUEST_STATUS_CHECKING PULL_REQUEST_STATUS_MERGEABLE) ÂèòÈáè ÂèòÈáèÂëΩÂêçÂü∫Êú¨‰∏äÈÅµÂæ™Áõ∏Â∫îÁöÑËã±ÊñáË°®ËææÊàñÁÆÄÂÜô,Âú®Áõ∏ÂØπÁÆÄÂçïÁöÑÁéØÂ¢ÉÔºàÂØπË±°Êï∞ÈáèÂ∞ë„ÄÅÈíàÂØπÊÄßÂº∫Ôºâ‰∏≠ÔºåÂèØ‰ª•Â∞Ü‰∏Ä‰∫õÂêçÁß∞Áî±ÂÆåÊï¥ÂçïËØçÁÆÄÂÜô‰∏∫Âçï‰∏™Â≠óÊØçÔºå‰æãÂ¶ÇÔºö user ÂèØ‰ª•ÁÆÄÂÜô‰∏∫ u userID ÂèØ‰ª•ÁÆÄÂÜô uidËã•ÂèòÈáèÁ±ªÂûã‰∏∫ bool Á±ªÂûãÔºåÂàôÂêçÁß∞Â∫î‰ª• Has, Is, Can Êàñ Allow ÂºÄÂ§¥Ôºö 1234var isExist boolvar hasConflict boolvar canManage boolvar allowGitHook bool ÂèòÈáèÂëΩÂêçÊÉØ‰æã ÂèòÈáèÂêçÁß∞‰∏ÄËà¨ÈÅµÂæ™È©ºÂ≥∞Ê≥ïÔºå‰ΩÜÈÅáÂà∞ÁâπÊúâÂêçËØçÊó∂ÔºåÈúÄË¶ÅÈÅµÂæ™‰ª•‰∏ãËßÑÂàôÔºö Â¶ÇÊûúÂèòÈáè‰∏∫ÁßÅÊúâÔºå‰∏îÁâπÊúâÂêçËØç‰∏∫È¶ñ‰∏™ÂçïËØçÔºåÂàô‰ΩøÁî®Â∞èÂÜôÔºåÂ¶Ç apiClient ÂÖ∂ÂÆÉÊÉÖÂÜµÈÉΩÂ∫îÂΩì‰ΩøÁî®ËØ•ÂêçËØçÂéüÊúâÁöÑÂÜôÊ≥ïÔºåÂ¶Ç APIClient„ÄÅrepoID„ÄÅUserID ÈîôËØØÁ§∫‰æãÔºöUrlArrayÔºåÂ∫îËØ•ÂÜôÊàêurlArrayÊàñËÄÖURLArray ‰∏ãÈù¢Âàó‰∏æ‰∫Ü‰∏Ä‰∫õÂ∏∏ËßÅÁöÑÁâπÊúâÂêçËØçÔºö 123456789101112131415161718192021222324252627282930313233343536// A GonicMapper that contains a list of common initialisms taken from golang/lintvar LintGonicMapper = GonicMapper&#123; &quot;API&quot;: true, &quot;ASCII&quot;: true, &quot;CPU&quot;: true, &quot;CSS&quot;: true, &quot;DNS&quot;: true, &quot;EOF&quot;: true, &quot;GUID&quot;: true, &quot;HTML&quot;: true, &quot;HTTP&quot;: true, &quot;HTTPS&quot;: true, &quot;ID&quot;: true, &quot;IP&quot;: true, &quot;JSON&quot;: true, &quot;LHS&quot;: true, &quot;QPS&quot;: true, &quot;RAM&quot;: true, &quot;RHS&quot;: true, &quot;RPC&quot;: true, &quot;SLA&quot;: true, &quot;SMTP&quot;: true, &quot;SSH&quot;: true, &quot;TLS&quot;: true, &quot;TTL&quot;: true, &quot;UI&quot;: true, &quot;UID&quot;: true, &quot;UUID&quot;: true, &quot;URI&quot;: true, &quot;URL&quot;: true, &quot;UTF8&quot;: true, &quot;VM&quot;: true, &quot;XML&quot;: true, &quot;XSRF&quot;: true, &quot;XSS&quot;: true,&#125; structËßÑËåÉ structÁî≥ÊòéÂíåÂàùÂßãÂåñÊ†ºÂºèÈááÁî®Â§öË°åÔºö ÂÆö‰πâÂ¶Ç‰∏ãÔºö 1234type User struct&#123; Username string Email string&#125; ÂàùÂßãÂåñÂ¶Ç‰∏ãÔºö 1234u := User&#123; Username: &quot;test&quot;, Email: &quot;test@gmail.com&quot;,&#125; ÊéßÂà∂ÁªìÊûÑ ififÊé•ÂèóÂàùÂßãÂåñËØ≠Âè•ÔºåÁ∫¶ÂÆöÂ¶Ç‰∏ãÊñπÂºèÂª∫Á´ãÂ±ÄÈÉ®ÂèòÈáè 123if err := file.Chmod(0664); err != nil &#123; return err&#125; forÈááÁî®Áü≠Â£∞ÊòéÂª∫Á´ãÂ±ÄÈÉ®ÂèòÈáè 1234sum := 0for i := 0; i &lt; 10; i++ &#123; sum += i&#125; returnÂ∞ΩÊó©returnÔºö‰∏ÄÊó¶ÊúâÈîôËØØÂèëÁîüÔºåÈ©¨‰∏äËøîÂõû 12345678910f, err := os.Open(name)if err != nil &#123; return err&#125;d, err := f.Stat()if err != nil &#123; f.Close() return err&#125;codeUsing(f, d) ÈîôËØØÂ§ÑÁêÜ error‰Ωú‰∏∫ÂáΩÊï∞ÁöÑÂÄºËøîÂõû,ÂøÖÈ°ªÂØπerrorËøõË°åÂ§ÑÁêÜ ÈîôËØØÊèèËø∞Â¶ÇÊûúÊòØËã±ÊñáÂøÖÈ°ª‰∏∫Â∞èÂÜôÔºå‰∏çÈúÄË¶ÅÊ†áÁÇπÁªìÂ∞æ ÈááÁî®Áã¨Á´ãÁöÑÈîôËØØÊµÅËøõË°åÂ§ÑÁêÜ ‰∏çË¶ÅÈááÁî®‰∏ãÈù¢ÁöÑÂ§ÑÁêÜÈîôËØØÂÜôÊ≥ï 12345if err != nil &#123; // error handling&#125; else &#123; // normal code&#125; ÈááÁî®‰∏ãÈù¢ÁöÑÂÜôÊ≥ï 12345if err != nil &#123; // error handling return // or continue, etc.&#125;// normal code ‰ΩøÁî®ÂáΩÊï∞ÁöÑËøîÂõûÂÄºÊó∂ÔºåÂàôÈááÁî®‰∏ãÈù¢ÁöÑÊñπÂºè 123456x, err := f()if err != nil &#123; // error handling return&#125;// use x panic Â∞ΩÈáè‰∏çË¶Å‰ΩøÁî®panicÔºåÈô§Èùû‰Ω†Áü•ÈÅì‰Ω†Âú®ÂÅö‰ªÄ‰πà import ÂØπimportÁöÑÂåÖËøõË°åÂàÜÁªÑÁÆ°ÁêÜÔºåÁî®Êç¢Ë°åÁ¨¶ÂàÜÂâ≤ÔºåËÄå‰∏îÊ†áÂáÜÂ∫ì‰Ωú‰∏∫ÂàÜÁªÑÁöÑÁ¨¨‰∏ÄÁªÑ„ÄÇÂ¶ÇÊûú‰Ω†ÁöÑÂåÖÂºïÂÖ•‰∫Ü‰∏âÁßçÁ±ªÂûãÁöÑÂåÖÔºåÊ†áÂáÜÂ∫ìÂåÖÔºåÁ®ãÂ∫èÂÜÖÈÉ®ÂåÖÔºåÁ¨¨‰∏âÊñπÂåÖÔºåÂª∫ËÆÆÈááÁî®Â¶Ç‰∏ãÊñπÂºèËøõË°åÁªÑÁªá‰Ω†ÁöÑÂåÖ 123456789101112package mainimport ( &quot;fmt&quot; &quot;os&quot; &quot;kmg/a&quot; &quot;kmg/b&quot; &quot;code.google.com/a&quot; &quot;github.com/b&quot;) Âú®È°πÁõÆ‰∏≠‰∏çË¶Å‰ΩøÁî®Áõ∏ÂØπË∑ØÂæÑÂºïÂÖ•ÂåÖÔºö 12345// ÈîôËØØÁ§∫‰æãimport ‚Äú../net‚Äù// Ê≠£Á°ÆÁöÑÂÅöÊ≥ïimport ‚Äúgithub.com/repo/proj/src/net‚Äù goimports‰ºöËá™Âä®Â∏Æ‰Ω†Ê†ºÂºèÂåñ ÂèÇÊï∞‰º†ÈÄí ÂØπ‰∫éÂ∞ëÈáèÊï∞ÊçÆÔºå‰∏çË¶Å‰º†ÈÄíÊåáÈíà ÂØπ‰∫éÂ§ßÈáèÊï∞ÊçÆÁöÑstructÂèØ‰ª•ËÄÉËôë‰ΩøÁî®ÊåáÈíà ‰º†ÂÖ•ÂèÇÊï∞ÊòØmapÔºåsliceÔºåchan‰∏çË¶Å‰º†ÈÄíÊåáÈíàÔºåÂõ†‰∏∫mapÔºåsliceÔºåchanÊòØÂºïÁî®Á±ªÂûãÔºå‰∏çÈúÄË¶Å‰º†ÈÄíÊåáÈíàÁöÑÊåáÈíà ÂçïÂÖÉÊµãËØï ÂçïÂÖÉÊµãËØïÊñá‰ª∂ÂêçÂëΩÂêçËßÑËåÉ‰∏∫ example_test.goÊµãËØïÁî®‰æãÁöÑÂáΩÊï∞ÂêçÁß∞ÂøÖÈ°ª‰ª• Test ÂºÄÂ§¥Ôºå‰æãÂ¶ÇÔºöTestExample]]></content>
      <categories>
        <category>golang</category>
      </categories>
      <tags>
        <tag>golang</tag>
      </tags>
  </entry>
</search>
